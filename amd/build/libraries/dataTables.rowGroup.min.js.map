{"version":3,"file":"dataTables.rowGroup.min.js","sources":["../../src/libraries/dataTables.rowGroup.js"],"sourcesContent":["/* eslint-disable */\n/*! RowGroup 1.5.0\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'mod_interactivevideo/libraries/datatables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('mod_interactivevideo/libraries/datatables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * @summary     RowGroup\n * @description RowGrouping for DataTables\n * @version     1.5.0\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\nvar RowGroup = function (dt, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('1.11')) {\n\t\tthrow 'RowGroup requires DataTables 1.11 or newer';\n\t}\n\n\t// User and defaults configuration object\n\tthis.c = $.extend(true, {}, DataTable.defaults.rowGroup, RowGroup.defaults, opts);\n\n\t// Internal settings\n\tthis.s = {\n\t\tdt: new DataTable.Api(dt)\n\t};\n\n\t// DOM items\n\tthis.dom = {};\n\n\t// Check if row grouping has already been initialised on this table\n\tvar settings = this.s.dt.settings()[0];\n\tvar existing = settings.rowGroup;\n\tif (existing) {\n\t\treturn existing;\n\t}\n\n\tsettings.rowGroup = this;\n\tthis._constructor();\n};\n\n$.extend(RowGroup.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * API methods for DataTables API interface\n\t */\n\n\t/**\n\t * Get/set the grouping data source - need to call draw after this is\n\t * executed as a setter\n\t * @returns string~RowGroup\n\t */\n\tdataSrc: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.c.dataSrc;\n\t\t}\n\n\t\tvar dt = this.s.dt;\n\n\t\tthis.c.dataSrc = val;\n\n\t\t$(dt.table().node()).triggerHandler('rowgroup-datasrc.dt', [dt, val]);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Disable - need to call draw after this is executed\n\t * @returns RowGroup\n\t */\n\tdisable: function () {\n\t\tthis.c.enable = false;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable - need to call draw after this is executed\n\t * @returns RowGroup\n\t */\n\tenable: function (flag) {\n\t\tif (flag === false) {\n\t\t\treturn this.disable();\n\t\t}\n\n\t\tthis.c.enable = true;\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get enabled flag\n\t * @returns boolean\n\t */\n\tenabled: function () {\n\t\treturn this.c.enable;\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar hostSettings = dt.settings()[0];\n\n\t\tdt.on('draw.dtrg', function (e, s) {\n\t\t\tif (that.c.enable && hostSettings === s) {\n\t\t\t\tthat._draw();\n\t\t\t}\n\t\t});\n\n\t\tdt.on('column-visibility.dt.dtrg responsive-resize.dt.dtrg', function () {\n\t\t\tthat._adjustColspan();\n\t\t});\n\n\t\tdt.on('destroy', function () {\n\t\t\tdt.off('.dtrg');\n\t\t});\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Adjust column span when column visibility changes\n\t * @private\n\t */\n\t_adjustColspan: function () {\n\t\t$('tr.' + this.c.className, this.s.dt.table().body())\n\t\t\t.find('th:visible, td:visible')\n\t\t\t.attr('colspan', this._colspan());\n\t},\n\n\t/**\n\t * Get the number of columns that a grouping row should span\n\t * @private\n\t */\n\t_colspan: function () {\n\t\treturn this.s.dt\n\t\t\t.columns()\n\t\t\t.visible()\n\t\t\t.reduce(function (a, b) {\n\t\t\t\treturn a + b;\n\t\t\t}, 0);\n\t},\n\n\t/**\n\t * Update function that is called whenever we need to draw the grouping rows.\n\t * This is basically a bootstrap for the self iterative _group and _groupDisplay\n\t * methods\n\t * @private\n\t */\n\t_draw: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar groupedRows = this._group(0, dt.rows({ page: 'current' }).indexes());\n\n\t\tthis._groupDisplay(0, groupedRows);\n\t},\n\n\t/**\n\t * Get the grouping information from a data set (index) of rows\n\t * @param {number} level Nesting level\n\t * @param {DataTables.Api} rows API of the rows to consider for this group\n\t * @returns {object[]} Nested grouping information - it is structured like this:\n\t *\t{\n\t *\t\tdataPoint: 'Edinburgh',\n\t *\t\trows: [ 1,2,3,4,5,6,7 ],\n\t *\t\tchildren: [ {\n\t *\t\t\tdataPoint: 'developer'\n\t *\t\t\trows: [ 1, 2, 3 ]\n\t *\t\t},\n\t *\t\t{\n\t *\t\t\tdataPoint: 'support',\n\t *\t\t\trows: [ 4, 5, 6, 7 ]\n\t *\t\t} ]\n\t *\t}\n\t * @private\n\t */\n\t_group: function (level, rows) {\n\t\tvar fns = Array.isArray(this.c.dataSrc) ? this.c.dataSrc : [this.c.dataSrc];\n\t\tvar fn = DataTable.util.get(fns[level]);\n\t\tvar dt = this.s.dt;\n\t\tvar group, last;\n\t\tvar i, ien;\n\t\tvar data = [];\n\t\tvar that = this;\n\n\t\tfor (i = 0, ien = rows.length; i < ien; i++) {\n\t\t\tvar rowIndex = rows[i];\n\t\t\tvar rowData = dt.row(rowIndex).data();\n\n\t\t\tgroup = fn(rowData, level);\n\n\t\t\tif (group === null || group === undefined) {\n\t\t\t\tgroup = that.c.emptyDataGroup;\n\t\t\t}\n\n\t\t\tif (last === undefined || group !== last) {\n\t\t\t\tdata.push({\n\t\t\t\t\tdataPoint: group,\n\t\t\t\t\trows: []\n\t\t\t\t});\n\n\t\t\t\tlast = group;\n\t\t\t}\n\n\t\t\tdata[data.length - 1].rows.push(rowIndex);\n\t\t}\n\n\t\tif (fns[level + 1] !== undefined) {\n\t\t\tfor (i = 0, ien = data.length; i < ien; i++) {\n\t\t\t\tdata[i].children = this._group(level + 1, data[i].rows);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t * Row group display - insert the rows into the document\n\t * @param {number} level Nesting level\n\t * @param {object[]} groups Takes the nested array from `_group`\n\t * @private\n\t */\n\t_groupDisplay: function (level, groups) {\n\t\tvar dt = this.s.dt;\n\t\tvar display;\n\n\t\tfor (var i = 0, ien = groups.length; i < ien; i++) {\n\t\t\tvar group = groups[i];\n\t\t\tvar groupName = group.dataPoint;\n\t\t\tvar row;\n\t\t\tvar rows = group.rows;\n\n\t\t\tif (this.c.startRender) {\n\t\t\t\tdisplay = this.c.startRender.call(this, dt.rows(rows), groupName, level);\n\t\t\t\trow = this._rowWrap(display, this.c.startClassName, level);\n\n\t\t\t\tif (row) {\n\t\t\t\t\trow.insertBefore(dt.row(rows[0]).node());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.c.endRender) {\n\t\t\t\tdisplay = this.c.endRender.call(this, dt.rows(rows), groupName, level);\n\t\t\t\trow = this._rowWrap(display, this.c.endClassName, level);\n\n\t\t\t\tif (row) {\n\t\t\t\t\trow.insertAfter(dt.row(rows[rows.length - 1]).node());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (group.children) {\n\t\t\t\tthis._groupDisplay(level + 1, group.children);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Take a rendered value from an end user and make it suitable for display\n\t * as a row, by wrapping it in a row, or detecting that it is a row.\n\t * @param {node|jQuery|string} display Display value\n\t * @param {string} className Class to add to the row\n\t * @param {array} group\n\t * @param {number} group level\n\t * @private\n\t */\n\t_rowWrap: function (display, className, level) {\n\t\tvar row;\n\n\t\tif (display === null || display === '') {\n\t\t\tdisplay = this.c.emptyDataGroup;\n\t\t}\n\n\t\tif (display === undefined || display === null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (\n\t\t\ttypeof display === 'object' &&\n\t\t\tdisplay.nodeName &&\n\t\t\tdisplay.nodeName.toLowerCase() === 'tr'\n\t\t) {\n\t\t\trow = $(display);\n\t\t}\n\t\telse if (\n\t\t\tdisplay instanceof $ &&\n\t\t\tdisplay.length &&\n\t\t\tdisplay[0].nodeName.toLowerCase() === 'tr'\n\t\t) {\n\t\t\trow = display;\n\t\t}\n\t\telse {\n\t\t\trow = $('<tr/>').append(\n\t\t\t\t$('<th/>').attr('colspan', this._colspan()).attr('scope', 'row').append(display)\n\t\t\t);\n\t\t}\n\n\t\treturn row\n\t\t\t.addClass(this.c.className)\n\t\t\t.addClass(className)\n\t\t\t.addClass('dtrg-level-' + level);\n\t}\n});\n\n/**\n * RowGroup default settings for initialisation\n *\n * @namespace\n * @name RowGroup.defaults\n * @static\n */\nRowGroup.defaults = {\n\t/**\n\t * Class to apply to grouping rows - applied to both the start and\n\t * end grouping rows.\n\t * @type string\n\t */\n\tclassName: 'dtrg-group',\n\n\t/**\n\t * Data property from which to read the grouping information\n\t * @type string|integer|array\n\t */\n\tdataSrc: 0,\n\n\t/**\n\t * Text to show if no data is found for a group\n\t * @type string\n\t */\n\temptyDataGroup: 'No group',\n\n\t/**\n\t * Initial enablement state\n\t * @boolean\n\t */\n\tenable: true,\n\n\t/**\n\t * Class name to give to the end grouping row\n\t * @type string\n\t */\n\tendClassName: 'dtrg-end',\n\n\t/**\n\t * End grouping label function\n\t * @function\n\t */\n\tendRender: null,\n\n\t/**\n\t * Class name to give to the start grouping row\n\t * @type string\n\t */\n\tstartClassName: 'dtrg-start',\n\n\t/**\n\t * Start grouping label function\n\t * @function\n\t */\n\tstartRender: function (rows, group) {\n\t\treturn group;\n\t}\n};\n\nRowGroup.version = '1.5.0';\n\n$.fn.dataTable.RowGroup = RowGroup;\n$.fn.DataTable.RowGroup = RowGroup;\n\nDataTable.Api.register('rowGroup()', function () {\n\treturn this;\n});\n\nDataTable.Api.register('rowGroup().disable()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx.rowGroup) {\n\t\t\tctx.rowGroup.enable(false);\n\t\t}\n\t});\n});\n\nDataTable.Api.register('rowGroup().enable()', function (opts) {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx.rowGroup) {\n\t\t\tctx.rowGroup.enable(opts === undefined ? true : opts);\n\t\t}\n\t});\n});\n\nDataTable.Api.register('rowGroup().enabled()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && ctx[0].rowGroup ? ctx[0].rowGroup.enabled() : false;\n});\n\nDataTable.Api.register('rowGroup().dataSrc()', function (val) {\n\tif (val === undefined) {\n\t\treturn this.context[0].rowGroup.dataSrc();\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx.rowGroup) {\n\t\t\tctx.rowGroup.dataSrc(val);\n\t\t}\n\t});\n});\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtrg', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.rowGroup;\n\tvar defaults = DataTable.defaults.rowGroup;\n\n\tif (init || defaults) {\n\t\tvar opts = $.extend({}, defaults, init);\n\n\t\tif (init !== false) {\n\t\t\tnew RowGroup(settings, opts);\n\t\t}\n\t}\n});\n\n\nreturn DataTable;\n}));\n"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","DataTable","RowGroup","dt","opts","versionCheck","c","extend","defaults","rowGroup","s","Api","dom","settings","this","existing","_constructor","prototype","dataSrc","val","undefined","table","node","triggerHandler","disable","enable","flag","enabled","that","hostSettings","on","e","_draw","_adjustColspan","off","className","body","find","attr","_colspan","columns","visible","reduce","a","b","groupedRows","_group","rows","page","indexes","_groupDisplay","level","group","last","i","ien","fns","Array","isArray","util","get","data","length","rowIndex","row","emptyDataGroup","push","dataPoint","children","groups","display","groupName","startRender","call","_rowWrap","startClassName","insertBefore","endRender","endClassName","insertAfter","nodeName","toLowerCase","append","addClass","version","register","iterator","ctx","context","json","namespace","init","oInit"],"mappings":"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"}