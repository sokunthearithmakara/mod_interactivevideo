{"version":3,"file":"dataTables.responsive.min.js","sources":["../../src/libraries/dataTables.responsive.js"],"sourcesContent":["/* eslint-disable */\n/*! Responsive 3.0.3\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'mod_interactivevideo/libraries/datatables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('mod_interactivevideo/libraries/datatables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * @summary     Responsive\n * @description Responsive tables plug-in for DataTables\n * @version     3.0.3\n * @author      SpryMedia Ltd\n * @copyright   SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * Responsive is a plug-in for the DataTables library that makes use of\n * DataTables' ability to change the visibility of columns, changing the\n * visibility of columns so the displayed columns fit into the table container.\n * The end result is that complex tables will be dynamically adjusted to fit\n * into the viewport, be it on a desktop, tablet or mobile browser.\n *\n * Responsive for DataTables has two modes of operation, which can used\n * individually or combined:\n *\n * * Class name based control - columns assigned class names that match the\n *   breakpoint logic can be shown / hidden as required for each breakpoint.\n * * Automatic control - columns are automatically hidden when there is no\n *   room left to display them. Columns removed from the right.\n *\n * In additional to column visibility control, Responsive also has built into\n * options to use DataTables' child row display to show / hide the information\n * from the table that has been hidden. There are also two modes of operation\n * for this child row display:\n *\n * * Inline - when the control element that the user can use to show / hide\n *   child rows is displayed inside the first column of the table.\n * * Column - where a whole column is dedicated to be the show / hide control.\n *\n * Initialisation of Responsive is performed by:\n *\n * * Adding the class `responsive` or `dt-responsive` to the table. In this case\n *   Responsive will automatically be initialised with the default configuration\n *   options when the DataTable is created.\n * * Using the `responsive` option in the DataTables configuration options. This\n *   can also be used to specify the configuration options, or simply set to\n *   `true` to use the defaults.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.10.3+\n *\n *  @example\n *      $('#example').DataTable( {\n *        responsive: true\n *      } );\n *    } );\n */\nvar Responsive = function (settings, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('2')) {\n\t\tthrow 'DataTables Responsive requires DataTables 2 or newer';\n\t}\n\n\tthis.s = {\n\t\tchildNodeStore: {},\n\t\tcolumns: [],\n\t\tcurrent: [],\n\t\tdt: new DataTable.Api(settings)\n\t};\n\n\t// Check if responsive has already been initialised on this table\n\tif (this.s.dt.settings()[0].responsive) {\n\t\treturn;\n\t}\n\n\t// details is an object, but for simplicity the user can give it as a string\n\t// or a boolean\n\tif (opts && typeof opts.details === 'string') {\n\t\topts.details = { type: opts.details };\n\t}\n\telse if (opts && opts.details === false) {\n\t\topts.details = { type: false };\n\t}\n\telse if (opts && opts.details === true) {\n\t\topts.details = { type: 'inline' };\n\t}\n\n\tthis.c = $.extend(\n\t\ttrue,\n\t\t{},\n\t\tResponsive.defaults,\n\t\tDataTable.defaults.responsive,\n\t\topts\n\t);\n\tsettings.responsive = this;\n\tthis._constructor();\n};\n\n$.extend(Responsive.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the Responsive instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar oldWindowWidth = $(window).innerWidth();\n\n\t\tdt.settings()[0]._responsive = this;\n\n\t\t// Use DataTables' throttle function to avoid processor thrashing\n\t\t$(window).on(\n\t\t\t'orientationchange.dtr',\n\t\t\tDataTable.util.throttle(function () {\n\t\t\t\t// iOS has a bug whereby resize can fire when only scrolling\n\t\t\t\t// See: http://stackoverflow.com/questions/8898412\n\t\t\t\tvar width = $(window).innerWidth();\n\n\t\t\t\tif (width !== oldWindowWidth) {\n\t\t\t\t\tthat._resize();\n\t\t\t\t\toldWindowWidth = width;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// Handle new rows being dynamically added - needed as responsive\n\t\t// updates all rows (shown or not) a responsive change, rather than\n\t\t// per draw.\n\t\tdt.on('row-created.dtr', function (e, tr, data, idx) {\n\t\t\tif ($.inArray(false, that.s.current) !== -1) {\n\t\t\t\t$('>td, >th', tr).each(function (i) {\n\t\t\t\t\tvar idx = dt.column.index('toData', i);\n\n\t\t\t\t\tif (that.s.current[idx] === false) {\n\t\t\t\t\t\t$(this)\n\t\t\t\t\t\t\t.css('display', 'none')\n\t\t\t\t\t\t\t.addClass('dtr-hidden');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Destroy event handler\n\t\tdt.on('destroy.dtr', function () {\n\t\t\tdt.off('.dtr');\n\t\t\t$(dt.table().body()).off('.dtr');\n\t\t\t$(window).off('resize.dtr orientationchange.dtr');\n\t\t\tdt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');\n\t\t\t$(dt.table().node()).removeClass('dtr-inline collapsed');\n\n\t\t\t// Restore the columns that we've hidden\n\t\t\t$.each(that.s.current, function (i, val) {\n\t\t\t\tif (val === false) {\n\t\t\t\t\tthat._setColumnVis(i, true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// Reorder the breakpoints array here in case they have been added out\n\t\t// of order\n\t\tthis.c.breakpoints.sort(function (a, b) {\n\t\t\treturn a.width < b.width ? 1 : a.width > b.width ? -1 : 0;\n\t\t});\n\n\t\tthis._classLogic();\n\n\t\t// Details handler\n\t\tvar details = this.c.details;\n\n\t\tif (details.type !== false) {\n\t\t\tthat._detailsInit();\n\n\t\t\t// DataTables will trigger this event on every column it shows and\n\t\t\t// hides individually\n\t\t\tdt.on('column-visibility.dtr', function () {\n\t\t\t\t// Use a small debounce to allow multiple columns to be set together\n\t\t\t\tif (that._timer) {\n\t\t\t\t\tclearTimeout(that._timer);\n\t\t\t\t}\n\n\t\t\t\tthat._timer = setTimeout(function () {\n\t\t\t\t\tthat._timer = null;\n\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\n\t\t\t\t\tthat._redrawChildren();\n\t\t\t\t}, 100);\n\t\t\t});\n\n\t\t\t// Redraw the details box on each draw which will happen if the data\n\t\t\t// has changed. This is used until DataTables implements a native\n\t\t\t// `updated` event for rows\n\t\t\tdt.on('draw.dtr', function () {\n\t\t\t\tthat._redrawChildren();\n\t\t\t});\n\n\t\t\t$(dt.table().node()).addClass('dtr-' + details.type);\n\t\t}\n\n\t\t// DT2 let's us tell it if we are hiding columns\n\t\tdt.on('column-calc.dt', function (e, d) {\n\t\t\tvar curr = that.s.current;\n\n\t\t\tfor (var i = 0; i < curr.length; i++) {\n\t\t\t\tvar idx = d.visible.indexOf(i);\n\n\t\t\t\tif (curr[i] === false && idx >= 0) {\n\t\t\t\t\td.visible.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// On Ajax reload we want to reopen any child rows which are displayed\n\t\t// by responsive\n\t\tdt.on('preXhr.dtr', function () {\n\t\t\tvar rowIds = [];\n\t\t\tdt.rows().every(function () {\n\t\t\t\tif (this.child.isShown()) {\n\t\t\t\t\trowIds.push(this.id(true));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdt.one('draw.dtr', function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\tdt.rows(rowIds).every(function () {\n\t\t\t\t\tthat._detailsDisplay(this, false);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\t// First pass when the table is ready\n\t\tdt\n\t\t\t.on('draw.dtr', function () {\n\t\t\t\tthat._controlClass();\n\t\t\t})\n\t\t\t.ready(function () {\n\t\t\t\tthat._resizeAuto();\n\t\t\t\tthat._resize();\n\n\t\t\t\t// Attach listeners after first pass\n\t\t\t\tdt.on('column-reorder.dtr', function (e, settings, details) {\n\t\t\t\t\tthat._classLogic();\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize(true);\n\t\t\t\t});\n\n\t\t\t\t// Change in column sizes means we need to calc\n\t\t\t\tdt.on('column-sizing.dtr', function () {\n\t\t\t\t\tthat._resizeAuto();\n\t\t\t\t\tthat._resize();\n\t\t\t\t});\n\t\t\t});\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Insert a `col` tag into the correct location in a `colgroup`.\n\t *\n\t * @param {jQuery} colGroup The `colgroup` tag\n\t * @param {jQuery} colEl The `col` tag\n\t */\n\t_colGroupAttach: function (colGroup, colEls, idx) {\n\t\tvar found = null;\n\n\t\t// No need to do anything if already attached\n\t\tif (colEls[idx].get(0).parentNode === colGroup[0]) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Find the first `col` after our own which is already attached\n\t\tfor (var i = idx+1; i < colEls.length; i++) {\n\t\t\tif (colGroup[0] === colEls[i].get(0).parentNode) {\n\t\t\t\tfound = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (found !== null) {\n\t\t\t// Insert before\n\t\t\tcolEls[idx].insertBefore(colEls[found][0]);\n\t\t}\n\t\telse {\n\t\t\t// If wasn't found, insert at the end\n\t\t\tcolGroup.append(colEls[idx]);\n\t\t}\n\t},\n\n\t/**\n\t * Get and store nodes from a cell - use for node moving renderers\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodes: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (this.s.childNodeStore[name]) {\n\t\t\treturn this.s.childNodeStore[name];\n\t\t}\n\n\t\t// https://jsperf.com/childnodes-array-slice-vs-loop\n\t\tvar nodes = [];\n\t\tvar children = dt.cell(row, col).node().childNodes;\n\t\tfor (var i = 0, ien = children.length; i < ien; i++) {\n\t\t\tnodes.push(children[i]);\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = nodes;\n\n\t\treturn nodes;\n\t},\n\n\t/**\n\t * Restore nodes from the cache to a table cell\n\t *\n\t * @param {*} dt DT instance\n\t * @param {*} row Row index\n\t * @param {*} col Column index\n\t */\n\t_childNodesRestore: function (dt, row, col) {\n\t\tvar name = row + '-' + col;\n\n\t\tif (!this.s.childNodeStore[name]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar node = dt.cell(row, col).node();\n\t\tvar store = this.s.childNodeStore[name];\n\t\tif (store.length > 0) {\n\t\t\tvar parent = store[0].parentNode;\n\t\t\tvar parentChildren = parent.childNodes;\n\t\t\tvar a = [];\n\n\t\t\tfor (var i = 0, ien = parentChildren.length; i < ien; i++) {\n\t\t\t\ta.push(parentChildren[i]);\n\t\t\t}\n\n\t\t\tfor (var j = 0, jen = a.length; j < jen; j++) {\n\t\t\t\tnode.appendChild(a[j]);\n\t\t\t}\n\t\t}\n\n\t\tthis.s.childNodeStore[name] = undefined;\n\t},\n\n\t/**\n\t * Calculate the visibility for the columns in a table for a given\n\t * breakpoint. The result is pre-determined based on the class logic if\n\t * class names are used to control all columns, but the width of the table\n\t * is also used if there are columns which are to be automatically shown\n\t * and hidden.\n\t *\n\t * @param  {string} breakpoint Breakpoint name to use for the calculation\n\t * @return {array} Array of boolean values initiating the visibility of each\n\t *   column.\n\t *  @private\n\t */\n\t_columnsVisiblity: function (breakpoint) {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\n\t\t// Create an array that defines the column ordering based first on the\n\t\t// column's priority, and secondly the column index. This allows the\n\t\t// columns to be removed from the right if the priority matches\n\t\tvar order = columns\n\t\t\t.map(function (col, idx) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnIdx: idx,\n\t\t\t\t\tpriority: col.priority\n\t\t\t\t};\n\t\t\t})\n\t\t\t.sort(function (a, b) {\n\t\t\t\tif (a.priority !== b.priority) {\n\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t}\n\t\t\t\treturn a.columnIdx - b.columnIdx;\n\t\t\t});\n\n\t\t// Class logic - determine which columns are in this breakpoint based\n\t\t// on the classes. If no class control (i.e. `auto`) then `-` is used\n\t\t// to indicate this to the rest of the function\n\t\tvar display = $.map(columns, function (col, i) {\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn 'not-visible';\n\t\t\t}\n\t\t\treturn col.auto && col.minWidth === null\n\t\t\t\t? false\n\t\t\t\t: col.auto === true\n\t\t\t\t? '-'\n\t\t\t\t: $.inArray(breakpoint, col.includeIn) !== -1;\n\t\t});\n\n\t\t// Auto column control - first pass: how much width is taken by the\n\t\t// ones that must be included from the non-auto columns\n\t\tvar requiredWidth = 0;\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (display[i] === true) {\n\t\t\t\trequiredWidth += columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Second pass, use up any remaining width for other columns. For\n\t\t// scrolling tables we need to subtract the width of the scrollbar. It\n\t\t// may not be requires which makes this sub-optimal, but it would\n\t\t// require another full redraw to make complete use of those extra few\n\t\t// pixels\n\t\tvar scrolling = dt.settings()[0].oScroll;\n\t\tvar bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;\n\t\tvar widthAvailable = dt.table().container().offsetWidth - bar;\n\t\tvar usedWidth = widthAvailable - requiredWidth;\n\n\t\t// Control column needs to always be included. This makes it sub-\n\t\t// optimal in terms of using the available with, but to stop layout\n\t\t// thrashing or overflow. Also we need to account for the control column\n\t\t// width first so we know how much width is available for the other\n\t\t// columns, since the control column might not be the first one shown\n\t\tfor (i = 0, ien = display.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tusedWidth -= columns[i].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Allow columns to be shown (counting by priority and then right to\n\t\t// left) until we run out of room\n\t\tvar empty = false;\n\t\tfor (i = 0, ien = order.length; i < ien; i++) {\n\t\t\tvar colIdx = order[i].columnIdx;\n\n\t\t\tif (\n\t\t\t\tdisplay[colIdx] === '-' &&\n\t\t\t\t!columns[colIdx].control &&\n\t\t\t\tcolumns[colIdx].minWidth\n\t\t\t) {\n\t\t\t\t// Once we've found a column that won't fit we don't let any\n\t\t\t\t// others display either, or columns might disappear in the\n\t\t\t\t// middle of the table\n\t\t\t\tif (empty || usedWidth - columns[colIdx].minWidth < 0) {\n\t\t\t\t\tempty = true;\n\t\t\t\t\tdisplay[colIdx] = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdisplay[colIdx] = true;\n\t\t\t\t}\n\n\t\t\t\tusedWidth -= columns[colIdx].minWidth;\n\t\t\t}\n\t\t}\n\n\t\t// Determine if the 'control' column should be shown (if there is one).\n\t\t// This is the case when there is a hidden column (that is not the\n\t\t// control column). The two loops look inefficient here, but they are\n\t\t// trivial and will fly through. We need to know the outcome from the\n\t\t// first , before the action in the second can be taken\n\t\tvar showControl = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\tdisplay[i] === false\n\t\t\t) {\n\t\t\t\tshowControl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (columns[i].control) {\n\t\t\t\tdisplay[i] = showControl;\n\t\t\t}\n\n\t\t\t// Replace not visible string with false from the control column detection above\n\t\t\tif (display[i] === 'not-visible') {\n\t\t\t\tdisplay[i] = false;\n\t\t\t}\n\t\t}\n\n\t\t// Finally we need to make sure that there is at least one column that\n\t\t// is visible\n\t\tif ($.inArray(true, display) === -1) {\n\t\t\tdisplay[0] = true;\n\t\t}\n\n\t\treturn display;\n\t},\n\n\t/**\n\t * Create the internal `columns` array with information about the columns\n\t * for the table. This includes determining which breakpoints the column\n\t * will appear in, based upon class names in the column, which makes up the\n\t * vast majority of this method.\n\t *\n\t * @private\n\t */\n\t_classLogic: function () {\n\t\tvar that = this;\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar dt = this.s.dt;\n\t\tvar columns = dt\n\t\t\t.columns()\n\t\t\t.eq(0)\n\t\t\t.map(function (i) {\n\t\t\t\tvar column = this.column(i);\n\t\t\t\tvar className = column.header().className;\n\t\t\t\tvar priority = column.init().responsivePriority;\n\t\t\t\tvar dataPriority = column\n\t\t\t\t\t.header()\n\t\t\t\t\t.getAttribute('data-priority');\n\n\t\t\t\tif (priority === undefined) {\n\t\t\t\t\tpriority =\n\t\t\t\t\t\tdataPriority === undefined || dataPriority === null\n\t\t\t\t\t\t\t? 10000\n\t\t\t\t\t\t\t: dataPriority * 1;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tincludeIn: [],\n\t\t\t\t\tauto: false,\n\t\t\t\t\tcontrol: false,\n\t\t\t\t\tnever: className.match(/\\b(dtr\\-)?never\\b/) ? true : false,\n\t\t\t\t\tpriority: priority\n\t\t\t\t};\n\t\t\t});\n\n\t\t// Simply add a breakpoint to `includeIn` array, ensuring that there are\n\t\t// no duplicates\n\t\tvar add = function (colIdx, name) {\n\t\t\tvar includeIn = columns[colIdx].includeIn;\n\n\t\t\tif ($.inArray(name, includeIn) === -1) {\n\t\t\t\tincludeIn.push(name);\n\t\t\t}\n\t\t};\n\n\t\tvar column = function (colIdx, name, operator, matched) {\n\t\t\tvar size, i, ien;\n\n\t\t\tif (!operator) {\n\t\t\t\tcolumns[colIdx].includeIn.push(name);\n\t\t\t}\n\t\t\telse if (operator === 'max-') {\n\t\t\t\t// Add this breakpoint and all smaller\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width <= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'min-') {\n\t\t\t\t// Add this breakpoint and all larger\n\t\t\t\tsize = that._find(name).width;\n\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].width >= size) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (operator === 'not-') {\n\t\t\t\t// Add all but this breakpoint\n\t\t\t\tfor (i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\t\t\tif (breakpoints[i].name.indexOf(matched) === -1) {\n\t\t\t\t\t\tadd(colIdx, breakpoints[i].name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Loop over each column and determine if it has a responsive control\n\t\t// class\n\t\tcolumns.each(function (col, i) {\n\t\t\tvar classNames = col.className.split(' ');\n\t\t\tvar hasClass = false;\n\n\t\t\t// Split the class name up so multiple rules can be applied if needed\n\t\t\tfor (var k = 0, ken = classNames.length; k < ken; k++) {\n\t\t\t\tvar className = classNames[k].trim();\n\n\t\t\t\tif (className === 'all' || className === 'dtr-all') {\n\t\t\t\t\t// Include in all\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.includeIn = $.map(breakpoints, function (a) {\n\t\t\t\t\t\treturn a.name;\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'none' ||\n\t\t\t\t\tclassName === 'dtr-none' ||\n\t\t\t\t\tcol.never\n\t\t\t\t) {\n\t\t\t\t\t// Include in none (default) and no auto\n\t\t\t\t\thasClass = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\telse if (\n\t\t\t\t\tclassName === 'control' ||\n\t\t\t\t\tclassName === 'dtr-control'\n\t\t\t\t) {\n\t\t\t\t\t// Special column that is only visible, when one of the other\n\t\t\t\t\t// columns is hidden. This is used for the details control\n\t\t\t\t\thasClass = true;\n\t\t\t\t\tcol.control = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t$.each(breakpoints, function (j, breakpoint) {\n\t\t\t\t\t// Does this column have a class that matches this breakpoint?\n\t\t\t\t\tvar brokenPoint = breakpoint.name.split('-');\n\t\t\t\t\tvar re = new RegExp(\n\t\t\t\t\t\t'(min\\\\-|max\\\\-|not\\\\-)?(' +\n\t\t\t\t\t\t\tbrokenPoint[0] +\n\t\t\t\t\t\t\t')(\\\\-[_a-zA-Z0-9])?'\n\t\t\t\t\t);\n\t\t\t\t\tvar match = className.match(re);\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\thasClass = true;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmatch[2] === brokenPoint[0] &&\n\t\t\t\t\t\t\tmatch[3] === '-' + brokenPoint[1]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Class name matches breakpoint name fully\n\t\t\t\t\t\t\tcolumn(\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tbreakpoint.name,\n\t\t\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\t\t\tmatch[2] + match[3]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (match[2] === brokenPoint[0] && !match[3]) {\n\t\t\t\t\t\t\t// Class name matched primary breakpoint name with no qualifier\n\t\t\t\t\t\t\tcolumn(i, breakpoint.name, match[1], match[2]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If there was no control class, then automatic sizing is used\n\t\t\tif (!hasClass) {\n\t\t\t\tcol.auto = true;\n\t\t\t}\n\t\t});\n\n\t\tthis.s.columns = columns;\n\t},\n\n\t/**\n\t * Update the cells to show the correct control class / button\n\t * @private\n\t */\n\t_controlClass: function () {\n\t\tif (this.c.details.type === 'inline') {\n\t\t\tvar dt = this.s.dt;\n\t\t\tvar columnsVis = this.s.current;\n\t\t\tvar firstVisible = $.inArray(true, columnsVis);\n\n\t\t\t// Remove from any cells which shouldn't have it\n\t\t\tdt.cells(\n\t\t\t\tnull,\n\t\t\t\tfunction (idx) {\n\t\t\t\t\treturn idx !== firstVisible;\n\t\t\t\t},\n\t\t\t\t{ page: 'current' }\n\t\t\t)\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.filter('.dtr-control')\n\t\t\t\t.removeClass('dtr-control');\n\n\t\t\tdt.cells(null, firstVisible, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.addClass('dtr-control');\n\t\t}\n\t},\n\n\t/**\n\t * Show the details for the child row\n\t *\n\t * @param  {DataTables.Api} row    API instance for the row\n\t * @param  {boolean}        update Update flag\n\t * @private\n\t */\n\t_detailsDisplay: function (row, update) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\t\tvar event = function (res) {\n\t\t\t$(row.node()).toggleClass('dtr-expanded', res !== false);\n\t\t\t$(dt.table().node()).triggerHandler('responsive-display.dt', [\n\t\t\t\tdt,\n\t\t\t\trow,\n\t\t\t\tres,\n\t\t\t\tupdate\n\t\t\t]);\n\t\t};\n\n\t\tif (details && details.type !== false) {\n\t\t\tvar renderer =\n\t\t\t\ttypeof details.renderer === 'string'\n\t\t\t\t\t? Responsive.renderer[details.renderer]()\n\t\t\t\t\t: details.renderer;\n\n\t\t\tvar res = details.display(\n\t\t\t\trow,\n\t\t\t\tupdate,\n\t\t\t\tfunction () {\n\t\t\t\t\treturn renderer.call(\n\t\t\t\t\t\tthat,\n\t\t\t\t\t\tdt,\n\t\t\t\t\t\trow[0][0],\n\t\t\t\t\t\tthat._detailsObj(row[0])\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfunction () {\n\t\t\t\t\tevent(false);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif (typeof res === 'boolean') {\n\t\t\t\tevent(res);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Initialisation for the details handler\n\t *\n\t * @private\n\t */\n\t_detailsInit: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar details = this.c.details;\n\n\t\t// The inline type always uses the first child as the target\n\t\tif (details.type === 'inline') {\n\t\t\tdetails.target = 'td.dtr-control, th.dtr-control';\n\t\t}\n\n\t\t// Keyboard accessibility\n\t\tdt.on('draw.dtr', function () {\n\t\t\tthat._tabIndexes();\n\t\t});\n\t\tthat._tabIndexes(); // Initial draw has already happened\n\n\t\t$(dt.table().body()).on('keyup.dtr', 'td, th', function (e) {\n\t\t\tif (e.keyCode === 13 && $(this).data('dtr-keyboard')) {\n\t\t\t\t$(this).click();\n\t\t\t}\n\t\t});\n\n\t\t// type.target can be a string jQuery selector or a column index\n\t\tvar target = details.target;\n\t\tvar selector = typeof target === 'string' ? target : 'td, th';\n\n\t\tif (target !== undefined || target !== null) {\n\t\t\t// Click handler to show / hide the details rows when they are available\n\t\t\t$(dt.table().body()).on(\n\t\t\t\t'click.dtr mousedown.dtr mouseup.dtr',\n\t\t\t\tselector,\n\t\t\t\tfunction (e) {\n\t\t\t\t\t// If the table is not collapsed (i.e. there is no hidden columns)\n\t\t\t\t\t// then take no action\n\t\t\t\t\tif (!$(dt.table().node()).hasClass('collapsed')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Check that the row is actually a DataTable's controlled node\n\t\t\t\t\tif (\n\t\t\t\t\t\t$.inArray(\n\t\t\t\t\t\t\t$(this).closest('tr').get(0),\n\t\t\t\t\t\t\tdt.rows().nodes().toArray()\n\t\t\t\t\t\t) === -1\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// For column index, we determine if we should act or not in the\n\t\t\t\t\t// handler - otherwise it is already okay\n\t\t\t\t\tif (typeof target === 'number') {\n\t\t\t\t\t\tvar targetIdx =\n\t\t\t\t\t\t\ttarget < 0\n\t\t\t\t\t\t\t\t? dt.columns().eq(0).length + target\n\t\t\t\t\t\t\t\t: target;\n\n\t\t\t\t\t\tif (dt.cell(this).index().column !== targetIdx) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// $().closest() includes itself in its check\n\t\t\t\t\tvar row = dt.row($(this).closest('tr'));\n\n\t\t\t\t\t// Check event type to do an action\n\t\t\t\t\tif (e.type === 'click') {\n\t\t\t\t\t\t// The renderer is given as a function so the caller can execute it\n\t\t\t\t\t\t// only when they need (i.e. if hiding there is no point is running\n\t\t\t\t\t\t// the renderer)\n\t\t\t\t\t\tthat._detailsDisplay(row, false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mousedown') {\n\t\t\t\t\t\t// For mouse users, prevent the focus ring from showing\n\t\t\t\t\t\t$(this).css('outline', 'none');\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.type === 'mouseup') {\n\t\t\t\t\t\t// And then re-allow at the end of the click\n\t\t\t\t\t\t$(this).trigger('blur').css('outline', '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t},\n\n\t/**\n\t * Get the details to pass to a renderer for a row\n\t * @param  {int} rowIdx Row index\n\t * @private\n\t */\n\t_detailsObj: function (rowIdx) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.columns, function (col, i) {\n\t\t\t// Never and control columns should not be passed to the renderer\n\t\t\tif (col.never || col.control) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar dtCol = dt.settings()[0].aoColumns[i];\n\n\t\t\treturn {\n\t\t\t\tclassName: dtCol.sClass,\n\t\t\t\tcolumnIndex: i,\n\t\t\t\tdata: dt.cell(rowIdx, i).render(that.c.orthogonal),\n\t\t\t\thidden: dt.column(i).visible() && !that.s.current[i],\n\t\t\t\trowIndex: rowIdx,\n\t\t\t\ttitle: dt.column(i).title()\n\t\t\t};\n\t\t});\n\t},\n\n\t/**\n\t * Find a breakpoint object from a name\n\t *\n\t * @param  {string} name Breakpoint name to find\n\t * @return {object}      Breakpoint description object\n\t * @private\n\t */\n\t_find: function (name) {\n\t\tvar breakpoints = this.c.breakpoints;\n\n\t\tfor (var i = 0, ien = breakpoints.length; i < ien; i++) {\n\t\t\tif (breakpoints[i].name === name) {\n\t\t\t\treturn breakpoints[i];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Re-create the contents of the child rows as the display has changed in\n\t * some way.\n\t *\n\t * @private\n\t */\n\t_redrawChildren: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\n\t\tdt.rows({ page: 'current' }).iterator('row', function (settings, idx) {\n\t\t\tthat._detailsDisplay(dt.row(idx), true);\n\t\t});\n\t},\n\n\t/**\n\t * Alter the table display for a resized viewport. This involves first\n\t * determining what breakpoint the window currently is in, getting the\n\t * column visibilities to apply and then setting them.\n\t *\n\t * @param  {boolean} forceRedraw Force a redraw\n\t * @private\n\t */\n\t_resize: function (forceRedraw) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar width = $(window).innerWidth();\n\t\tvar breakpoints = this.c.breakpoints;\n\t\tvar breakpoint = breakpoints[0].name;\n\t\tvar columns = this.s.columns;\n\t\tvar i, ien;\n\t\tvar oldVis = this.s.current.slice();\n\n\t\t// Determine what breakpoint we are currently at\n\t\tfor (i = breakpoints.length - 1; i >= 0; i--) {\n\t\t\tif (width <= breakpoints[i].width) {\n\t\t\t\tbreakpoint = breakpoints[i].name;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// Show the columns for that break point\n\t\tvar columnsVis = this._columnsVisiblity(breakpoint);\n\t\tthis.s.current = columnsVis;\n\n\t\t// Set the class before the column visibility is changed so event\n\t\t// listeners know what the state is. Need to determine if there are\n\t\t// any columns that are not visible but can be shown\n\t\tvar collapsedClass = false;\n\n\t\tfor (i = 0, ien = columns.length; i < ien; i++) {\n\t\t\tif (\n\t\t\t\tcolumnsVis[i] === false &&\n\t\t\t\t!columns[i].never &&\n\t\t\t\t!columns[i].control &&\n\t\t\t\t!dt.column(i).visible() === false\n\t\t\t) {\n\t\t\t\tcollapsedClass = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t$(dt.table().node()).toggleClass('collapsed', collapsedClass);\n\n\t\tvar changed = false;\n\t\tvar visible = 0;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar colGroup = $(dt.table().node()).children('colgroup');\n\t\tvar colEls = dtSettings.aoColumns.map(function (col) {\n\t\t\treturn col.colEl;\n\t\t});\n\n\t\tdt.columns()\n\t\t\t.eq(0)\n\t\t\t.each(function (colIdx, i) {\n\t\t\t\t// Do nothing on DataTables' hidden column - DT removes it from the table\n\t\t\t\t// so we need to slide back\n\t\t\t\tif (! dt.column(colIdx).visible()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (columnsVis[i] === true) {\n\t\t\t\t\tvisible++;\n\t\t\t\t}\n\n\t\t\t\tif (forceRedraw || columnsVis[i] !== oldVis[i]) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\tthat._setColumnVis(colIdx, columnsVis[i]);\n\t\t\t\t}\n\n\t\t\t\t// DataTables 2 uses `col` to define the width for a column\n\t\t\t\t// and this needs to run each time, as DataTables will change\n\t\t\t\t// the column width. We may need to reattach if we've removed\n\t\t\t\t// an element previously.\n\t\t\t\tif (! columnsVis[i]) {\n\t\t\t\t\tcolEls[i].detach();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthat._colGroupAttach(colGroup, colEls, i);\n\t\t\t\t}\n\t\t\t});\n\n\t\tif (changed) {\n\t\t\tdt.columns.adjust();\n\n\t\t\tthis._redrawChildren();\n\n\t\t\t// Inform listeners of the change\n\t\t\t$(dt.table().node()).trigger('responsive-resize.dt', [\n\t\t\t\tdt,\n\t\t\t\tthis._responsiveOnlyHidden()\n\t\t\t]);\n\n\t\t\t// If no records, update the \"No records\" display element\n\t\t\tif (dt.page.info().recordsDisplay === 0) {\n\t\t\t\t$('td', dt.table().body()).eq(0).attr('colspan', visible);\n\t\t\t}\n\t\t}\n\n\t\tthat._controlClass();\n\t},\n\n\t/**\n\t * Determine the width of each column in the table so the auto column hiding\n\t * has that information to work with. This method is never going to be 100%\n\t * perfect since column widths can change slightly per page, but without\n\t * seriously compromising performance this is quite effective.\n\t *\n\t * @private\n\t */\n\t_resizeAuto: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar columns = this.s.columns;\n\t\tvar that = this;\n\t\tvar visibleColumns = dt\n\t\t\t.columns()\n\t\t\t.indexes()\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn dt.column(idx).visible();\n\t\t\t});\n\n\t\t// Are we allowed to do auto sizing?\n\t\tif (!this.c.auto) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Are there any columns that actually need auto-sizing, or do they all\n\t\t// have classes defined\n\t\tif (\n\t\t\t$.inArray(\n\t\t\t\ttrue,\n\t\t\t\t$.map(columns, function (c) {\n\t\t\t\t\treturn c.auto;\n\t\t\t\t})\n\t\t\t) === -1\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clone the table with the current data in it\n\t\tvar clonedTable = dt.table().node().cloneNode(false);\n\t\tvar clonedHeader = $(dt.table().header().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedFooter = $(dt.table().footer().cloneNode(false)).appendTo(\n\t\t\tclonedTable\n\t\t);\n\t\tvar clonedBody = $(dt.table().body())\n\t\t\t.clone(false, false)\n\t\t\t.empty()\n\t\t\t.appendTo(clonedTable); // use jQuery because of IE8\n\n\t\tclonedTable.style.width = 'auto';\n\n\t\t// Header\n\t\tdt.table()\n\t\t\t.header.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedHeader);\n\t\t\t});\n\n\t\t// Always need an empty row that we can read widths from\n\t\tvar emptyRow = $('<tr/>').appendTo(clonedBody);\n\n\t\tfor (var i = 0; i < visibleColumns.count(); i++) {\n\t\t\temptyRow.append('<td/>');\n\t\t}\n\n\t\t// Body rows\n\t\tif (this.c.details.renderer._responsiveMovesNodes) {\n\t\t\t// Slow but it allows for moving elements around the document\n\t\t\tdt.rows({ page: 'current' }).every(function (rowIdx) {\n\t\t\t\tvar node = this.node();\n\n\t\t\t\tif (! node) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// We clone the table's rows and cells to create the sizing table\n\t\t\t\tvar tr = node.cloneNode(false);\n\n\t\t\t\tdt.cells(rowIdx, visibleColumns).every(function (rowIdx2, colIdx) {\n\t\t\t\t\t// If nodes have been moved out (listHiddenNodes), we need to\n\t\t\t\t\t// clone from the store\n\t\t\t\t\tvar store = that.s.childNodeStore[rowIdx + '-' + colIdx];\n\n\t\t\t\t\tif (store) {\n\t\t\t\t\t\t$(this.node().cloneNode(false))\n\t\t\t\t\t\t\t.append($(store).clone())\n\t\t\t\t\t\t\t.appendTo(tr);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this.node()).clone(false).appendTo(tr);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tclonedBody.append(tr);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// This is much faster, but it doesn't account for moving nodes around\n\t\t\t$(clonedBody)\n\t\t\t\t.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )\n\t\t\t\t.find( 'th, td' ).css( 'display', '' );\n\t\t}\n\n\t\t// Any cells which were hidden by Responsive in the host table, need to\n\t\t// be visible here for the calculations\n\t\tclonedBody.find('th, td').css('display', '');\n\n\t\t// Footer\n\t\tdt.table()\n\t\t\t.footer.structure(visibleColumns)\n\t\t\t.forEach((row) => {\n\t\t\t\tvar cells = row\n\t\t\t\t\t.filter(function (el) {\n\t\t\t\t\t\treturn el ? true : false;\n\t\t\t\t\t})\n\t\t\t\t\t.map(function (el) {\n\t\t\t\t\t\treturn $(el.cell)\n\t\t\t\t\t\t\t.clone(false)\n\t\t\t\t\t\t\t.css('display', 'table-cell')\n\t\t\t\t\t\t\t.css('width', 'auto')\n\t\t\t\t\t\t\t.css('min-width', 0);\n\t\t\t\t\t});\n\n\t\t\t\t$('<tr/>').append(cells).appendTo(clonedFooter);\n\t\t\t});\n\n\t\t// In the inline case extra padding is applied to the first column to\n\t\t// give space for the show / hide icon. We need to use this in the\n\t\t// calculation\n\t\tif (this.c.details.type === 'inline') {\n\t\t\t$(clonedTable).addClass('dtr-inline collapsed');\n\t\t}\n\n\t\t// It is unsafe to insert elements with the same name into the DOM\n\t\t// multiple times. For example, cloning and inserting a checked radio\n\t\t// clears the chcecked state of the original radio.\n\t\t$(clonedTable).find('[name]').removeAttr('name');\n\n\t\t// A position absolute table would take the table out of the flow of\n\t\t// our container element, bypassing the height and width (Scroller)\n\t\t$(clonedTable).css('position', 'relative');\n\n\t\tvar inserted = $('<div/>')\n\t\t\t.css({\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1,\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclear: 'both'\n\t\t\t})\n\t\t\t.append(clonedTable);\n\n\t\tinserted.insertBefore(dt.table().node());\n\n\t\t// The cloned table now contains the smallest that each column can be\n\t\temptyRow.children().each(function (i) {\n\t\t\tvar idx = dt.column.index('fromVisible', i);\n\t\t\tcolumns[idx].minWidth = this.offsetWidth || 0;\n\t\t});\n\n\t\tinserted.remove();\n\t},\n\n\t/**\n\t * Get the state of the current hidden columns - controlled by Responsive only\n\t */\n\t_responsiveOnlyHidden: function () {\n\t\tvar dt = this.s.dt;\n\n\t\treturn $.map(this.s.current, function (v, i) {\n\t\t\t// If the column is hidden by DataTables then it can't be hidden by\n\t\t\t// Responsive!\n\t\t\tif (dt.column(i).visible() === false) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn v;\n\t\t});\n\t},\n\n\t/**\n\t * Set a column's visibility.\n\t *\n\t * We don't use DataTables' column visibility controls in order to ensure\n\t * that column visibility can Responsive can no-exist. Since only IE8+ is\n\t * supported (and all evergreen browsers of course) the control of the\n\t * display attribute works well.\n\t *\n\t * @param {integer} col      Column index\n\t * @param {boolean} showHide Show or hide (true or false)\n\t * @private\n\t */\n\t_setColumnVis: function (col, showHide) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar display = showHide ? '' : 'none'; // empty string will remove the attr\n\n\t\tthis._setHeaderVis(col, showHide, dt.table().header.structure());\n\t\tthis._setHeaderVis(col, showHide, dt.table().footer.structure());\n\n\t\tdt.column(col)\n\t\t\t.nodes()\n\t\t\t.to$()\n\t\t\t.css('display', display)\n\t\t\t.toggleClass('dtr-hidden', !showHide);\n\n\t\t// If the are child nodes stored, we might need to reinsert them\n\t\tif (!$.isEmptyObject(this.s.childNodeStore)) {\n\t\t\tdt.cells(null, col)\n\t\t\t\t.indexes()\n\t\t\t\t.each(function (idx) {\n\t\t\t\t\tthat._childNodesRestore(dt, idx.row, idx.column);\n\t\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Set the a column's visibility, taking into account multiple rows\n\t * in a header / footer and colspan attributes\n\t * @param {*} col\n\t * @param {*} showHide\n\t * @param {*} structure\n\t */\n\t_setHeaderVis: function (col, showHide, structure) {\n\t\tvar that = this;\n\t\tvar display = showHide ? '' : 'none';\n\n\t\tstructure.forEach(function (row) {\n\t\t\tif (row[col]) {\n\t\t\t\t$(row[col].cell)\n\t\t\t\t\t.css('display', display)\n\t\t\t\t\t.toggleClass('dtr-hidden', !showHide);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// In a colspan - need to rewind calc the new span since\n\t\t\t\t// display:none elements do not count as being spanned over\n\t\t\t\tvar search = col;\n\n\t\t\t\twhile (search >= 0) {\n\t\t\t\t\tif (row[search]) {\n\t\t\t\t\t\trow[search].cell.colSpan = that._colspan(row, search);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tsearch--;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * How many columns should this cell span\n\t *\n\t * @param {*} row Header structure row\n\t * @param {*} idx The column index of the cell to span\n\t */\n\t_colspan: function (row, idx) {\n\t\tvar colspan = 1;\n\n\t\tfor (var col = idx + 1; col < row.length; col++) {\n\t\t\tif (row[col] === null && this.s.current[col]) {\n\t\t\t\t// colspan and not hidden by Responsive\n\t\t\t\tcolspan++;\n\t\t\t}\n\t\t\telse if (row[col]) {\n\t\t\t\t// Got the next cell, jump out\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn colspan;\n\t},\n\n\t/**\n\t * Update the cell tab indexes for keyboard accessibility. This is called on\n\t * every table draw - that is potentially inefficient, but also the least\n\t * complex option given that column visibility can change on the fly. Its a\n\t * shame user-focus was removed from CSS 3 UI, as it would have solved this\n\t * issue with a single CSS statement.\n\t *\n\t * @private\n\t */\n\t_tabIndexes: function () {\n\t\tvar dt = this.s.dt;\n\t\tvar cells = dt.cells({ page: 'current' }).nodes().to$();\n\t\tvar ctx = dt.settings()[0];\n\t\tvar target = this.c.details.target;\n\n\t\tcells.filter('[data-dtr-keyboard]').removeData('[data-dtr-keyboard]');\n\n\t\tif (typeof target === 'number') {\n\t\t\tdt.cells(null, target, { page: 'current' })\n\t\t\t\t.nodes()\n\t\t\t\t.to$()\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t\telse {\n\t\t\t// This is a bit of a hack - we need to limit the selected nodes to just\n\t\t\t// those of this table\n\t\t\tif (target === 'td:first-child, th:first-child') {\n\t\t\t\ttarget = '>td:first-child, >th:first-child';\n\t\t\t}\n\n\t\t\t$(target, dt.rows({ page: 'current' }).nodes())\n\t\t\t\t.attr('tabIndex', ctx.iTabIndex)\n\t\t\t\t.data('dtr-keyboard', 1);\n\t\t}\n\t}\n});\n\n/**\n * List of default breakpoints. Each item in the array is an object with two\n * properties:\n *\n * * `name` - the breakpoint name.\n * * `width` - the breakpoint width\n *\n * @name Responsive.breakpoints\n * @static\n */\nResponsive.breakpoints = [\n\t{ name: 'desktop', width: Infinity },\n\t{ name: 'tablet-l', width: 1024 },\n\t{ name: 'tablet-p', width: 768 },\n\t{ name: 'mobile-l', width: 480 },\n\t{ name: 'mobile-p', width: 320 }\n];\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.display = {\n\tchildRow: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (update) {\n\t\t\tif (rowNode.hasClass('dtr-expanded')) {\n\t\t\t\trow.child(render(), 'child').show();\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!rowNode.hasClass('dtr-expanded')) {\n\t\t\t\tvar rendered = render();\n\n\t\t\t\tif (rendered === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trow.child(rendered, 'child').show();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow.child(false);\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\tchildRowImmediate: function (row, update, render) {\n\t\tvar rowNode = $(row.node());\n\n\t\tif (\n\t\t\t(!update && rowNode.hasClass('dtr-expanded')) ||\n\t\t\t!row.responsive.hasHidden()\n\t\t) {\n\t\t\t// User interaction and the row is show, or nothing to show\n\t\t\trow.child(false);\n\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\t// Display\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\trow.child(rendered, 'child').show();\n\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t// This is a wrapper so the modal options for Bootstrap and jQuery UI can\n\t// have options passed into them. This specific one doesn't need to be a\n\t// function but it is for consistency in the `modal` name\n\tmodal: function (options) {\n\t\treturn function (row, update, render, closeCallback) {\n\t\t\tvar modal;\n\t\t\tvar rendered = render();\n\n\t\t\tif (rendered === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!update) {\n\t\t\t\t// Show a modal\n\t\t\t\tvar close = function () {\n\t\t\t\t\tmodal.remove(); // will tidy events for us\n\t\t\t\t\t$(document).off('keypress.dtr');\n\t\t\t\t\t$(row.node()).removeClass('dtr-expanded');\n\n\t\t\t\t\tcloseCallback();\n\t\t\t\t};\n\n\t\t\t\tmodal = $('<div class=\"dtr-modal\"/>')\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-display\"/>')\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$('<div class=\"dtr-modal-content\"/>')\n\t\t\t\t\t\t\t\t\t.data('dtr-row-idx', row.index())\n\t\t\t\t\t\t\t\t\t.append(rendered)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t$(\n\t\t\t\t\t\t\t\t\t'<div class=\"dtr-modal-close\">&times;</div>'\n\t\t\t\t\t\t\t\t).click(function () {\n\t\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div class=\"dtr-modal-background\"/>').click(\n\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\tclose();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.appendTo('body');\n\n\t\t\t\t$(row.node()).addClass('dtr-expanded');\n\n\t\t\t\t$(document).on('keyup.dtr', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmodal = $('div.dtr-modal-content');\n\n\t\t\t\tif (modal.length && row.index() === modal.data('dtr-row-idx')) {\n\t\t\t\t\tmodal.empty().append(rendered);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Modal not shown, nothing to update\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options && options.header) {\n\t\t\t\t$('div.dtr-modal-content').prepend(\n\t\t\t\t\t'<h2>' + options.header(row) + '</h2>'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\t}\n};\n\n/**\n * Display methods - functions which define how the hidden data should be shown\n * in the table.\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.renderer = {\n\tlistHiddenNodes: function () {\n\t\tvar fn = function (api, rowIdx, columns) {\n\t\t\tvar that = this;\n\t\t\tvar ul = $(\n\t\t\t\t'<ul data-dtr-index=\"' + rowIdx + '\" class=\"dtr-details\"/>'\n\t\t\t);\n\t\t\tvar found = false;\n\n\t\t\t$.each(columns, function (i, col) {\n\t\t\t\tif (col.hidden) {\n\t\t\t\t\tvar klass = col.className\n\t\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t\t: '';\n\n\t\t\t\t\t$(\n\t\t\t\t\t\t'<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t)\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t$('<span class=\"dtr-data\"/>').append(\n\t\t\t\t\t\t\t\tthat._childNodes(\n\t\t\t\t\t\t\t\t\tapi,\n\t\t\t\t\t\t\t\t\tcol.rowIndex,\n\t\t\t\t\t\t\t\t\tcol.columnIndex\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) // api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )\n\t\t\t\t\t\t.appendTo(ul);\n\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn found ? ul : false;\n\t\t};\n\n\t\tfn._responsiveMovesNodes = true;\n\n\t\treturn fn;\n\t},\n\n\tlistHidden: function () {\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn col.hidden\n\t\t\t\t\t? '<li ' +\n\t\t\t\t\t\t\tklass +\n\t\t\t\t\t\t\t' data-dtr-index=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\" data-dt-row=\"' +\n\t\t\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t\t\t'\">' +\n\t\t\t\t\t\t\t'<span class=\"dtr-title\">' +\n\t\t\t\t\t\t\tcol.title +\n\t\t\t\t\t\t\t'</span> ' +\n\t\t\t\t\t\t\t'<span class=\"dtr-data\">' +\n\t\t\t\t\t\t\tcol.data +\n\t\t\t\t\t\t\t'</span>' +\n\t\t\t\t\t\t\t'</li>'\n\t\t\t\t\t: '';\n\t\t\t}).join('');\n\n\t\t\treturn data\n\t\t\t\t? $(\n\t\t\t\t\t\t'<ul data-dtr-index=\"' +\n\t\t\t\t\t\t\trowIdx +\n\t\t\t\t\t\t\t'\" class=\"dtr-details\"/>'\n\t\t\t\t).append(data)\n\t\t\t\t: false;\n\t\t};\n\t},\n\n\ttableAll: function (options) {\n\t\toptions = $.extend(\n\t\t\t{\n\t\t\t\ttableClass: ''\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\t\treturn function (api, rowIdx, columns) {\n\t\t\tvar data = $.map(columns, function (col) {\n\t\t\t\tvar klass = col.className\n\t\t\t\t\t? 'class=\"' + col.className + '\"'\n\t\t\t\t\t: '';\n\n\t\t\t\treturn (\n\t\t\t\t\t'<tr ' +\n\t\t\t\t\tklass +\n\t\t\t\t\t' data-dt-row=\"' +\n\t\t\t\t\tcol.rowIndex +\n\t\t\t\t\t'\" data-dt-column=\"' +\n\t\t\t\t\tcol.columnIndex +\n\t\t\t\t\t'\">' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.title +\n\t\t\t\t\t':' +\n\t\t\t\t\t'</td> ' +\n\t\t\t\t\t'<td>' +\n\t\t\t\t\tcol.data +\n\t\t\t\t\t'</td>' +\n\t\t\t\t\t'</tr>'\n\t\t\t\t);\n\t\t\t}).join('');\n\n\t\t\treturn $(\n\t\t\t\t'<table class=\"' +\n\t\t\t\t\toptions.tableClass +\n\t\t\t\t\t' dtr-details\" width=\"100%\"/>'\n\t\t\t).append(data);\n\t\t};\n\t}\n};\n\n/**\n * Responsive default settings for initialisation\n *\n * @namespace\n * @name Responsive.defaults\n * @static\n */\nResponsive.defaults = {\n\t/**\n\t * List of breakpoints for the instance. Note that this means that each\n\t * instance can have its own breakpoints. Additionally, the breakpoints\n\t * cannot be changed once an instance has been creased.\n\t *\n\t * @type {Array}\n\t * @default Takes the value of `Responsive.breakpoints`\n\t */\n\tbreakpoints: Responsive.breakpoints,\n\n\t/**\n\t * Enable / disable auto hiding calculations. It can help to increase\n\t * performance slightly if you disable this option, but all columns would\n\t * need to have breakpoint classes assigned to them\n\t *\n\t * @type {Boolean}\n\t * @default  `true`\n\t */\n\tauto: true,\n\n\t/**\n\t * Details control. If given as a string value, the `type` property of the\n\t * default object is set to that value, and the defaults used for the rest\n\t * of the object - this is for ease of implementation.\n\t *\n\t * The object consists of the following properties:\n\t *\n\t * * `display` - A function that is used to show and hide the hidden details\n\t * * `renderer` - function that is called for display of the child row data.\n\t *   The default function will show the data from the hidden columns\n\t * * `target` - Used as the selector for what objects to attach the child\n\t *   open / close to\n\t * * `type` - `false` to disable the details display, `inline` or `column`\n\t *   for the two control types\n\t *\n\t * @type {Object|string}\n\t */\n\tdetails: {\n\t\tdisplay: Responsive.display.childRow,\n\n\t\trenderer: Responsive.renderer.listHidden(),\n\n\t\ttarget: 0,\n\n\t\ttype: 'inline'\n\t},\n\n\t/**\n\t * Orthogonal data request option. This is used to define the data type\n\t * requested when Responsive gets the data to show in the child row.\n\t *\n\t * @type {String}\n\t */\n\torthogonal: 'display'\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('responsive()', function () {\n\treturn this;\n});\n\nApi.register('responsive.index()', function (li) {\n\tli = $(li);\n\n\treturn {\n\t\tcolumn: li.data('dtr-index'),\n\t\trow: li.parent().data('dtr-index')\n\t};\n});\n\nApi.register('responsive.rebuild()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._classLogic();\n\t\t}\n\t});\n});\n\nApi.register('responsive.recalc()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx._responsive) {\n\t\t\tctx._responsive._resizeAuto();\n\t\t\tctx._responsive._resize();\n\t\t}\n\t});\n});\n\nApi.register('responsive.hasHidden()', function () {\n\tvar ctx = this.context[0];\n\n\treturn ctx._responsive\n\t\t? $.inArray(false, ctx._responsive._responsiveOnlyHidden()) !== -1\n\t\t: false;\n});\n\nApi.registerPlural(\n\t'columns().responsiveHidden()',\n\t'column().responsiveHidden()',\n\tfunction () {\n\t\treturn this.iterator(\n\t\t\t'column',\n\t\t\tfunction (settings, column) {\n\t\t\t\treturn settings._responsive\n\t\t\t\t\t? settings._responsive._responsiveOnlyHidden()[column]\n\t\t\t\t\t: false;\n\t\t\t},\n\t\t\t1\n\t\t);\n\t}\n);\n\n/**\n * Version information\n *\n * @name Responsive.version\n * @static\n */\nResponsive.version = '3.0.3';\n\n$.fn.dataTable.Responsive = Responsive;\n$.fn.DataTable.Responsive = Responsive;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('preInit.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tif (\n\t\t$(settings.nTable).hasClass('responsive') ||\n\t\t$(settings.nTable).hasClass('dt-responsive') ||\n\t\tsettings.oInit.responsive ||\n\t\tDataTable.defaults.responsive\n\t) {\n\t\tvar init = settings.oInit.responsive;\n\n\t\tif (init !== false) {\n\t\t\tnew Responsive(settings, $.isPlainObject(init) ? init : {});\n\t\t}\n\t}\n});\n\n\nreturn DataTable;\n}));\n"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","DataTable","Responsive","settings","opts","versionCheck","s","childNodeStore","columns","current","dt","Api","this","responsive","details","type","c","extend","defaults","_constructor","prototype","that","oldWindowWidth","innerWidth","_responsive","on","util","throttle","width","_resize","e","tr","data","idx","inArray","each","i","column","index","css","addClass","off","table","body","cells","nodes","to$","removeClass","node","val","_setColumnVis","breakpoints","sort","a","b","_classLogic","_detailsInit","_timer","clearTimeout","setTimeout","_resizeAuto","_redrawChildren","d","curr","length","visible","indexOf","splice","rowIds","rows","every","child","isShown","push","id","one","_detailsDisplay","_controlClass","ready","_colGroupAttach","colGroup","colEls","found","get","parentNode","insertBefore","append","_childNodes","row","col","name","children","cell","childNodes","ien","_childNodesRestore","store","parentChildren","j","jen","appendChild","undefined","_columnsVisiblity","breakpoint","order","map","columnIdx","priority","display","auto","minWidth","includeIn","requiredWidth","scrolling","oScroll","bar","sY","sX","iBarWidth","usedWidth","container","offsetWidth","control","empty","colIdx","showControl","never","eq","className","header","init","responsivePriority","dataPriority","getAttribute","match","add","operator","matched","size","_find","classNames","split","hasClass","k","ken","trim","brokenPoint","re","RegExp","columnsVis","firstVisible","page","filter","update","event","res","toggleClass","triggerHandler","renderer","call","_detailsObj","target","_tabIndexes","keyCode","click","selector","closest","toArray","targetIdx","trigger","rowIdx","aoColumns","sClass","columnIndex","render","orthogonal","hidden","rowIndex","title","iterator","forceRedraw","oldVis","slice","collapsedClass","changed","dtSettings","colEl","detach","adjust","_responsiveOnlyHidden","info","recordsDisplay","attr","visibleColumns","indexes","clonedTable","cloneNode","clonedHeader","appendTo","clonedFooter","footer","clonedBody","clone","style","structure","forEach","el","emptyRow","count","_responsiveMovesNodes","rowIdx2","find","removeAttr","inserted","height","overflow","clear","remove","v","showHide","_setHeaderVis","isEmptyObject","search","colSpan","_colspan","colspan","ctx","removeData","iTabIndex","Infinity","childRow","rowNode","rendered","show","childRowImmediate","hasHidden","modal","options","closeCallback","close","stopPropagation","prepend","listHiddenNodes","api","ul","klass","listHidden","join","tableAll","tableClass","register","li","parent","context","registerPlural","version","json","namespace","nTable","oInit","isPlainObject"],"mappings":"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"}