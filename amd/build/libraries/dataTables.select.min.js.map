{"version":3,"file":"dataTables.select.min.js","sources":["../../src/libraries/dataTables.select.js"],"sourcesContent":["/* eslint-disable */\n/*! Select for DataTables 2.0.5\n * Â© SpryMedia Ltd - datatables.net/license/mit\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'mod_interactivevideo/libraries/datatables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('mod_interactivevideo/libraries/datatables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.classes = {\n\tcheckbox: 'dt-select-checkbox'\n};\n\nDataTable.select.version = '2.0.5';\n\nDataTable.select.init = function (dt) {\n\tvar ctx = dt.settings()[0];\n\n\tif (!DataTable.versionCheck('2')) {\n\t\tthrow 'Warning: Select requires DataTables 2 or newer';\n\t}\n\n\tif (ctx._select) {\n\t\treturn;\n\t}\n\n\tvar savedSelected = dt.state.loaded();\n\n\tvar selectAndSave = function (e, settings, data) {\n\t\tif (data === null || data.select === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clear any currently selected rows, before restoring state\n\t\t// None will be selected on first initialisation\n\t\tif (dt.rows({ selected: true }).any()) {\n\t\t\tdt.rows().deselect();\n\t\t}\n\t\tif (data.select.rows !== undefined) {\n\t\t\tdt.rows(data.select.rows).select();\n\t\t}\n\n\t\tif (dt.columns({ selected: true }).any()) {\n\t\t\tdt.columns().deselect();\n\t\t}\n\t\tif (data.select.columns !== undefined) {\n\t\t\tdt.columns(data.select.columns).select();\n\t\t}\n\n\t\tif (dt.cells({ selected: true }).any()) {\n\t\t\tdt.cells().deselect();\n\t\t}\n\t\tif (data.select.cells !== undefined) {\n\t\t\tfor (var i = 0; i < data.select.cells.length; i++) {\n\t\t\t\tdt.cell(data.select.cells[i].row, data.select.cells[i].column).select();\n\t\t\t}\n\t\t}\n\n\t\tdt.state.save();\n\t};\n\n\tdt.on('stateSaveParams', function (e, settings, data) {\n\t\tdata.select = {};\n\t\tdata.select.rows = dt.rows({ selected: true }).ids(true).toArray();\n\t\tdata.select.columns = dt.columns({ selected: true })[0];\n\t\tdata.select.cells = dt.cells({ selected: true })[0].map(function (coords) {\n\t\t\treturn { row: dt.row(coords.row).id(true), column: coords.column };\n\t\t});\n\t})\n\t\t.on('stateLoadParams', selectAndSave)\n\t\t.one('init', function () {\n\t\t\tselectAndSave(undefined, undefined, savedSelected);\n\t\t});\n\n\tvar init = ctx.oInit.select;\n\tvar defaults = DataTable.defaults.select;\n\tvar opts = init === undefined ? defaults : init;\n\n\t// Set defaults\n\tvar items = 'row';\n\tvar style = 'api';\n\tvar blurable = false;\n\tvar toggleable = true;\n\tvar info = true;\n\tvar selector = 'td, th';\n\tvar className = 'selected';\n\tvar headerCheckbox = true;\n\tvar setStyle = false;\n\n\tctx._select = {\n\t\tinfoEls: []\n\t};\n\n\t// Initialisation customisations\n\tif (opts === true) {\n\t\tstyle = 'os';\n\t\tsetStyle = true;\n\t}\n\telse if (typeof opts === 'string') {\n\t\tstyle = opts;\n\t\tsetStyle = true;\n\t}\n\telse if ($.isPlainObject(opts)) {\n\t\tif (opts.blurable !== undefined) {\n\t\t\tblurable = opts.blurable;\n\t\t}\n\n\t\tif (opts.toggleable !== undefined) {\n\t\t\ttoggleable = opts.toggleable;\n\t\t}\n\n\t\tif (opts.info !== undefined) {\n\t\t\tinfo = opts.info;\n\t\t}\n\n\t\tif (opts.items !== undefined) {\n\t\t\titems = opts.items;\n\t\t}\n\n\t\tif (opts.style !== undefined) {\n\t\t\tstyle = opts.style;\n\t\t\tsetStyle = true;\n\t\t}\n\t\telse {\n\t\t\tstyle = 'os';\n\t\t\tsetStyle = true;\n\t\t}\n\n\t\tif (opts.selector !== undefined) {\n\t\t\tselector = opts.selector;\n\t\t}\n\n\t\tif (opts.className !== undefined) {\n\t\t\tclassName = opts.className;\n\t\t}\n\n\t\tif (opts.headerCheckbox !== undefined) {\n\t\t\theaderCheckbox = opts.headerCheckbox;\n\t\t}\n\t}\n\n\tdt.select.selector(selector);\n\tdt.select.items(items);\n\tdt.select.style(style);\n\tdt.select.blurable(blurable);\n\tdt.select.toggleable(toggleable);\n\tdt.select.info(info);\n\tctx._select.className = className;\n\n\t// If the init options haven't enabled select, but there is a selectable\n\t// class name, then enable\n\tif (!setStyle && $(dt.table().node()).hasClass('selectable')) {\n\t\tdt.select.style('os');\n\t}\n\n\t// Insert a checkbox into the header if needed - might need to wait\n\t// for init complete, or it might already be done\n\tif (headerCheckbox || headerCheckbox === 'select-page' || headerCheckbox === 'select-all') {\n\t\tinitCheckboxHeader(dt, headerCheckbox);\n\n\t\tdt.on('init', function () {\n\t\t\tinitCheckboxHeader(dt, headerCheckbox);\n\t\t});\n\t}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n\titems:string       - Can be `rows`, `columns` or `cells`. Defines what item \n\t                     will be selected if the user is allowed to activate row\n\t                     selection using the mouse.\n\tstyle:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n\t                     interaction style when selecting items\n\tblurable:boolean   - If row selection can be cleared by clicking outside of\n\t                     the table\n\ttoggleable:boolean - If row selection can be cancelled by repeated clicking\n\t                     on the row\n\tinfo:boolean       - If the selection summary should be shown in the table\n\t                     information elements\n\tinfoEls:element[]  - List of HTML elements with info elements for a table\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange(dt, idx, last) {\n\tvar indexes;\n\tvar columnIndexes;\n\tvar rowIndexes;\n\tvar selectColumns = function (start, end) {\n\t\tif (start > end) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn dt\n\t\t\t.columns(':visible')\n\t\t\t.indexes()\n\t\t\t.filter(function (i) {\n\t\t\t\tif (i === start) {\n\t\t\t\t\trecord = true;\n\t\t\t\t}\n\n\t\t\t\tif (i === end) {\n\t\t\t\t\t// not else if, as start might === end\n\t\t\t\t\trecord = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn record;\n\t\t\t});\n\t};\n\n\tvar selectRows = function (start, end) {\n\t\tvar indexes = dt.rows({ search: 'applied' }).indexes();\n\n\t\t// Which comes first - might need to swap\n\t\tif (indexes.indexOf(start) > indexes.indexOf(end)) {\n\t\t\tvar tmp = end;\n\t\t\tend = start;\n\t\t\tstart = tmp;\n\t\t}\n\n\t\tvar record = false;\n\t\treturn indexes.filter(function (i) {\n\t\t\tif (i === start) {\n\t\t\t\trecord = true;\n\t\t\t}\n\n\t\t\tif (i === end) {\n\t\t\t\trecord = false;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn record;\n\t\t});\n\t};\n\n\tif (!dt.cells({ selected: true }).any() && !last) {\n\t\t// select from the top left cell to this one\n\t\tcolumnIndexes = selectColumns(0, idx.column);\n\t\trowIndexes = selectRows(0, idx.row);\n\t}\n\telse {\n\t\t// Get column indexes between old and new\n\t\tcolumnIndexes = selectColumns(last.column, idx.column);\n\t\trowIndexes = selectRows(last.row, idx.row);\n\t}\n\n\tindexes = dt.cells(rowIndexes, columnIndexes).flatten();\n\n\tif (!dt.cells(idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt.cells(indexes).select();\n\t}\n\telse {\n\t\t// Deselect range\n\t\tdt.cells(indexes).deselect();\n\t}\n}\n\n/**\n * Get the class\n * @returns \n */\nfunction checkboxClass(selector) {\n\tvar name = DataTable.select.classes.checkbox;\n\n\treturn selector\n\t\t? name.replace(/ /g, '.')\n\t\t: name;\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection(dt) {\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\n\t$(dt.table().container())\n\t\t.off('mousedown.dtSelect', selector)\n\t\t.off('mouseup.dtSelect', selector)\n\t\t.off('click.dtSelect', selector);\n\n\t$('body').off('click.dtSelect' + _safeId(dt.table().node()));\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection(dt) {\n\tvar container = $(dt.table().container());\n\tvar ctx = dt.settings()[0];\n\tvar selector = ctx._select.selector;\n\tvar matchSelection;\n\n\tcontainer\n\t\t.on('mousedown.dtSelect', selector, function (e) {\n\t\t\t// Disallow text selection for shift clicking on the table so multi\n\t\t\t// element selection doesn't look terrible!\n\t\t\tif (e.shiftKey || e.metaKey || e.ctrlKey) {\n\t\t\t\tcontainer\n\t\t\t\t\t.css('-moz-user-select', 'none')\n\t\t\t\t\t.one('selectstart.dtSelect', selector, function () {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (window.getSelection) {\n\t\t\t\tmatchSelection = window.getSelection();\n\t\t\t}\n\t\t})\n\t\t.on('mouseup.dtSelect', selector, function () {\n\t\t\t// Allow text selection to occur again, Mozilla style (tested in FF\n\t\t\t// 35.0.1 - still required)\n\t\t\tcontainer.css('-moz-user-select', '');\n\t\t})\n\t\t.on('click.dtSelect', selector, function (e) {\n\t\t\tvar items = dt.select.items();\n\t\t\tvar idx;\n\n\t\t\t// If text was selected (click and drag), then we shouldn't change\n\t\t\t// the row's selected state\n\t\t\tif (matchSelection) {\n\t\t\t\tvar selection = window.getSelection();\n\n\t\t\t\t// If the element that contains the selection is not in the table, we can ignore it\n\t\t\t\t// This can happen if the developer selects text from the click event\n\t\t\t\tif (\n\t\t\t\t\t!selection.anchorNode ||\n\t\t\t\t\t$(selection.anchorNode).closest('table')[0] === dt.table().node()\n\t\t\t\t) {\n\t\t\t\t\tif (selection !== matchSelection) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = dt.settings()[0];\n\t\t\tvar container = dt.table().container();\n\n\t\t\t// Ignore clicks inside a sub-table\n\t\t\tif ($(e.target).closest('div.dt-container')[0] != container) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cell = dt.cell($(e.target).closest('td, th'));\n\n\t\t\t// Check the cell actually belongs to the host DataTable (so child\n\t\t\t// rows, etc, are ignored)\n\t\t\tif (!cell.any()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('user-select.dt');\n\t\t\teventTrigger(dt, event, [items, cell, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar cellIndex = cell.index();\n\t\t\tif (items === 'row') {\n\t\t\t\tidx = cellIndex.row;\n\t\t\t\ttypeSelect(e, dt, ctx, 'row', idx);\n\t\t\t}\n\t\t\telse if (items === 'column') {\n\t\t\t\tidx = cell.index().column;\n\t\t\t\ttypeSelect(e, dt, ctx, 'column', idx);\n\t\t\t}\n\t\t\telse if (items === 'cell') {\n\t\t\t\tidx = cell.index();\n\t\t\t\ttypeSelect(e, dt, ctx, 'cell', idx);\n\t\t\t}\n\n\t\t\tctx._select_lastCell = cellIndex;\n\t\t});\n\n\t// Blurable\n\t$('body').on('click.dtSelect' + _safeId(dt.table().node()), function (e) {\n\t\tif (ctx._select.blurable) {\n\t\t\t// If the click was inside the DataTables container, don't blur\n\t\t\tif ($(e.target).parents().filter(dt.table().container()).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Ignore elements which have been removed from the DOM (i.e. paging\n\t\t\t// buttons)\n\t\t\tif ($(e.target).parents('html').length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't blur in Editor form\n\t\t\tif ($(e.target).parents('div.DTE').length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar event = $.Event('select-blur.dt');\n\t\t\teventTrigger(dt, event, [e.target, e]);\n\n\t\t\tif (event.isDefaultPrevented()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclear(ctx, true);\n\t\t}\n\t});\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger(api, type, args, any) {\n\tif (any && !api.flatten().length) {\n\t\treturn;\n\t}\n\n\tif (typeof type === 'string') {\n\t\ttype = type + '.dt';\n\t}\n\n\targs.unshift(api);\n\n\t$(api.table().node()).trigger(type, args);\n}\n\n/**\n * Determine if a column is a checkbox column\n * @param {*} col DataTables column object\n * @returns \n */\nfunction isCheckboxColumn(col) {\n\treturn col.mRender && col.mRender._name === 'selectCheckbox';\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n *\n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info(api, node) {\n\tif (api.select.style() === 'api' || api.select.info() === false) {\n\t\treturn;\n\t}\n\n\tvar rows = api.rows({ selected: true }).flatten().length;\n\tvar columns = api.columns({ selected: true }).flatten().length;\n\tvar cells = api.cells({ selected: true }).flatten().length;\n\n\tvar add = function (el, name, num) {\n\t\tel.append(\n\t\t\t$('<span class=\"select-item\"/>').append(\n\t\t\t\tapi.i18n(\n\t\t\t\t\t'select.' + name + 's',\n\t\t\t\t\t{ _: '%d ' + name + 's selected', 0: '', 1: '1 ' + name + ' selected' },\n\t\t\t\t\tnum\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t};\n\n\tvar el = $(node);\n\tvar output = $('<span class=\"select-info\"/>');\n\n\tadd(output, 'row', rows);\n\tadd(output, 'column', columns);\n\tadd(output, 'cell', cells);\n\n\tvar existing = el.children('span.select-info');\n\n\tif (existing.length) {\n\t\texisting.remove();\n\t}\n\n\tif (output.text() !== '') {\n\t\tel.append(output);\n\t}\n}\n\n/**\n * Add a checkbox to the header for checkbox columns, allowing all rows to\n * be selected, deselected or just to show the state.\n *\n * @param {*} dt API\n * @param {*} headerCheckbox the header checkbox option\n */\nfunction initCheckboxHeader( dt, headerCheckbox ) {\n\tvar dtInternalColumns = dt.settings()[0].aoColumns;\n\n\t// Find any checkbox column(s)\n\tdt.columns().iterator('column', function (s, idx) {\n\t\tvar col = dtInternalColumns[idx];\n\n\t\t// Checkbox columns have a rendering function with a given name\n\t\tif (! isCheckboxColumn(col)) {\n\t\t\treturn;\n\t\t}\n\t\tvar header = dt.column(idx).header();\n\n\t\tif (! $('input', header).length) {\n\t\t\t// If no checkbox yet, insert one\n\t\t\tvar input = $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\tclass: checkboxClass(true),\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t'aria-label': dt.i18n('select.aria.headerCheckbox') || 'Select all rows'\n\t\t\t\t})\n\t\t\t\t.appendTo(header)\n\t\t\t\t.on('change', function () {\n\t\t\t\t\tif (this.checked) {\n\t\t\t\t\t\tif (headerCheckbox == 'select-page') {\n\t\t\t\t\t\t\tdt.rows({page: 'current'}).select()\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdt.rows({search: 'applied'}).select();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdt.rows({selected: true}).deselect();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('click', function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\t\n\t\t\t// Update the header checkbox's state when the selection in the\n\t\t\t// table changes\n\t\t\tdt.on('draw select deselect', function (e, pass, type) {\n\t\t\t\tif (type === 'row' || ! type) {\n\t\t\t\t\tvar count = dt.rows({selected: true}).count();\n\t\t\t\t\tvar search = dt.rows({search: 'applied', selected: true}).count();\n\t\t\t\t\tvar available = headerCheckbox == 'select-page' ? dt.rows({page: 'current'}).count() : dt.rows({search: 'applied'}).count();\n\n\t\t\t\t\tif (search && search <= count && search === available) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', true)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse if (search === 0 && count === 0) {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinput\n\t\t\t\t\t\t\t.prop('checked', false)\n\t\t\t\t\t\t\t.prop('indeterminate', true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init(ctx) {\n\tvar api = new DataTable.Api(ctx);\n\tctx._select_init = true;\n\n\t// Row callback so that classes can be added to rows and cells if the item\n\t// was selected before the element was created. This will happen with the\n\t// `deferRender` option enabled.\n\t//\n\t// This method of attaching to `aoRowCreatedCallback` is a hack until\n\t// DataTables has proper events for row manipulation If you are reviewing\n\t// this code to create your own plug-ins, please do not do this!\n\tctx.aoRowCreatedCallback.push(function (row, data, index) {\n\t\t\tvar i, ien;\n\t\t\tvar d = ctx.aoData[index];\n\n\t\t\t// Row\n\t\t\tif (d._select_selected) {\n\t\t\t\t$(row)\n\t\t\t\t\t.addClass(ctx._select.className)\n\t\t\t\t\t.find('input.' + checkboxClass(true)).prop('checked', true);\n\t\t\t}\n\n\t\t\t// Cells and columns - if separated out, we would need to do two\n\t\t\t// loops, so it makes sense to combine them into a single one\n\t\t\tfor (i = 0, ien = ctx.aoColumns.length; i < ien; i++) {\n\t\t\t\tif (\n\t\t\t\t\tctx.aoColumns[i]._select_selected ||\n\t\t\t\t\t(d._selected_cells && d._selected_cells[i])\n\t\t\t\t) {\n\t\t\t\t\t$(d.anCells[i]).addClass(ctx._select.className)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t);\n\n\t// On Ajax reload we want to reselect all rows which are currently selected,\n\t// if there is an rowId (i.e. a unique value to identify each row with)\n\tapi.on('preXhr.dt.dtSelect', function (e, settings) {\n\t\tif (settings !== api.settings()[0]) {\n\t\t\t// Not triggered by our DataTable!\n\t\t\treturn;\n\t\t}\n\n\t\t// note that column selection doesn't need to be cached and then\n\t\t// reselected, as they are already selected\n\t\tvar rows = api\n\t\t\t.rows({ selected: true })\n\t\t\t.ids(true)\n\t\t\t.filter(function (d) {\n\t\t\t\treturn d !== undefined;\n\t\t\t});\n\n\t\tvar cells = api\n\t\t\t.cells({ selected: true })\n\t\t\t.eq(0)\n\t\t\t.map(function (cellIdx) {\n\t\t\t\tvar id = api.row(cellIdx.row).id(true);\n\t\t\t\treturn id ? { row: id, column: cellIdx.column } : undefined;\n\t\t\t})\n\t\t\t.filter(function (d) {\n\t\t\t\treturn d !== undefined;\n\t\t\t});\n\n\t\t// On the next draw, reselect the currently selected items\n\t\tapi.one('draw.dt.dtSelect', function () {\n\t\t\tapi.rows(rows).select();\n\n\t\t\t// `cells` is not a cell index selector, so it needs a loop\n\t\t\tif (cells.any()) {\n\t\t\t\tcells.each(function (id) {\n\t\t\t\t\tapi.cells(id.row, id.column).select();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\t// Update the table information element with selected item summary\n\tapi.on('info.dt', function (e, ctx, node) {\n\t\t// Store the info node for updating on select / deselect\n\t\tif (!ctx._select.infoEls.includes(node)) {\n\t\t\tctx._select.infoEls.push(node);\n\t\t}\n\n\t\tinfo(api, node);\n\t});\n\n\tapi.on('select.dtSelect.dt deselect.dtSelect.dt', function () {\n\t\tctx._select.infoEls.forEach(function (el) {\n\t\t\tinfo(api, el);\n\t\t});\n\n\t\tapi.state.save();\n\t});\n\n\t// Clean up and release\n\tapi.on('destroy.dtSelect', function () {\n\t\t// Remove class directly rather than calling deselect - which would trigger events\n\t\t$(api.rows({ selected: true }).nodes()).removeClass(api.settings()[0]._select.className);\n\n\t\t$('input.' + checkboxClass(true), api.table().header()).remove();\n\n\t\tdisableMouseSelection(api);\n\t\tapi.off('.dtSelect');\n\t\t$('body').off('.dtSelect' + _safeId(api.table().node()));\n\t});\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange(dt, type, idx, last) {\n\t// Add a range of rows from the last selected row to this one\n\tvar indexes = dt[type + 's']({ search: 'applied' }).indexes();\n\tvar idx1 = indexes.indexOf(last);\n\tvar idx2 = indexes.indexOf(idx);\n\n\tif (!dt[type + 's']({ selected: true }).any() && idx1 === -1) {\n\t\t// select from top to here - slightly odd, but both Windows and Mac OS\n\t\t// do this\n\t\tindexes.splice(indexes.indexOf(idx) + 1, indexes.length);\n\t}\n\telse {\n\t\t// reverse so we can shift click 'up' as well as down\n\t\tif (idx1 > idx2) {\n\t\t\tvar tmp = idx2;\n\t\t\tidx2 = idx1;\n\t\t\tidx1 = tmp;\n\t\t}\n\n\t\tindexes.splice(idx2 + 1, indexes.length);\n\t\tindexes.splice(0, idx1);\n\t}\n\n\tif (!dt[type](idx, { selected: true }).any()) {\n\t\t// Select range\n\t\tdt[type + 's'](indexes).select();\n\t}\n\telse {\n\t\t// Deselect range - need to keep the clicked on row selected\n\t\tindexes.splice(indexes.indexOf(idx), 1);\n\t\tdt[type + 's'](indexes).deselect();\n\t}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear(ctx, force) {\n\tif (force || ctx._select.style === 'single') {\n\t\tvar api = new DataTable.Api(ctx);\n\n\t\tapi.rows({ selected: true }).deselect();\n\t\tapi.columns({ selected: true }).deselect();\n\t\tapi.cells({ selected: true }).deselect();\n\t}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect(e, dt, ctx, type, idx) {\n\tvar style = dt.select.style();\n\tvar toggleable = dt.select.toggleable();\n\tvar isSelected = dt[type](idx, { selected: true }).any();\n\n\tif (isSelected && !toggleable) {\n\t\treturn;\n\t}\n\n\tif (style === 'os') {\n\t\tif (e.ctrlKey || e.metaKey) {\n\t\t\t// Add or remove from the selection\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t\telse if (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No cmd or shift click - deselect if selected, or select\n\t\t\t// this row only\n\t\t\tvar selected = dt[type + 's']({ selected: true });\n\n\t\t\tif (isSelected && selected.flatten().length === 1) {\n\t\t\t\tdt[type](idx).deselect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselected.deselect();\n\t\t\t\tdt[type](idx).select();\n\t\t\t}\n\t\t}\n\t}\n\telse if (style == 'multi+shift') {\n\t\tif (e.shiftKey) {\n\t\t\tif (type === 'cell') {\n\t\t\t\tcellRange(dt, idx, ctx._select_lastCell || null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\trowColumnRange(\n\t\t\t\t\tdt,\n\t\t\t\t\ttype,\n\t\t\t\t\tidx,\n\t\t\t\t\tctx._select_lastCell ? ctx._select_lastCell[type] : null\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdt[type](idx).select(!isSelected);\n\t\t}\n\t}\n\telse {\n\t\tdt[type](idx).select(!isSelected);\n\t}\n}\n\nfunction _safeId(node) {\n\treturn node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each(\n\t[\n\t\t{ type: 'row', prop: 'aoData' },\n\t\t{ type: 'column', prop: 'aoColumns' }\n\t],\n\tfunction (i, o) {\n\t\tDataTable.ext.selector[o.type].push(function (settings, opts, indexes) {\n\t\t\tvar selected = opts.selected;\n\t\t\tvar data;\n\t\t\tvar out = [];\n\n\t\t\tif (selected !== true && selected !== false) {\n\t\t\t\treturn indexes;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ien = indexes.length; i < ien; i++) {\n\t\t\t\tdata = settings[o.prop][indexes[i]];\n\n\t\t\t\tif (\n\t\t\t\t\tdata && (\n\t\t\t\t\t\t(selected === true && data._select_selected === true) ||\n\t\t\t\t\t\t(selected === false && !data._select_selected)\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tout.push(indexes[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t});\n\t}\n);\n\nDataTable.ext.selector.cell.push(function (settings, opts, cells) {\n\tvar selected = opts.selected;\n\tvar rowData;\n\tvar out = [];\n\n\tif (selected === undefined) {\n\t\treturn cells;\n\t}\n\n\tfor (var i = 0, ien = cells.length; i < ien; i++) {\n\t\trowData = settings.aoData[cells[i].row];\n\n\t\tif (\n\t\t\trowData && (\n\t\t\t\t(selected === true &&\n\t\t\t\t\trowData._selected_cells &&\n\t\t\t\t\trowData._selected_cells[cells[i].column] === true) ||\n\t\t\t\t(selected === false &&\n\t\t\t\t\t(!rowData._selected_cells || !rowData._selected_cells[cells[i].column]))\n\t\t\t)\n\t\t) {\n\t\t\tout.push(cells[i]);\n\t\t}\n\t}\n\n\treturn out;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister('select()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t});\n});\n\napiRegister('select.blurable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.blurable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.blurable = flag;\n\t});\n});\n\napiRegister('select.toggleable()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.toggleable;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.toggleable = flag;\n\t});\n});\n\napiRegister('select.info()', function (flag) {\n\tif (flag === undefined) {\n\t\treturn this.context[0]._select.info;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.info = flag;\n\t});\n});\n\napiRegister('select.items()', function (items) {\n\tif (items === undefined) {\n\t\treturn this.context[0]._select.items;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tctx._select.items = items;\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectItems', [items]);\n\t});\n});\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister('select.style()', function (style) {\n\tif (style === undefined) {\n\t\treturn this.context[0]._select.style;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (!ctx._select) {\n\t\t\tDataTable.select.init(new DataTable.Api(ctx));\n\t\t}\n\n\t\tif (!ctx._select_init) {\n\t\t\tinit(ctx);\n\t\t}\n\n\t\tctx._select.style = style;\n\n\t\t// Add / remove mouse event handlers. They aren't required when only\n\t\t// API selection is available\n\t\tvar dt = new DataTable.Api(ctx);\n\t\tdisableMouseSelection(dt);\n\n\t\tif (style !== 'api') {\n\t\t\tenableMouseSelection(dt);\n\t\t}\n\n\t\teventTrigger(new DataTable.Api(ctx), 'selectStyle', [style]);\n\t});\n});\n\napiRegister('select.selector()', function (selector) {\n\tif (selector === undefined) {\n\t\treturn this.context[0]._select.selector;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tdisableMouseSelection(new DataTable.Api(ctx));\n\n\t\tctx._select.selector = selector;\n\n\t\tif (ctx._select.style !== 'api') {\n\t\t\tenableMouseSelection(new DataTable.Api(ctx));\n\t\t}\n\t});\n});\n\napiRegister('select.last()', function (set) {\n\tlet ctx = this.context[0];\n\n\tif (set) {\n\t\tctx._select_lastCell = set;\n\t\treturn this;\n\t}\n\n\treturn ctx._select_lastCell;\n});\n\napiRegisterPlural('rows().select()', 'row().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\t// There is a good amount of knowledge of DataTables internals in\n\t\t// this function. It _could_ be done without that, but it would hurt\n\t\t// performance (or DT would need new APIs for this work)\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\t$(dtData.nTr).addClass(ctx._select.className);\n\t\tdtData._select_selected = true;\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\t// Regenerate the column type if not present\n\t\t\tif (col.sType === null) {\n\t\t\t\tapi.columns().types()\n\t\t\t}\n\t\t\t\n\t\t\tif (isCheckboxColumn(col)) {\n\t\t\t\tvar cells = dtData.anCells;\n\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\tif (cells && cells[i]) {\n\t\t\t\t\t$('input.' + checkboxClass(true), cells[i]).prop('checked', true);\n\t\t\t\t}\n\n\t\t\t\t// Invalidate the sort data for this column, if not already done\n\t\t\t\tif (dtData._aSortData !== null) {\n\t\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['row', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('row().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoData[this[0]] && ctx.aoData[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('columns().select()', 'column().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tclear(ctx);\n\n\t\tctx.aoColumns[idx]._select_selected = true;\n\n\t\tvar column = new DataTable.Api(ctx).column(idx);\n\n\t\t$(column.header()).addClass(ctx._select.className);\n\t\t$(column.footer()).addClass(ctx._select.className);\n\n\t\tcolumn.nodes().to$().addClass(ctx._select.className);\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('column().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length && ctx.aoColumns[this[0]] && ctx.aoColumns[this[0]]._select_selected) {\n\t\treturn true;\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('cells().select()', 'cell().select()', function (select) {\n\tvar api = this;\n\n\tif (select === false) {\n\t\treturn this.deselect();\n\t}\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tclear(ctx);\n\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells === undefined) {\n\t\t\tdata._selected_cells = [];\n\t\t}\n\n\t\tdata._selected_cells[colIdx] = true;\n\n\t\tif (data.anCells) {\n\t\t\t$(data.anCells[colIdx]).addClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'select', ['cell', api.cells(api[i]).indexes().toArray()], true);\n\t});\n\n\treturn this;\n});\n\napiRegister('cell().selected()', function () {\n\tvar ctx = this.context[0];\n\n\tif (ctx && this.length) {\n\t\tvar row = ctx.aoData[this[0][0].row];\n\n\t\tif (row && row._selected_cells && row._selected_cells[this[0][0].column]) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n});\n\napiRegisterPlural('rows().deselect()', 'row().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('row', function (ctx, idx) {\n\t\t// Like the select action, this has a lot of knowledge about DT internally\n\t\tvar dtData = ctx.aoData[idx];\n\t\tvar dtColumns = ctx.aoColumns;\n\n\t\t$(dtData.nTr).removeClass(ctx._select.className);\n\t\tdtData._select_selected = false;\n\t\tctx._select_lastCell = null;\n\n\t\tfor (var i=0 ; i<dtColumns.length ; i++) {\n\t\t\tvar col = dtColumns[i];\n\n\t\t\t// Regenerate the column type if not present\n\t\t\tif (col.sType === null) {\n\t\t\t\tapi.columns().types()\n\t\t\t}\n\t\t\t\n\t\t\tif (isCheckboxColumn(col)) {\n\t\t\t\tvar cells = dtData.anCells;\n\n\t\t\t\t// Make sure the checkbox shows the right state\n\t\t\t\tif (cells && cells[i]) {\n\t\t\t\t\t$('input.' + checkboxClass(true), dtData.anCells[i]).prop('checked', false);\n\t\t\t\t}\n\n\t\t\t\t// Invalidate the sort data for this column, if not already done\n\t\t\t\tif (dtData._aSortData !== null) {\n\t\t\t\t\tdtData._aSortData[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['row', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('columns().deselect()', 'column().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('column', function (ctx, idx) {\n\t\tctx.aoColumns[idx]._select_selected = false;\n\n\t\tvar api = new DataTable.Api(ctx);\n\t\tvar column = api.column(idx);\n\n\t\t$(column.header()).removeClass(ctx._select.className);\n\t\t$(column.footer()).removeClass(ctx._select.className);\n\n\t\t// Need to loop over each cell, rather than just using\n\t\t// `column().nodes()` as cells which are individually selected should\n\t\t// not have the `selected` class removed from them\n\t\tapi.cells(null, idx)\n\t\t\t.indexes()\n\t\t\t.each(function (cellIdx) {\n\t\t\t\tvar data = ctx.aoData[cellIdx.row];\n\t\t\t\tvar cellSelected = data._selected_cells;\n\n\t\t\t\tif (data.anCells && (!cellSelected || !cellSelected[cellIdx.column])) {\n\t\t\t\t\t$(data.anCells[cellIdx.column]).removeClass(ctx._select.className);\n\t\t\t\t}\n\t\t\t});\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['column', api[i]], true);\n\t});\n\n\treturn this;\n});\n\napiRegisterPlural('cells().deselect()', 'cell().deselect()', function () {\n\tvar api = this;\n\n\tthis.iterator('cell', function (ctx, rowIdx, colIdx) {\n\t\tvar data = ctx.aoData[rowIdx];\n\n\t\tif (data._selected_cells !== undefined) {\n\t\t\tdata._selected_cells[colIdx] = false;\n\t\t}\n\n\t\t// Remove class only if the cells exist, and the cell is not column\n\t\t// selected, in which case the class should remain (since it is selected\n\t\t// in the column)\n\t\tif (data.anCells && !ctx.aoColumns[colIdx]._select_selected) {\n\t\t\t$(data.anCells[colIdx]).removeClass(ctx._select.className);\n\t\t}\n\t});\n\n\tthis.iterator('table', function (ctx, i) {\n\t\teventTrigger(api, 'deselect', ['cell', api[i]], true);\n\t});\n\n\treturn this;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n(label, def) {\n\treturn function (dt) {\n\t\treturn dt.i18n('buttons.' + label, def);\n\t};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents(config) {\n\tvar unique = config._eventNamespace;\n\n\treturn 'draw.dt.DT' + unique + ' select.dt.DT' + unique + ' deselect.dt.DT' + unique;\n}\n\nfunction enabled(dt, config) {\n\tif (config.limitTo.indexOf('rows') !== -1 && dt.rows({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('columns') !== -1 && dt.columns({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\tif (config.limitTo.indexOf('cells') !== -1 && dt.cells({ selected: true }).any()) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend(DataTable.ext.buttons, {\n\tselected: {\n\t\ttext: i18n('selected', 'Selected'),\n\t\tclassName: 'buttons-selected',\n\t\tlimitTo: ['rows', 'columns', 'cells'],\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\t// .DT namespace listeners are removed by DataTables automatically\n\t\t\t// on table destroy\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tthat.enable(enabled(dt, config));\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectedSingle: {\n\t\ttext: i18n('selectedSingle', 'Selected single'),\n\t\tclassName: 'buttons-selected-single',\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count === 1);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tselectAll: {\n\t\ttext: i18n('selectAll', 'Select all'),\n\t\tclassName: 'buttons-select-all',\n\t\taction: function (e, dt, node, config) {\n\t\t\tvar items = this.select.items();\n\t\t\tvar mod = config.selectorModifier;\n\t\t\t\n\t\t\tif (mod) {\n\t\t\t\tif (typeof mod === 'function') {\n\t\t\t\t\tmod = mod.call(dt, e, dt, node, config);\n\t\t\t\t}\n\n\t\t\t\tthis[items + 's'](mod).select();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis[items + 's']().select();\n\t\t\t}\n\t\t}\n\t\t// selectorModifier can be specified\n\t},\n\tselectNone: {\n\t\ttext: i18n('selectNone', 'Deselect all'),\n\t\tclassName: 'buttons-select-none',\n\t\taction: function () {\n\t\t\tclear(this.settings()[0], true);\n\t\t},\n\t\tinit: function (dt, node, config) {\n\t\t\tvar that = this;\n\t\t\tconfig._eventNamespace = '.select' + _buttonNamespace++;\n\n\t\t\tdt.on(namespacedEvents(config), function () {\n\t\t\t\tvar count =\n\t\t\t\t\tdt.rows({ selected: true }).flatten().length +\n\t\t\t\t\tdt.columns({ selected: true }).flatten().length +\n\t\t\t\t\tdt.cells({ selected: true }).flatten().length;\n\n\t\t\t\tthat.enable(count > 0);\n\t\t\t});\n\n\t\t\tthis.disable();\n\t\t},\n\t\tdestroy: function (dt, node, config) {\n\t\t\tdt.off(config._eventNamespace);\n\t\t}\n\t},\n\tshowSelected: {\n\t\ttext: i18n('showSelected', 'Show only selected'),\n\t\tclassName: 'buttons-show-selected',\n\t\taction: function (e, dt) {\n\t\t\tif (dt.search.fixed('dt-select')) {\n\t\t\t\t// Remove existing function\n\t\t\t\tdt.search.fixed('dt-select', null);\n\n\t\t\t\tthis.active(false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a fixed filtering function to match on selected rows\n\t\t\t\t// This needs to reference the internal aoData since that is\n\t\t\t\t// where Select stores its reference for the selected state\n\t\t\t\tvar dataSrc = dt.settings()[0].aoData;\n\n\t\t\t\tdt.search.fixed('dt-select', function (text, data, idx) {\n\t\t\t\t\t// _select_selected is set by Select on the data object for the row\n\t\t\t\t\treturn dataSrc[idx]._select_selected;\n\t\t\t\t});\n\n\t\t\t\tthis.active(true);\n\t\t\t}\n\n\t\t\tdt.draw();\n\t\t}\n\t}\n});\n\n$.each(['Row', 'Column', 'Cell'], function (i, item) {\n\tvar lc = item.toLowerCase();\n\n\tDataTable.ext.buttons['select' + item + 's'] = {\n\t\ttext: i18n('select' + item + 's', 'Select ' + lc + 's'),\n\t\tclassName: 'buttons-select-' + lc + 's',\n\t\taction: function () {\n\t\t\tthis.select.items(lc);\n\t\t},\n\t\tinit: function (dt) {\n\t\t\tvar that = this;\n\n\t\t\tdt.on('selectItems.dt.DT', function (e, ctx, items) {\n\t\t\t\tthat.active(items === lc);\n\t\t\t});\n\t\t}\n\t};\n});\n\n// Note that DataTables 2.1 has more robust type detection, but we retain\n// backwards compatibility with 2.0 for the moment.\nDataTable.type('select-checkbox', {\n\tclassName: 'dt-select',\n\tdetect: DataTable.versionCheck('2.1')\n\t\t? {\n\t\t\toneOf: function () {\n\t\t\t\treturn false; // no op\n\t\t\t},\n\t\t\tallOf: function () {\n\t\t\t\treturn false; // no op\n\t\t\t},\n\t\t\tinit: function (settings, col, idx) {\n\t\t\t\treturn isCheckboxColumn(col);\n\t\t\t}\n\t\t}\n\t\t: function (data) {\n\t\t\t// Rendering function will tell us if it is a checkbox type\n\t\t\treturn data === 'select-checkbox' ? data : false;\n\t\t},\n\torder: {\n\t\tpre: function (d) {\n\t\t\treturn d === 'X' ? -1 : 0;\n\t\t}\n\t}\n});\n\n$.extend(true, DataTable.defaults.oLanguage, {\n\tselect: {\n\t\taria: {\n\t\t\trowCheckbox: 'Select row'\n\t\t}\n\t}\n});\n\nDataTable.render.select = function (valueProp, nameProp) {\n\tvar valueFn = valueProp ? DataTable.util.get(valueProp) : null;\n\tvar nameFn = nameProp ? DataTable.util.get(nameProp) : null;\n\n\tvar fn = function (data, type, row, meta) {\n\t\tvar dtRow = meta.settings.aoData[meta.row];\n\t\tvar selected = dtRow._select_selected;\n\t\tvar ariaLabel = meta.settings.oLanguage.select.aria.rowCheckbox;\n\n\t\tif (type === 'display') {\n\t\t\treturn $('<input>')\n\t\t\t\t.attr({\n\t\t\t\t\t'aria-label': ariaLabel,\n\t\t\t\t\tclass: checkboxClass(),\n\t\t\t\t\tname: nameFn ? nameFn(row) : null,\n\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\tvalue: valueFn ? valueFn(row) : null,\n\t\t\t\t\tchecked: selected\n\t\t\t\t})\n\t\t\t\t.on('input', function (e) {\n\t\t\t\t\t// Let Select 100% control the state of the checkbox\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t// And make sure this checkbox matches it's row as it is possible\n\t\t\t\t\t// to check out of sync if this was clicked on to deselect a range\n\t\t\t\t\t// but remains selected itself\n\t\t\t\t\tthis.checked = $(this).closest('tr').hasClass('selected');\n\t\t\t\t})[0];\n\t\t}\n\t\telse if (type === 'type') {\n\t\t\treturn 'select-checkbox';\n\t\t}\n\t\telse if (type === 'filter') {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn selected ? 'X' : '';\n\t}\n\n\t// Workaround so uglify doesn't strip the function name. It is used\n\t// for the column type detection.\n\tfn._name = 'selectCheckbox';\n\n\treturn fn;\n}\n\n// Legacy checkbox ordering\nDataTable.ext.order['select-checkbox'] = function (settings, col) {\n\treturn this.api()\n\t\t.column(col, { order: 'index' })\n\t\t.nodes()\n\t\t.map(function (td) {\n\t\t\tif (settings._select.items === 'row') {\n\t\t\t\treturn $(td).parent().hasClass(settings._select.className).toString();\n\t\t\t}\n\t\t\telse if (settings._select.items === 'cell') {\n\t\t\t\treturn $(td).hasClass(settings._select.className).toString();\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n};\n\n$.fn.DataTable.select = DataTable.select;\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on('preInit.dt.dtSelect', function (e, ctx) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tDataTable.select.init(new DataTable.Api(ctx));\n});\n\n\nreturn DataTable;\n}));\n"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","DataTable","cellRange","dt","idx","last","indexes","columnIndexes","rowIndexes","selectColumns","start","end","tmp","record","columns","filter","i","selectRows","rows","search","indexOf","cells","selected","any","column","row","flatten","deselect","select","checkboxClass","selector","name","classes","checkbox","replace","disableMouseSelection","settings","_select","table","container","off","_safeId","node","enableMouseSelection","matchSelection","ctx","on","e","shiftKey","metaKey","ctrlKey","css","one","getSelection","items","selection","anchorNode","closest","target","cell","event","Event","eventTrigger","isDefaultPrevented","cellIndex","index","typeSelect","_select_lastCell","blurable","parents","length","clear","api","type","args","unshift","trigger","isCheckboxColumn","col","mRender","_name","info","style","add","el","num","append","i18n","_","output","existing","children","remove","text","initCheckboxHeader","headerCheckbox","dtInternalColumns","aoColumns","iterator","s","header","input","attr","class","appendTo","this","checked","page","stopPropagation","pass","count","available","prop","rowColumnRange","idx1","idx2","splice","force","Api","toggleable","isSelected","id","version","init","versionCheck","savedSelected","state","loaded","selectAndSave","data","undefined","save","ids","toArray","map","coords","oInit","defaults","opts","className","setStyle","infoEls","isPlainObject","hasClass","each","o","ext","push","out","ien","_select_selected","rowData","aoData","_selected_cells","apiRegister","register","apiRegisterPlural","registerPlural","label","def","namespacedEvents","config","unique","_eventNamespace","flag","context","_select_init","aoRowCreatedCallback","d","addClass","find","anCells","eq","cellIdx","includes","forEach","nodes","removeClass","set","dtData","dtColumns","nTr","sType","types","_aSortData","footer","to$","rowIdx","colIdx","cellSelected","_buttonNamespace","extend","buttons","limitTo","that","enable","enabled","disable","destroy","selectedSingle","selectAll","action","mod","selectorModifier","call","selectNone","showSelected","fixed","active","dataSrc","draw","item","lc","toLowerCase","detect","oneOf","allOf","order","pre","oLanguage","aria","rowCheckbox","render","valueProp","nameProp","valueFn","util","get","nameFn","meta","ariaLabel","value","preventDefault","td","parent","toString","namespace"],"mappings":"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"}