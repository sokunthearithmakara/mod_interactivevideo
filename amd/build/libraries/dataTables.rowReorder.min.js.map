{"version":3,"file":"dataTables.rowReorder.min.js","sources":["../../src/libraries/dataTables.rowReorder.js"],"sourcesContent":["/* eslint-disable */\n/*! RowReorder 1.5.0\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n\tif ( typeof define === 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( ['jquery', 'mod_interactivevideo/libraries/datatables'], function ( $ ) {\n\t\t\treturn factory( $, window, document );\n\t\t} );\n\t}\n\telse if ( typeof exports === 'object' ) {\n\t\t// CommonJS\n\t\tvar jq = require('jquery');\n\t\tvar cjsRequires = function (root, $) {\n\t\t\tif ( ! $.fn.dataTable ) {\n\t\t\t\trequire('mod_interactivevideo/libraries/datatables')(root, $);\n\t\t\t}\n\t\t};\n\n\t\tif (typeof window === 'undefined') {\n\t\t\tmodule.exports = function (root, $) {\n\t\t\t\tif ( ! root ) {\n\t\t\t\t\t// CommonJS environments without a window global must pass a\n\t\t\t\t\t// root. This will give an error otherwise\n\t\t\t\t\troot = window;\n\t\t\t\t}\n\n\t\t\t\tif ( ! $ ) {\n\t\t\t\t\t$ = jq( root );\n\t\t\t\t}\n\n\t\t\t\tcjsRequires( root, $ );\n\t\t\t\treturn factory( $, root, root.document );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tcjsRequires( window, jq );\n\t\t\tmodule.exports = factory( jq, window, window.document );\n\t\t}\n\t}\n\telse {\n\t\t// Browser\n\t\tfactory( jQuery, window, document );\n\t}\n}(function( $, window, document ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n\n/**\n * @summary     RowReorder\n * @description Row reordering extension for DataTables\n * @version     1.5.0\n * @author      SpryMedia Ltd\n * @contact     datatables.net\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n/**\n * RowReorder provides the ability in DataTables to click and drag rows to\n * reorder them. When a row is dropped the data for the rows effected will be\n * updated to reflect the change. Normally this data point should also be the\n * column being sorted upon in the DataTable but this does not need to be the\n * case. RowReorder implements a \"data swap\" method - so the rows being\n * reordered take the value of the data point from the row that used to occupy\n * the row's new position.\n *\n * Initialisation is done by either:\n *\n * * `rowReorder` parameter in the DataTable initialisation object\n * * `new DataTable.RowReorder( table, opts )` after DataTables\n *   initialisation.\n *\n *  @class\n *  @param {object} settings DataTables settings object for the host table\n *  @param {object} [opts] Configuration options\n *  @requires jQuery 1.7+\n *  @requires DataTables 1.11\n */\nvar RowReorder = function (dt, opts) {\n\t// Sanity check that we are using DataTables 1.10 or newer\n\tif (!DataTable.versionCheck || !DataTable.versionCheck('1.11')) {\n\t\tthrow 'DataTables RowReorder requires DataTables 1.11 or newer';\n\t}\n\n\t// User and defaults configuration object\n\tthis.c = $.extend(true, {}, DataTable.defaults.rowReorder, RowReorder.defaults, opts);\n\n\t// Internal settings\n\tthis.s = {\n\t\t/** @type {integer} Scroll body top cache */\n\t\tbodyTop: null,\n\n\t\t/** @type {DataTable.Api} DataTables' API instance */\n\t\tdt: new DataTable.Api(dt),\n\n\t\t/** @type {function} Data fetch function */\n\t\tgetDataFn: DataTable.util.get(this.c.dataSrc),\n\n\t\t/** @type {array} Pixel positions for row insertion calculation */\n\t\tmiddles: null,\n\n\t\t/** @type {Object} Cached dimension information for use in the mouse move event handler */\n\t\tscroll: {},\n\n\t\t/** @type {integer} Interval object used for smooth scrolling */\n\t\tscrollInterval: null,\n\n\t\t/** @type {function} Data set function */\n\t\tsetDataFn: DataTable.util.set(this.c.dataSrc),\n\n\t\t/** @type {Object} Mouse down information */\n\t\tstart: {\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\toffsetTop: 0,\n\t\t\toffsetLeft: 0,\n\t\t\tnodes: [],\n\t\t\trowIndex: 0\n\t\t},\n\n\t\t/** @type {integer} Window height cached value */\n\t\twindowHeight: 0,\n\n\t\t/** @type {integer} Document outer height cached value */\n\t\tdocumentOuterHeight: 0,\n\n\t\t/** @type {integer} DOM clone outer height cached value */\n\t\tdomCloneOuterHeight: 0,\n\n\t\t/** @type {integer} Flag used for signing if the drop is enabled or not */\n\t\tdropAllowed: true\n\t};\n\n\t// DOM items\n\tthis.dom = {\n\t\t/** @type {jQuery} Cloned row being moved around */\n\t\tclone: null,\n\t\tcloneParent: null,\n\n\t\t/** @type {jQuery} DataTables scrolling container */\n\t\tdtScroll: $('div.dataTables_scrollBody, div.dt-scroll-body', this.s.dt.table().container())\n\t};\n\n\t// Check if row reorder has already been initialised on this table\n\tvar settings = this.s.dt.settings()[0];\n\tvar existing = settings.rowreorder;\n\n\tif (existing) {\n\t\treturn existing;\n\t}\n\n\tif (!this.dom.dtScroll.length) {\n\t\tthis.dom.dtScroll = $(this.s.dt.table().container(), 'tbody');\n\t}\n\n\tsettings.rowreorder = this;\n\tthis._constructor();\n};\n\n$.extend(RowReorder.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Initialise the RowReorder instance\n\t *\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar table = $(dt.table().node());\n\n\t\t// Need to be able to calculate the row positions relative to the table\n\t\tif (table.css('position') === 'static') {\n\t\t\ttable.css('position', 'relative');\n\t\t}\n\n\t\t// listen for mouse down on the target column - we have to implement\n\t\t// this rather than using HTML5 drag and drop as drag and drop doesn't\n\t\t// appear to work on table rows at this time. Also mobile browsers are\n\t\t// not supported.\n\t\t// Use `table().container()` rather than just the table node for IE8 -\n\t\t// otherwise it only works once...\n\t\t$(dt.table().container()).on(\n\t\t\t'mousedown.rowReorder touchstart.rowReorder',\n\t\t\tthis.c.selector,\n\t\t\tfunction (e) {\n\t\t\t\tif (!that.c.enable) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore excluded children of the selector\n\t\t\t\tif ($(e.target).is(that.c.excludedChildren)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar tr = $(this).closest('tr');\n\t\t\t\tvar row = dt.row(tr);\n\n\t\t\t\t// Double check that it is a DataTable row\n\t\t\t\tif (row.any()) {\n\t\t\t\t\tthat._emitEvent('pre-row-reorder', {\n\t\t\t\t\t\tnode: row.node(),\n\t\t\t\t\t\tindex: row.index()\n\t\t\t\t\t});\n\n\t\t\t\t\tthat._mouseDown(e, tr);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tdt.on('destroy.rowReorder', function () {\n\t\t\t$(dt.table().container()).off('.rowReorder');\n\t\t\tdt.off('.rowReorder');\n\t\t});\n\n\t\tthis._keyup = this._keyup.bind(this);\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Cache the measurements that RowReorder needs in the mouse move handler\n\t * to attempt to speed things up, rather than reading from the DOM.\n\t *\n\t * @private\n\t */\n\t_cachePositions: function () {\n\t\tvar dt = this.s.dt;\n\n\t\t// Frustratingly, if we add `position:relative` to the tbody, the\n\t\t// position is still relatively to the parent. So we need to adjust\n\t\t// for that\n\t\tvar headerHeight = $(dt.table().node()).find('thead').outerHeight();\n\n\t\t// Need to pass the nodes through jQuery to get them in document order,\n\t\t// not what DataTables thinks it is, since we have been altering the\n\t\t// order\n\t\tvar nodes = $.unique(dt.rows({ page: 'current' }).nodes().toArray());\n\t\tvar middles = $.map(nodes, function (node, i) {\n\t\t\tvar top = $(node).position().top - headerHeight;\n\n\t\t\treturn (top + top + $(node).outerHeight()) / 2;\n\t\t});\n\n\t\tthis.s.middles = middles;\n\t\tthis.s.bodyTop = $(dt.table().body()).offset().top;\n\t\tthis.s.windowHeight = $(window).height();\n\t\tthis.s.documentOuterHeight = $(document).outerHeight();\n\t\tthis.s.bodyArea = this._calcBodyArea();\n\t},\n\n\t/**\n\t * Clone a row so it can be floated around the screen\n\t *\n\t * @param  {jQuery} target Node to be cloned\n\t * @private\n\t */\n\t_clone: function (target) {\n\t\tvar dt = this.s.dt;\n\t\tvar clone = $(dt.table().node().cloneNode(false))\n\t\t\t.addClass('dt-rowReorder-float')\n\t\t\t.append('<tbody/>')\n\t\t\t.append(target.clone(false));\n\n\t\t// Match the table and column widths - read all sizes before setting\n\t\t// to reduce reflows\n\t\tvar tableWidth = target.outerWidth();\n\t\tvar tableHeight = target.outerHeight();\n\t\tvar scrollBody = $($(this.s.dt.table().node()).parent());\n\t\tvar scrollWidth = scrollBody.width();\n\t\tvar scrollLeft = scrollBody.scrollLeft();\n\t\tvar sizes = target.children().map(function () {\n\t\t\treturn $(this).width();\n\t\t});\n\n\t\tclone\n\t\t\t.width(tableWidth)\n\t\t\t.height(tableHeight)\n\t\t\t.find('tr')\n\t\t\t.children()\n\t\t\t.each(function (i) {\n\t\t\t\tthis.style.width = sizes[i] + 'px';\n\t\t\t});\n\n\t\tvar cloneParent = $('<div>')\n\t\t\t.addClass('dt-rowReorder-float-parent')\n\t\t\t.width(scrollWidth)\n\t\t\t.append(clone)\n\t\t\t.appendTo('body')\n\t\t\t.scrollLeft(scrollLeft);\n\n\t\t// Insert into the document to have it floating around\n\n\t\tthis.dom.clone = clone;\n\t\tthis.dom.cloneParent = cloneParent;\n\t\tthis.s.domCloneOuterHeight = clone.outerHeight();\n\t},\n\n\t/**\n\t * Update the cloned item's position in the document\n\t *\n\t * @param  {object} e Event giving the mouse's position\n\t * @private\n\t */\n\t_clonePosition: function (e) {\n\t\tvar start = this.s.start;\n\t\tvar topDiff = this._eventToPage(e, 'Y') - start.top;\n\t\tvar leftDiff = this._eventToPage(e, 'X') - start.left;\n\t\tvar snap = this.c.snapX;\n\t\tvar left;\n\t\tvar top = topDiff + start.offsetTop;\n\n\t\tif (snap === true) {\n\t\t\tleft = start.offsetLeft;\n\t\t}\n\t\telse if (typeof snap === 'number') {\n\t\t\tleft = start.offsetLeft + snap;\n\t\t}\n\t\telse {\n\t\t\tleft = leftDiff + start.offsetLeft + this.dom.cloneParent.scrollLeft();\n\t\t}\n\n\t\tif (top < 0) {\n\t\t\ttop = 0;\n\t\t}\n\t\telse if (top + this.s.domCloneOuterHeight > this.s.documentOuterHeight) {\n\t\t\ttop = this.s.documentOuterHeight - this.s.domCloneOuterHeight;\n\t\t}\n\n\t\tthis.dom.cloneParent.css({\n\t\t\ttop: top,\n\t\t\tleft: left\n\t\t});\n\t},\n\n\t/**\n\t * Emit an event on the DataTable for listeners\n\t *\n\t * @param  {string} name Event name\n\t * @param  {array} args Event arguments\n\t * @private\n\t */\n\t_emitEvent: function ( name, args )\n\t{\n\t\tvar ret;\n\n\t\tthis.s.dt.iterator( 'table', function ( ctx, i ) {\n\t\t\tvar innerRet = $(ctx.nTable).triggerHandler( name+'.dt', args );\n\n\t\t\tif (innerRet !== undefined) {\n\t\t\t\tret = innerRet;\n\t\t\t}\n\t\t} );\n\n\t\treturn ret;\n\t},\n\n\t/**\n\t * Get pageX/Y position from an event, regardless of if it is a mouse or\n\t * touch event.\n\t *\n\t * @param  {object} e Event\n\t * @param  {string} pos X or Y (must be a capital)\n\t * @private\n\t */\n\t_eventToPage: function (e, pos) {\n\t\tif (e.type.indexOf('touch') !== -1) {\n\t\t\treturn e.originalEvent.touches[0]['page' + pos];\n\t\t}\n\n\t\treturn e['page' + pos];\n\t},\n\n\t/**\n\t * Mouse down event handler. Read initial positions and add event handlers\n\t * for the move.\n\t *\n\t * @param  {object} e      Mouse event\n\t * @param  {jQuery} target TR element that is to be moved\n\t * @private\n\t */\n\t_mouseDown: function (e, target) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar start = this.s.start;\n\t\tvar cancelable = this.c.cancelable;\n\n\t\tvar offset = target.offset();\n\t\tstart.top = this._eventToPage(e, 'Y');\n\t\tstart.left = this._eventToPage(e, 'X');\n\t\tstart.offsetTop = offset.top;\n\t\tstart.offsetLeft = offset.left;\n\t\tstart.nodes = $.unique(dt.rows({ page: 'current' }).nodes().toArray());\n\n\t\tthis._cachePositions();\n\t\tthis._clone(target);\n\t\tthis._clonePosition(e);\n\n\t\tvar bodyY = this._eventToPage(e, 'Y') - this.s.bodyTop;\n\t\tstart.rowIndex = this._calcRowIndexByPos(bodyY);\n\n\t\tthis.dom.target = target;\n\t\ttarget.addClass('dt-rowReorder-moving');\n\n\t\t$(document)\n\t\t\t.on('mouseup.rowReorder touchend.rowReorder', function (e) {\n\t\t\t\tthat._mouseUp(e);\n\t\t\t})\n\t\t\t.on('mousemove.rowReorder touchmove.rowReorder', function (e) {\n\t\t\t\tthat._mouseMove(e);\n\t\t\t});\n\n\t\t// Check if window is x-scrolling - if not, disable it for the duration\n\t\t// of the drag\n\t\tif ($(window).width() === $(document).width()) {\n\t\t\t$(document.body).addClass('dt-rowReorder-noOverflow');\n\t\t}\n\n\t\t// Cache scrolling information so mouse move doesn't need to read.\n\t\t// This assumes that the window and DT scroller will not change size\n\t\t// during an row drag, which I think is a fair assumption\n\t\tvar scrollWrapper = this.dom.dtScroll;\n\t\tthis.s.scroll = {\n\t\t\twindowHeight: $(window).height(),\n\t\t\twindowWidth: $(window).width(),\n\t\t\tdtTop: scrollWrapper.length ? scrollWrapper.offset().top : null,\n\t\t\tdtLeft: scrollWrapper.length ? scrollWrapper.offset().left : null,\n\t\t\tdtHeight: scrollWrapper.length ? scrollWrapper.outerHeight() : null,\n\t\t\tdtWidth: scrollWrapper.length ? scrollWrapper.outerWidth() : null\n\t\t};\n\n\t\t// Add keyup handler if dragging is cancelable\n\t\tif (cancelable) {\n\t\t\t$(document).on('keyup', this._keyup);\n\t\t}\n\t},\n\n\t/**\n\t * Mouse move event handler - move the cloned row and shuffle the table's\n\t * rows if required.\n\t *\n\t * @param  {object} e Mouse event\n\t * @private\n\t */\n\t_mouseMove: function (e) {\n\t\tthis._clonePosition(e);\n\n\t\tvar start = this.s.start;\n\t\tvar cancelable = this.c.cancelable;\n\n\t\tif (cancelable) {\n\t\t\tvar bodyArea = this.s.bodyArea;\n\t\t\tvar cloneArea = this._calcCloneParentArea();\n\t\t\tthis.s.dropAllowed = this._rectanglesIntersect(bodyArea, cloneArea);\n\n\t\t\tthis.s.dropAllowed\n\t\t\t\t? $(this.dom.cloneParent).removeClass('drop-not-allowed')\n\t\t\t\t: $(this.dom.cloneParent).addClass('drop-not-allowed');\n\t\t}\n\n\t\t// Transform the mouse position into a position in the table's body\n\t\tvar bodyY = this._eventToPage(e, 'Y') - this.s.bodyTop;\n\t\tvar middles = this.s.middles;\n\t\tvar insertPoint = null;\n\n\t\t// Determine where the row should be inserted based on the mouse\n\t\t// position\n\t\tfor (var i = 0, ien = middles.length; i < ien; i++) {\n\t\t\tif (bodyY < middles[i]) {\n\t\t\t\tinsertPoint = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (insertPoint === null) {\n\t\t\tinsertPoint = middles.length;\n\t\t}\n\n\t\tif (cancelable) {\n\t\t\tif (!this.s.dropAllowed) {\n\t\t\t\t// Move the row back to its original position becasuse the drop is not allowed\n\t\t\t\tinsertPoint =\n\t\t\t\t\tstart.rowIndex > this.s.lastInsert ? start.rowIndex + 1 : start.rowIndex;\n\t\t\t}\n\n\t\t\tthis.dom.target.toggleClass('dt-rowReorder-moving', this.s.dropAllowed);\n\t\t}\n\n\t\tthis._moveTargetIntoPosition(insertPoint);\n\n\t\tthis._shiftScroll(e);\n\t},\n\n\t/**\n\t * Mouse up event handler - release the event handlers and perform the\n\t * table updates\n\t *\n\t * @param  {object} e Mouse event\n\t * @private\n\t */\n\t_mouseUp: function (e) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar dataSrc = this.c.dataSrc;\n\t\tvar dropAllowed = this.s.dropAllowed;\n\n\t\tif (!dropAllowed) {\n\t\t\tthat._cancel();\n\t\t\treturn;\n\t\t}\n\n\t\t// Calculate the difference\n\t\tvar startNodes = this.s.start.nodes;\n\t\tvar endNodes = $.unique(dt.rows({ page: 'current' }).nodes().toArray());\n\t\tvar idDiff = {};\n\t\tvar fullDiff = [];\n\t\tvar diffNodes = [];\n\t\tvar getDataFn = this.s.getDataFn;\n\t\tvar setDataFn = this.s.setDataFn;\n\n\t\tfor (i = 0, ien = startNodes.length; i < ien; i++) {\n\t\t\tif (startNodes[i] !== endNodes[i]) {\n\t\t\t\tvar id = dt.row(endNodes[i]).id();\n\t\t\t\tvar endRowData = dt.row(endNodes[i]).data();\n\t\t\t\tvar startRowData = dt.row(startNodes[i]).data();\n\n\t\t\t\tif (id) {\n\t\t\t\t\tidDiff[id] = getDataFn(startRowData);\n\t\t\t\t}\n\n\t\t\t\tfullDiff.push({\n\t\t\t\t\tnode: endNodes[i],\n\t\t\t\t\toldData: getDataFn(endRowData),\n\t\t\t\t\tnewData: getDataFn(startRowData),\n\t\t\t\t\tnewPosition: i,\n\t\t\t\t\toldPosition: $.inArray(endNodes[i], startNodes)\n\t\t\t\t});\n\n\t\t\t\tdiffNodes.push(endNodes[i]);\n\t\t\t}\n\t\t}\n\n\t\t// Create event args\n\t\tvar eventArgs = [\n\t\t\tfullDiff,\n\t\t\t{\n\t\t\t\tdataSrc: dataSrc,\n\t\t\t\tnodes: diffNodes,\n\t\t\t\tvalues: idDiff,\n\t\t\t\ttriggerRow: dt.row(this.dom.target),\n\t\t\t\toriginalEvent: e\n\t\t\t}\n\t\t];\n\n\t\t// Emit event\n\t\tvar eventResult = this._emitEvent( 'row-reorder', eventArgs );\n\n\t\tif (eventResult === false) {\n\t\t\tthat._cancel();\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove cloned elements, handlers, etc\n\t\tthis._cleanupDragging();\n\n\t\tvar update = function () {\n\t\t\tif (that.c.update) {\n\t\t\t\tfor (i = 0, ien = fullDiff.length; i < ien; i++) {\n\t\t\t\t\tvar row = dt.row(fullDiff[i].node);\n\t\t\t\t\tvar rowData = row.data();\n\n\t\t\t\t\tsetDataFn(rowData, fullDiff[i].newData);\n\n\t\t\t\t\t// Invalidate the cell that has the same data source as the dataSrc\n\t\t\t\t\tdt.columns().every(function () {\n\t\t\t\t\t\tif (this.dataSrc() === dataSrc) {\n\t\t\t\t\t\t\tdt.cell(fullDiff[i].node, this.index()).invalidate('data');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Trigger row reordered event\n\t\t\t\tthat._emitEvent('row-reordered', eventArgs);\n\n\t\t\t\tdt.draw(false);\n\t\t\t}\n\t\t};\n\n\t\t// Editor interface\n\t\tif (this.c.editor) {\n\t\t\t// Disable user interaction while Editor is submitting\n\t\t\tthis.c.enable = false;\n\n\t\t\tthis.c.editor\n\t\t\t\t.edit(diffNodes, false, $.extend({ submit: 'changed' }, this.c.formOptions))\n\t\t\t\t.multiSet(dataSrc, idDiff)\n\t\t\t\t.one('preSubmitCancelled.rowReorder', function () {\n\t\t\t\t\tthat.c.enable = true;\n\t\t\t\t\tthat.c.editor.off('.rowReorder');\n\t\t\t\t\tdt.draw(false);\n\t\t\t\t})\n\t\t\t\t.one('submitUnsuccessful.rowReorder', function () {\n\t\t\t\t\tdt.draw(false);\n\t\t\t\t})\n\t\t\t\t.one('submitSuccess.rowReorder', function () {\n\t\t\t\t\tupdate();\n\t\t\t\t})\n\t\t\t\t.one('submitComplete', function () {\n\t\t\t\t\tthat.c.enable = true;\n\t\t\t\t\tthat.c.editor.off('.rowReorder');\n\t\t\t\t})\n\t\t\t\t.submit();\n\t\t}\n\t\telse {\n\t\t\tupdate();\n\t\t}\n\t},\n\n\t/**\n\t * Moves the current target into the given position within the table\n\t * and caches the new positions\n\t *\n\t * @param  {integer} insertPoint Position\n\t * @private\n\t */\n\t_moveTargetIntoPosition: function (insertPoint) {\n\t\tvar dt = this.s.dt;\n\n\t\t// Perform the DOM shuffle if it has changed from last time\n\t\tif (this.s.lastInsert === null || this.s.lastInsert !== insertPoint) {\n\t\t\tvar nodes = $.unique(dt.rows({ page: 'current' }).nodes().toArray());\n\t\t\tvar insertPlacement = '';\n\n\t\t\tif (insertPoint > this.s.lastInsert) {\n\t\t\t\tthis.dom.target.insertAfter(nodes[insertPoint - 1]);\n\t\t\t\tinsertPlacement = 'after';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.dom.target.insertBefore(nodes[insertPoint]);\n\t\t\t\tinsertPlacement = 'before';\n\t\t\t}\n\n\t\t\tthis._cachePositions();\n\n\t\t\tthis.s.lastInsert = insertPoint;\n\n\t\t\tthis._emitEvent('row-reorder-changed', {\n\t\t\t\tinsertPlacement,\n\t\t\t\tinsertPoint,\n\t\t\t\trow: dt.row(this.dom.target)\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Removes the cloned elements, event handlers, scrolling intervals, etc\n\t *\n\t * @private\n\t */\n\t_cleanupDragging: function () {\n\t\tvar cancelable = this.c.cancelable;\n\n\t\tthis.dom.clone.remove();\n\t\tthis.dom.cloneParent.remove();\n\t\tthis.dom.clone = null;\n\t\tthis.dom.cloneParent = null;\n\n\t\tthis.dom.target.removeClass('dt-rowReorder-moving');\n\t\t//this.dom.target = null;\n\n\t\t$(document).off('.rowReorder');\n\t\t$(document.body).removeClass('dt-rowReorder-noOverflow');\n\n\t\tclearInterval(this.s.scrollInterval);\n\t\tthis.s.scrollInterval = null;\n\n\t\tif (cancelable) {\n\t\t\t$(document).off('keyup', this._keyup);\n\t\t}\n\t},\n\n\t/**\n\t * Move the window and DataTables scrolling during a drag to scroll new\n\t * content into view.\n\t *\n\t * This matches the `_shiftScroll` method used in AutoFill, but only\n\t * horizontal scrolling is considered here.\n\t *\n\t * @param  {object} e Mouse move event object\n\t * @private\n\t */\n\t_shiftScroll: function (e) {\n\t\tvar that = this;\n\t\tvar scroll = this.s.scroll;\n\t\tvar runInterval = false;\n\t\tvar scrollSpeed = 5;\n\t\tvar buffer = 65;\n\t\tvar windowY = e.pageY - document.body.scrollTop,\n\t\t\twindowVert,\n\t\t\tdtVert;\n\n\t\t// Window calculations - based on the mouse position in the window,\n\t\t// regardless of scrolling\n\t\tif (windowY < $(window).scrollTop() + buffer) {\n\t\t\twindowVert = scrollSpeed * -1;\n\t\t}\n\t\telse if (windowY > scroll.windowHeight + $(window).scrollTop() - buffer) {\n\t\t\twindowVert = scrollSpeed;\n\t\t}\n\n\t\t// DataTables scrolling calculations - based on the table's position in\n\t\t// the document and the mouse position on the page\n\t\tif (scroll.dtTop !== null && e.pageY < scroll.dtTop + buffer) {\n\t\t\tdtVert = scrollSpeed * -1;\n\t\t}\n\t\telse if (scroll.dtTop !== null && e.pageY > scroll.dtTop + scroll.dtHeight - buffer) {\n\t\t\tdtVert = scrollSpeed;\n\t\t}\n\n\t\t// This is where it gets interesting. We want to continue scrolling\n\t\t// without requiring a mouse move, so we need an interval to be\n\t\t// triggered. The interval should continue until it is no longer needed,\n\t\t// but it must also use the latest scroll commands (for example consider\n\t\t// that the mouse might move from scrolling up to scrolling left, all\n\t\t// with the same interval running. We use the `scroll` object to \"pass\"\n\t\t// this information to the interval. Can't use local variables as they\n\t\t// wouldn't be the ones that are used by an already existing interval!\n\t\tif (windowVert || dtVert) {\n\t\t\tscroll.windowVert = windowVert;\n\t\t\tscroll.dtVert = dtVert;\n\t\t\trunInterval = true;\n\t\t}\n\t\telse if (this.s.scrollInterval) {\n\t\t\t// Don't need to scroll - remove any existing timer\n\t\t\tclearInterval(this.s.scrollInterval);\n\t\t\tthis.s.scrollInterval = null;\n\t\t}\n\n\t\t// If we need to run the interval to scroll and there is no existing\n\t\t// interval (if there is an existing one, it will continue to run)\n\t\tif (!this.s.scrollInterval && runInterval) {\n\t\t\tthis.s.scrollInterval = setInterval(function () {\n\t\t\t\t// Don't need to worry about setting scroll <0 or beyond the\n\t\t\t\t// scroll bound as the browser will just reject that.\n\t\t\t\tif (scroll.windowVert) {\n\t\t\t\t\tvar top = $(document).scrollTop();\n\t\t\t\t\t$(document).scrollTop(top + scroll.windowVert);\n\n\t\t\t\t\tif (top !== $(document).scrollTop()) {\n\t\t\t\t\t\tvar move = parseFloat(that.dom.cloneParent.css('top'));\n\t\t\t\t\t\tthat.dom.cloneParent.css('top', move + scroll.windowVert);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// DataTables scrolling\n\t\t\t\tif (scroll.dtVert) {\n\t\t\t\t\tvar scroller = that.dom.dtScroll[0];\n\n\t\t\t\t\tif (scroll.dtVert) {\n\t\t\t\t\t\tscroller.scrollTop += scroll.dtVert;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 20);\n\t\t}\n\t},\n\n\t/**\n\t * Calculates the current area of the table body and returns it as a rectangle\n\t *\n\t * @private\n\t */\n\t_calcBodyArea: function (e) {\n\t\tvar dt = this.s.dt;\n\t\tvar offset = $(dt.table().body()).offset();\n\t\tvar area = {\n\t\t\tleft: offset.left,\n\t\t\ttop: offset.top,\n\t\t\tright: offset.left + $(dt.table().body()).width(),\n\t\t\tbottom: offset.top + $(dt.table().body()).height()\n\t\t};\n\n\t\treturn area;\n\t},\n\n\t/**\n\t * Calculates the current area of the cloned parent element and returns it as a rectangle\n\t *\n\t * @private\n\t */\n\t_calcCloneParentArea: function (e) {\n\t\tvar offset = $(this.dom.cloneParent).offset();\n\t\tvar area = {\n\t\t\tleft: offset.left,\n\t\t\ttop: offset.top,\n\t\t\tright: offset.left + $(this.dom.cloneParent).width(),\n\t\t\tbottom: offset.top + $(this.dom.cloneParent).height()\n\t\t};\n\n\t\treturn area;\n\t},\n\n\t/**\n\t * Returns whether the given reactangles intersect or not\n\t *\n\t * @private\n\t */\n\t_rectanglesIntersect: function (a, b) {\n\t\tvar noOverlap =\n\t\t\ta.left >= b.right || b.left >= a.right || a.top >= b.bottom || b.top >= a.bottom;\n\n\t\treturn !noOverlap;\n\t},\n\n\t/**\n\t * Calculates the index of the row which lays under the given Y position or\n\t * returns -1 if no such row\n\t *\n\t * @param  {integer} insertPoint Position\n\t * @private\n\t */\n\t_calcRowIndexByPos: function (bodyY) {\n\t\t// Determine where the row is located based on the mouse\n\t\t// position\n\n\t\tvar dt = this.s.dt;\n\t\tvar nodes = $.unique(dt.rows({ page: 'current' }).nodes().toArray());\n\t\tvar rowIndex = -1;\n\t\tvar headerHeight = $(dt.table().node()).find('thead').outerHeight();\n\n\t\t$.each(nodes, function (i, node) {\n\t\t\tvar top = $(node).position().top - headerHeight;\n\t\t\tvar bottom = top + $(node).outerHeight();\n\n\t\t\tif (bodyY >= top && bodyY <= bottom) {\n\t\t\t\trowIndex = i;\n\t\t\t}\n\t\t});\n\n\t\treturn rowIndex;\n\t},\n\n\t/**\n\t * Handles key up events and cancels the dragging if ESC key is pressed\n\t *\n\t * @param  {object} e Mouse move event object\n\t * @private\n\t */\n\t_keyup: function (e) {\n\t\tvar cancelable = this.c.cancelable;\n\n\t\tif (cancelable && e.which === 27) {\n\t\t\t// ESC key is up\n\t\t\te.preventDefault();\n\t\t\tthis._cancel();\n\t\t}\n\t},\n\n\t/**\n\t * Cancels the dragging, moves target back into its original position\n\t * and cleans up the dragging\n\t *\n\t * @param  {object} e Mouse move event object\n\t * @private\n\t */\n\t_cancel: function () {\n\t\tvar start = this.s.start;\n\t\tvar insertPoint = start.rowIndex > this.s.lastInsert ? start.rowIndex + 1 : start.rowIndex;\n\n\t\tthis._moveTargetIntoPosition(insertPoint);\n\n\t\tthis._cleanupDragging();\n\n\t\t// Emit event\n\t\tthis._emitEvent('row-reorder-canceled', [this.s.start.rowIndex]);\n\t}\n});\n\n/**\n * RowReorder default settings for initialisation\n *\n * @namespace\n * @name RowReorder.defaults\n * @static\n */\nRowReorder.defaults = {\n\t/**\n\t * Data point in the host row's data source object for where to get and set\n\t * the data to reorder. This will normally also be the sorting column.\n\t *\n\t * @type {Number}\n\t */\n\tdataSrc: 0,\n\n\t/**\n\t * Editor instance that will be used to perform the update\n\t *\n\t * @type {DataTable.Editor}\n\t */\n\teditor: null,\n\n\t/**\n\t * Enable / disable RowReorder's user interaction\n\t * @type {Boolean}\n\t */\n\tenable: true,\n\n\t/**\n\t * Form options to pass to Editor when submitting a change in the row order.\n\t * See the Editor `from-options` object for details of the options\n\t * available.\n\t * @type {Object}\n\t */\n\tformOptions: {},\n\n\t/**\n\t * Drag handle selector. This defines the element that when dragged will\n\t * reorder a row.\n\t *\n\t * @type {String}\n\t */\n\tselector: 'td:first-child',\n\n\t/**\n\t * Optionally lock the dragged row's x-position. This can be `true` to\n\t * fix the position match the host table's, `false` to allow free movement\n\t * of the row, or a number to define an offset from the host table.\n\t *\n\t * @type {Boolean|number}\n\t */\n\tsnapX: false,\n\n\t/**\n\t * Update the table's data on drop\n\t *\n\t * @type {Boolean}\n\t */\n\tupdate: true,\n\n\t/**\n\t * Selector for children of the drag handle selector that mouseDown events\n\t * will be passed through to and drag will not activate\n\t *\n\t * @type {String}\n\t */\n\texcludedChildren: 'a',\n\n\t/**\n\t * Enable / disable the canceling of the drag & drop interaction\n\t *\n\t * @type {Boolean}\n\t */\n\tcancelable: false\n};\n\n/*\n * API\n */\nvar Api = $.fn.dataTable.Api;\n\n// Doesn't do anything - work around for a bug in DT... Not documented\nApi.register('rowReorder()', function () {\n\treturn this;\n});\n\nApi.register('rowReorder.enable()', function (toggle) {\n\tif (toggle === undefined) {\n\t\ttoggle = true;\n\t}\n\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx.rowreorder) {\n\t\t\tctx.rowreorder.c.enable = toggle;\n\t\t}\n\t});\n});\n\nApi.register('rowReorder.disable()', function () {\n\treturn this.iterator('table', function (ctx) {\n\t\tif (ctx.rowreorder) {\n\t\t\tctx.rowreorder.c.enable = false;\n\t\t}\n\t});\n});\n\n/**\n * Version information\n *\n * @name RowReorder.version\n * @static\n */\nRowReorder.version = '1.5.0';\n\n$.fn.dataTable.RowReorder = RowReorder;\n$.fn.DataTable.RowReorder = RowReorder;\n\n// Attach a listener to the document which listens for DataTables initialisation\n// events so we can automatically initialise\n$(document).on('init.dt.dtr', function (e, settings, json) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tvar init = settings.oInit.rowReorder;\n\tvar defaults = DataTable.defaults.rowReorder;\n\n\tif (init || defaults) {\n\t\tvar opts = $.extend({}, init, defaults);\n\n\t\tif (init !== false) {\n\t\t\tnew RowReorder(settings, opts);\n\t\t}\n\t}\n});\n\n\nreturn DataTable;\n}));\n"],"names":["factory","define","amd","$","window","document","exports","jq","require","cjsRequires","root","fn","dataTable","module","jQuery","DataTable","RowReorder","dt","opts","versionCheck","c","extend","defaults","rowReorder","s","bodyTop","Api","getDataFn","util","get","this","dataSrc","middles","scroll","scrollInterval","setDataFn","set","start","top","left","offsetTop","offsetLeft","nodes","rowIndex","windowHeight","documentOuterHeight","domCloneOuterHeight","dropAllowed","dom","clone","cloneParent","dtScroll","table","container","settings","existing","rowreorder","length","_constructor","prototype","that","node","css","on","selector","e","enable","target","is","excludedChildren","tr","closest","row","any","_emitEvent","index","_mouseDown","off","_keyup","bind","_cachePositions","headerHeight","find","outerHeight","unique","rows","page","toArray","map","i","position","body","offset","height","bodyArea","_calcBodyArea","_clone","cloneNode","addClass","append","tableWidth","outerWidth","tableHeight","scrollBody","parent","scrollWidth","width","scrollLeft","sizes","children","each","style","appendTo","_clonePosition","topDiff","_eventToPage","leftDiff","snap","snapX","name","args","ret","iterator","ctx","innerRet","nTable","triggerHandler","undefined","pos","type","indexOf","originalEvent","touches","cancelable","bodyY","_calcRowIndexByPos","_mouseUp","_mouseMove","scrollWrapper","windowWidth","dtTop","dtLeft","dtHeight","dtWidth","cloneArea","_calcCloneParentArea","_rectanglesIntersect","removeClass","insertPoint","ien","lastInsert","toggleClass","_moveTargetIntoPosition","_shiftScroll","startNodes","endNodes","idDiff","fullDiff","diffNodes","id","endRowData","data","startRowData","push","oldData","newData","newPosition","oldPosition","inArray","eventArgs","values","triggerRow","_cleanupDragging","update","rowData","columns","every","cell","invalidate","draw","editor","edit","submit","formOptions","multiSet","one","_cancel","insertPlacement","insertAfter","insertBefore","remove","clearInterval","windowVert","dtVert","runInterval","windowY","pageY","scrollTop","scrollSpeed","setInterval","move","parseFloat","scroller","right","bottom","a","b","which","preventDefault","register","toggle","version","json","namespace","init","oInit"],"mappings":"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"}