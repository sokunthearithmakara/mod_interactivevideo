{"version":3,"file":"report.min.js","sources":["../src/report.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle report page\n *\n * @module     mod_interactivevideo/report\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Notification from 'core/notification';\nimport {add as addToast} from 'core/toast';\nimport JSZip from 'mod_interactivevideo/libraries/jszip';\nimport 'mod_interactivevideo/libraries/jquery.dataTables';\nimport 'mod_interactivevideo/libraries/dataTables.bootstrap4';\nimport 'mod_interactivevideo/libraries/dataTables.buttons';\nimport 'mod_interactivevideo/libraries/buttons.bootstrap4';\nimport 'mod_interactivevideo/libraries/buttons.html5';\n\n/**\n * Initializes the report functionality for the interactive video module.\n *\n * @param {number} cmid - The course module ID.\n * @param {number} groupid - The group ID.\n */\nconst init = (cmid, groupid) => {\n    window.JSZip = JSZip;\n\n    const getContentTypes = $.ajax({\n        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n        method: \"POST\",\n        dataType: \"text\",\n        data: {\n            action: 'getallcontenttypes',\n            sesskey: M.cfg.sesskey,\n            contextid: M.cfg.contextid,\n        }\n    });\n\n    const getReportData = $.ajax({\n        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n        method: 'POST',\n        data: {\n            action: 'getreportdatabygroup',\n            cmid: cmid,\n            sesskey: M.cfg.sesskey,\n            contextid: M.cfg.contextid,\n            ctxid: M.cfg.courseContextId,\n            groupid: groupid\n        }\n    });\n\n    let itemsdata = $('#itemsdata').text();\n    itemsdata = JSON.parse(itemsdata);\n\n    let contentTypes;\n    let tabledata;\n    $.when(getContentTypes, getReportData).done((ct, data) => {\n        contentTypes = JSON.parse(ct[0]);\n        data = data[0];\n        /**\n         * Configuration options for initializing a DataTable.\n         *\n         * @type {Object}\n         * @property {Array} data - The data to be displayed in the table.\n         * @property {boolean} deferRender - If true, the table will defer rendering of rows until they are needed.\n         * @property {string} rowId - The property to use as the unique identifier for each row.\n         * @property {number} pageLength - The number of rows to display per page.\n         * @property {Array} order - The initial sorting order of the table.\n         * @property {Array} columns - Configuration for each column in the table.\n         * @property {Object} language - Customization of the language strings used by the DataTable.\n         * @property {Function} stateSaveParams - Function to modify the state saving parameters.\n         * @property {boolean} stateSave - If true, the table state will be saved in local storage.\n         * @property {string} dom - The layout of the table controls.\n         * @property {Array} buttons - Configuration for the export buttons.\n         * @property {Function} initComplete - Function to execute when the table initialization is complete.\n         */\n        let datatableOptions = {\n            \"data\": data,\n            \"deferRender\": true,\n            \"rowId\": \"id\",\n            \"pageLength\": 25,\n            \"order\": [[1, \"asc\"]],\n            \"columns\": [\n                {\n                    data: \"id\",\n                    visible: false\n                },\n                {\n                    data: \"picture\",\n                    render: function(data, type, row) {\n                        let deletebutton = `<button title=\"${M.util.get_string('reset', 'mod_interactivevideo')}\"\n                         class=\"btn btn-sm text-danger reset m-1\" data-record=\"${row.completionid}\" data-userid=\"${row.id}\">\n                         <i class=\"bi bi-trash3\"></i></button>`;\n                        return `<div class=\"text-truncate d-flex align-items-center justify-content-between\">${data}\n                        ${row.completionpercentage > 0 ? deletebutton : ''}</div>`;\n                    },\n                    className: \"bg-white sticky-left-0\",\n                },\n                {\n                    data: \"firstname\",\n                    className: \"exportable\"\n                },\n                {\n                    data: \"lastname\",\n                    className: \"exportable\"\n                },\n                {\n                    data: \"email\",\n                    className: \"exportable\"\n                },\n                {\n                    data: \"timecreated\",\n                    \"render\": function(data, type) {\n                        if (!data || data == 0) {\n                            if (type === 'display') {\n                                return M.util.get_string('notstarted', 'mod_interactivevideo');\n                            } else {\n                                return 0;\n                            }\n                        } else {\n                            const date = new Date(data * 1000);\n                            if (type === 'display') {\n                                return date.toLocaleString();\n                            } else if (type === 'filter' || type === 'sort') {\n                                return date.getTime();\n                            }\n                            return data;\n                        }\n                    },\n                    className: \"exportable\"\n                },\n                {\n                    data: \"timecompleted\",\n                    render: function(data, type, row) {\n                        if (!data || data == 0) {\n                            if (!row.timecreated) {\n                                return '';\n                            } else {\n                                if (type === 'display') {\n                                    return M.util.get_string('inprogress', 'mod_interactivevideo');\n                                } else {\n                                    return 0;\n                                }\n                            }\n                        } else {\n                            const date = new Date(data * 1000);\n                            if (type === 'display') {\n                                return date.toLocaleString();\n                            } else if (type === 'filter' || type === 'sort') {\n                                return date.getTime();\n                            }\n                            return data;\n                        }\n                    },\n                    className: \"exportable\"\n                },\n                {\n                    data: \"completionpercentage\",\n                    render: function(data) {\n                        if (data) {\n                            return data + \"%\";\n                        } else {\n                            return \"\";\n                        }\n                    },\n                    className: \"exportable\"\n                },\n                {\n                    data: \"xp\",\n                    render: function(data) {\n                        if (data) {\n                            return data;\n                        } else {\n                            return \"\";\n                        }\n                    },\n                    className: \"exportable\"\n                }\n            ],\n            \"language\": {\n                \"lengthMenu\": \"_MENU_\",\n                \"zeroRecords\": M.util.get_string('nofound', \"mod_interactivevideo\"),\n                \"search\": `<span class=\"d-none d-md-inline\">${M.util.get_string('search', \"mod_interactivevideo\")}</span>`,\n                \"info\": M.util.get_string('datatableinfo', \"mod_interactivevideo\"),\n                \"infoEmpty\": M.util.get_string('datatableinfoempty', \"mod_interactivevideo\"),\n                \"infoFiltered\": M.util.get_string('datatableinfofiltered', \"mod_interactivevideo\"),\n                \"paginate\": {\n                    \"first\": M.util.get_string('first', 'mod_interactivevideo'),\n                    \"last\": M.util.get_string('last', 'mod_interactivevideo'),\n                    \"next\": M.util.get_string('next', 'mod_interactivevideo'),\n                    \"previous\": M.util.get_string('previous', 'mod_interactivevideo')\n                }\n            },\n            stateSaveParams: function(settings, data) {\n                // We only want to save the state of the colvis and length menu\n                data.search.search = \"\";\n                data.start = 0;\n                data.columns.forEach(function(column) {\n                    column.search.search = \"\";\n                });\n                return data;\n            },\n            stateSave: true,\n            \"dom\": `<'d-flex w-100 justify-content-between`\n                + `'<'d-flex align-items-start'Bl>'<''f>>t<'row mt-2'<'col-sm-6'i><'col-sm-6'p>>`,\n            \"buttons\": [\n                {\n                    extend: \"copyHtml5\",\n                    text: '<i class=\"bi bi-copy fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm\",\n                    messageTop: null,\n                    title: null,\n                    exportOptions: {\n                        columns: ['.exportable'],\n                        format: {\n                            body: function(data) {\n                                // Strip HTML tags to get text only\n                                const div = document.createElement(\"div\");\n                                div.innerHTML = data;\n                                return (div.textContent || div.innerText || \"\").trim();\n                            }\n                        }\n                    }\n                },\n                {\n                    extend: \"csvHtml5\",\n                    text: '<i class=\"bi bi-filetype-csv fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm\",\n                    exportOptions: {\n                        columns: ['.exportable'],\n                        format: {\n                            body: function(data) {\n                                // Strip HTML tags to get text only\n                                const div = document.createElement(\"div\");\n                                div.innerHTML = data;\n                                return (div.textContent || div.innerText || \"\").trim();\n                            }\n                        }\n                    }\n                },\n                {\n                    extend: \"excelHtml5\",\n                    text: '<i class=\"bi bi-file-earmark-excel fa-fw fs-unset\"></i>',\n                    className: \"btn btn-sm\",\n                    exportOptions: {\n                        columns: ['.exportable'],\n                        format: {\n                            body: function(data) {\n                                // Strip HTML tags to get text only\n                                const div = document.createElement(\"div\");\n                                div.innerHTML = data;\n                                return (div.textContent || div.innerText || \"\").trim();\n                            }\n                        }\n                    }\n                }\n            ],\n            \"initComplete\": function() {\n                $(\"table#completiontable\")\n                    .wrap(\"<div style='overflow:auto;position:relative' class='completiontablewrapper'></div>\");\n                $(\"#reporttable .dataTables_length \").addClass(\"d-inline ml-1\");\n                $(\"#reporttable .dataTables_filter\").addClass(\"d-inline float-right\");\n                $(\"#reporttable .table-responsive\").addClass(\"p-1\");\n                $(\"#reporttable .spinner-grow\").remove();\n                $(\"table#completiontable\").removeClass(\"d-none\");\n\n            }\n        };\n\n        $(\"#reporttable th.rotate\").each(function() {\n            const itemid = $(this).data(\"item\").toString();\n            const ctype = $(this).data(\"type\");\n            datatableOptions.columns.push({\n                data: null,\n                sortable: false,\n                className: \"text-center exportable\",\n                render: function(data, rtype, row) {\n                    if (!data.completeditems) {\n                        return `<i class=\"fa fa-times\"></i>`;\n                    }\n                    let completeditems = JSON.parse(data.completeditems);\n                    let completiondetails;\n                    try {\n                        completiondetails = JSON.parse(data.completiondetails).map(x => JSON.parse(x));\n                    } catch (e) {\n                        completiondetails = [];\n                    }\n                    if (completeditems) {\n                        if (completeditems.indexOf(itemid) > -1) {\n                            let details = completiondetails.find(x => Number(x.id) == Number(itemid));\n                            if (details) {\n                                return `<span class=\"completion-detail ${details.hasDetails ? 'cursor-pointer' : ''}\"\n                                 data-id=\"${itemid}\" data-userid=\"${row.id}\" data-type=\"${ctype}\">${details.reportView}</span>`;\n                            } else {\n                                return '';\n                            }\n                        } else {\n                            return '<i class=\"fa fa-times\"></i><span class=\"d-none\">-</span>';\n                        }\n                    } else {\n                        return '<i class=\"fa fa-times\"></i><span class=\"d-none\">-</span>';\n                    }\n                },\n            });\n        });\n\n        tabledata = $('#completiontable').DataTable(datatableOptions);\n    });\n\n    $(document).on('click', '[data-item] a', function() {\n        const convertSecondsToHMS = (seconds) => {\n            const h = Math.floor(seconds / 3600);\n            const m = Math.floor(seconds % 3600 / 60);\n            const s = Math.floor(seconds % 3600 % 60);\n            return (h > 0 ? h + ':' : '') + (m < 10 ? '0' : '') + m + ':' + (s < 10 ? '0' : '') + s;\n        };\n        let annotationid = $(this).closest('th').data('item');\n        let theAnnotation = itemsdata.find(x => x.id == annotationid);\n        let tabledatajson = tabledata.rows().data().toArray();\n        const modal = `<div class=\"modal fade\" id=\"annotation-modal\" role=\"dialog\"\n            aria-labelledby=\"annotation-modal\"\n         aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n         <div id=\"message\" data-id=\"${theAnnotation.id}\" data-placement=\"popup\"\n          class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n            <div class=\"modal-content rounded-lg\">\n                <div class=\"modal-header d-flex align-items-center shadow-sm\" id=\"title\">\n                    <h5 class=\"modal-title text-truncate mb-0\">${theAnnotation.formattedtitle\n            + \" @ \" + convertSecondsToHMS(theAnnotation.timestamp)}</h5>\n                    <div class=\"btns d-flex align-items-center\">\n                        <button class=\"btn close-modal p-0\" aria-label=\"Close\" data-dismiss=\"modal\">\n                        <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class=\"modal-body\" id=\"content\">\n                <div class=\"loader w-100 mt-5\"></div>\n                </div>\n                </div>\n            </div>\n            </div>`;\n        $('body').append(modal);\n        $('#annotation-modal').modal('show');\n        $('#annotation-modal').on('hide.bs.modal', function() {\n            $('#annotation-modal').remove();\n        });\n\n        $('#annotation-modal').on('shown.bs.modal', function() {\n            $('#annotation-modal .modal-body').fadeIn(300);\n            let matchingContentTypes = contentTypes.find(x => x.name === theAnnotation.type);\n            let amdmodule = matchingContentTypes.amdmodule;\n            require([amdmodule + ''], function(Module) {\n                theAnnotation.completed = true;\n                new Module().displayReportView(theAnnotation, tabledatajson);\n            });\n            $(this).find('.close-modal').focus();\n        });\n    });\n\n    $(document).on('click', 'td .reset', function(e) {\n        e.preventDefault();\n        const recordid = $(this).data('record');\n        let $this = $(this);\n        try {\n        Notification.deleteCancel(\n            M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n            M.util.get_string('areyousureyouwanttoresetthecompletiondata', 'mod_interactivevideo'),\n            M.util.get_string('delete', 'mod_interactivevideo'),\n            function() {\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: 'POST',\n                    dataType: \"text\",\n                    data: {\n                        action: 'delete_progress_by_id',\n                        recordid,\n                        contextid: M.cfg.contextid,\n                        sesskey: M.cfg.sesskey,\n                    },\n                    success: function(response) {\n                        if (response == 'deleted') {\n                            let targetdata = tabledata.row($this.closest('tr')).data();\n                            targetdata.completionpercentage = 0;\n                            targetdata.timecompleted = 0;\n                            targetdata.xp = 0;\n                            targetdata.timecreated = 0;\n                            targetdata.completeditems = null;\n                            targetdata.completiondetails = null;\n                            targetdata.completionid = null;\n                            tabledata.row($this.closest('tr')).data(targetdata).draw();\n                            addToast(M.util.get_string('completionresetsuccess', 'mod_interactivevideo'), {\n                                type: 'success'\n                            });\n                        }\n                    },\n                    error: function() {\n                        addToast(M.util.get_string('completionreseterror', 'mod_interactivevideo'), {\n                            type: 'error'\n                        });\n                    }\n                });\n            },\n            null\n        );\n    } catch {\n        Notification.deleteCancelPromise(\n            M.util.get_string('deletecompletion', 'mod_interactivevideo'),\n            M.util.get_string('areyousureyouwanttoresetthecompletiondata', 'mod_interactivevideo'),\n            M.util.get_string('delete', 'mod_interactivevideo')\n        ).then(() => {\n            return $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: 'POST',\n                dataType: \"text\",\n                data: {\n                    action: 'delete_progress_by_id',\n                    recordid,\n                    contextid: M.cfg.contextid,\n                    sesskey: M.cfg.sesskey,\n                },\n                success: function(response) {\n                    if (response == 'deleted') {\n                        let targetdata = tabledata.row($this.closest('tr')).data();\n                        targetdata.completionpercentage = 0;\n                        targetdata.timecompleted = 0;\n                        targetdata.xp = 0;\n                        targetdata.timecreated = 0;\n                        targetdata.completeditems = null;\n                        targetdata.completiondetails = null;\n                        targetdata.completionid = null;\n                        tabledata.row($this.closest('tr')).data(targetdata).draw();\n                        addToast(M.util.get_string('completionresetsuccess', 'mod_interactivevideo'), {\n                            type: 'success'\n                        });\n                    }\n                },\n                error: function() {\n                    addToast(M.util.get_string('completionreseterror', 'mod_interactivevideo'), {\n                        type: 'error'\n                    });\n                }\n            });\n        }).catch(() => {\n            return;\n        });\n    }\n    });\n\n    $(document).on('click', 'td .completion-detail', function() {\n        let id = $(this).data('id');\n        let userid = $(this).data('userid');\n        let type = $(this).data('type');\n        let matchingContentTypes = contentTypes.find(x => x.name === type);\n        let amdmodule = matchingContentTypes.amdmodule;\n        // Get column header with the item id.\n        let theAnnotation = itemsdata.find(x => x.id == id);\n        require([amdmodule + ''], function(Module) {\n            new Module().getCompletionData(theAnnotation, userid);\n        });\n    });\n};\n\n\n/**\n * Renders annotation logs in a DataTable with specified options.\n *\n * @param {Object} data - The data to be displayed in the table.\n * @param {Array} data.rows - The rows of data to be displayed.\n * @param {string} node - The DOM node selector where the table will be rendered.\n * @param {string} title - The title used for export options.\n */\nconst renderAnnotationLogs = (data, node, title) => {\n    let tableOptions = {\n        \"data\": data.rows,\n        \"deferRender\": true,\n        \"pageLength\": 25,\n        \"order\": [[0, \"asc\"]],\n        \"columnDefs\": [\n            {\n                \"targets\": 'not-sortable',\n                \"sortable\": false,\n            },\n        ],\n        \"language\": {\n            \"lengthMenu\": \"_MENU_\",\n            \"zeroRecords\": M.util.get_string('nofound', \"mod_interactivevideo\"),\n            \"search\": M.util.get_string('search', \"mod_interactivevideo\"),\n            \"info\": M.util.get_string('datatableinfo', \"mod_interactivevideo\"),\n            \"infoEmpty\": M.util.get_string('datatableinfoempty', \"mod_interactivevideo\"),\n            \"infoFiltered\": M.util.get_string('datatableinfofiltered', \"mod_interactivevideo\"),\n            \"paginate\": {\n                \"first\": M.util.get_string('first', 'mod_interactivevideo'),\n                \"last\": M.util.get_string('last', 'mod_interactivevideo'),\n                \"next\": M.util.get_string('next', 'mod_interactivevideo'),\n                \"previous\": M.util.get_string('previous', 'mod_interactivevideo')\n            }\n        },\n        stateSaveParams: function(settings, data) {\n            // We only want to save the state of the colvis and length menu\n            data.search.search = \"\";\n            data.start = 0;\n            data.columns.forEach(function(column) {\n                column.search.search = \"\";\n            });\n            return data;\n        },\n        stateSave: true,\n        \"dom\": `Blft<'row'<'col-sm-6'i><'col-sm-6'p>>`,\n        \"buttons\": [\n            {\n                extend: \"copyHtml5\",\n                text: '<i class=\"bi bi-copy fa-fw fs-unset\"></i>',\n                className: \"btn btn-sm\",\n                messageTop: null,\n                title: null,\n                exportOptions: {\n                    columns: ['.exportable']\n                }\n            },\n            {\n                extend: \"csvHtml5\",\n                text: '<i class=\"bi bi-filetype-csv fa-fw fs-unset\"></i>',\n                title: title,\n                className: \"btn btn-sm\",\n                exportOptions: {\n                    columns: ['.exportable']\n                }\n            },\n            {\n                extend: \"excelHtml5\",\n                text: '<i class=\"bi bi-file-earmark-excel fa-fw fs-unset\"></i>',\n                className: \"btn btn-sm\",\n                title: title,\n                exportOptions: {\n                    columns: ['.exportable']\n                }\n            }\n        ],\n        \"initComplete\": function() {\n            $(`${node} table`)\n                .wrap(\"<div style='overflow:auto;position:relative' class='completiontablewrapper'></div>\");\n            $(`${node} .dataTables_length`).addClass(\"d-inline ml-1\");\n            $(`${node} .dataTables_filter`).addClass(\"d-inline float-right\");\n            $(`${node} .table-responsive`).addClass(\"p-1\");\n        }\n    };\n\n    $(`${node} table`).DataTable(tableOptions);\n};\n\nexport {\n    init,\n    renderAnnotationLogs\n};"],"names":["cmid","groupid","window","JSZip","getContentTypes","$","ajax","url","M","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","getReportData","ctxid","courseContextId","contentTypes","tabledata","itemsdata","text","JSON","parse","when","done","ct","datatableOptions","visible","render","type","row","deletebutton","util","get_string","completionid","id","completionpercentage","className","date","Date","toLocaleString","getTime","timecreated","stateSaveParams","settings","search","start","columns","forEach","column","stateSave","extend","messageTop","title","exportOptions","format","body","div","document","createElement","innerHTML","textContent","innerText","trim","wrap","addClass","remove","removeClass","each","itemid","this","toString","ctype","push","sortable","rtype","completeditems","completiondetails","map","x","e","indexOf","details","find","Number","hasDetails","reportView","DataTable","on","annotationid","closest","theAnnotation","tabledatajson","rows","toArray","modal","formattedtitle","seconds","h","Math","floor","m","s","convertSecondsToHMS","timestamp","append","fadeIn","amdmodule","name","require","Module","completed","displayReportView","focus","preventDefault","recordid","$this","deleteCancel","success","response","targetdata","timecompleted","xp","draw","error","deleteCancelPromise","then","catch","userid","getCompletionData","node","tableOptions"],"mappings":";;;;;;;gQAsCa,CAACA,KAAMC,WAChBC,OAAOC,MAAQA,qBAETC,gBAAkBC,gBAAEC,KAAK,CAC3BC,IAAKC,EAAEC,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,qBACRC,QAASP,EAAEC,IAAIM,QACfC,UAAWR,EAAEC,IAAIO,aAInBC,cAAgBZ,gBAAEC,KAAK,CACzBC,IAAKC,EAAEC,IAAIC,QAAU,iCACrBC,OAAQ,OACRE,KAAM,CACFC,OAAQ,uBACRd,KAAMA,KACNe,QAASP,EAAEC,IAAIM,QACfC,UAAWR,EAAEC,IAAIO,UACjBE,MAAOV,EAAEC,IAAIU,gBACblB,QAASA,eAObmB,aACAC,UAJAC,WAAY,mBAAE,cAAcC,OAChCD,UAAYE,KAAKC,MAAMH,2BAIrBI,KAAKtB,gBAAiBa,eAAeU,MAAK,CAACC,GAAIf,QAC7CO,aAAeI,KAAKC,MAAMG,GAAG,QAmBzBC,iBAAmB,MAlBvBhB,KAAOA,KAAK,gBAoBO,QACN,gBACK,SACL,CAAC,CAAC,EAAG,gBACH,CACP,CACIA,KAAM,KACNiB,SAAS,GAEb,CACIjB,KAAM,UACNkB,OAAQ,SAASlB,KAAMmB,KAAMC,SACrBC,sCAAiC1B,EAAE2B,KAAKC,WAAW,QAAS,qHACPH,IAAII,uCAA8BJ,IAAIK,sKAERzB,0CACrFoB,IAAIM,qBAAuB,EAAIL,aAAe,cAEpDM,UAAW,0BAEf,CACI3B,KAAM,YACN2B,UAAW,cAEf,CACI3B,KAAM,WACN2B,UAAW,cAEf,CACI3B,KAAM,QACN2B,UAAW,cAEf,CACI3B,KAAM,qBACI,SAASA,KAAMmB,SAChBnB,MAAgB,GAARA,KAMN,OACG4B,KAAO,IAAIC,KAAY,IAAP7B,YACT,YAATmB,KACOS,KAAKE,iBACI,WAATX,MAA8B,SAATA,KACrBS,KAAKG,UAET/B,WAZM,YAATmB,KACOxB,EAAE2B,KAAKC,WAAW,aAAc,wBAEhC,GAYnBI,UAAW,cAEf,CACI3B,KAAM,gBACNkB,OAAQ,SAASlB,KAAMmB,KAAMC,QACpBpB,MAAgB,GAARA,KAUN,OACG4B,KAAO,IAAIC,KAAY,IAAP7B,YACT,YAATmB,KACOS,KAAKE,iBACI,WAATX,MAA8B,SAATA,KACrBS,KAAKG,UAET/B,YAhBFoB,IAAIY,YAGQ,YAATb,KACOxB,EAAE2B,KAAKC,WAAW,aAAc,wBAEhC,EALJ,IAkBnBI,UAAW,cAEf,CACI3B,KAAM,uBACNkB,OAAQ,SAASlB,aACTA,KACOA,KAAO,IAEP,IAGf2B,UAAW,cAEf,CACI3B,KAAM,KACNkB,OAAQ,SAASlB,aACTA,MAGO,IAGf2B,UAAW,wBAGP,YACM,qBACChC,EAAE2B,KAAKC,WAAW,UAAW,0EACE5B,EAAE2B,KAAKC,WAAW,SAAU,wCAClE5B,EAAE2B,KAAKC,WAAW,gBAAiB,kCAC9B5B,EAAE2B,KAAKC,WAAW,qBAAsB,qCACrC5B,EAAE2B,KAAKC,WAAW,wBAAyB,iCAC/C,OACC5B,EAAE2B,KAAKC,WAAW,QAAS,6BAC5B5B,EAAE2B,KAAKC,WAAW,OAAQ,6BAC1B5B,EAAE2B,KAAKC,WAAW,OAAQ,iCACtB5B,EAAE2B,KAAKC,WAAW,WAAY,0BAGlDU,gBAAiB,SAASC,SAAUlC,aAEhCA,KAAKmC,OAAOA,OAAS,GACrBnC,KAAKoC,MAAQ,EACbpC,KAAKqC,QAAQC,SAAQ,SAASC,QAC1BA,OAAOJ,OAAOA,OAAS,MAEpBnC,MAEXwC,WAAW,MACJ,8HAEI,CACP,CACIC,OAAQ,YACR/B,KAAM,4CACNiB,UAAW,aACXe,WAAY,KACZC,MAAO,KACPC,cAAe,CACXP,QAAS,CAAC,eACVQ,OAAQ,CACJC,KAAM,SAAS9C,YAEL+C,IAAMC,SAASC,cAAc,cACnCF,IAAIG,UAAYlD,MACR+C,IAAII,aAAeJ,IAAIK,WAAa,IAAIC,WAKhE,CACIZ,OAAQ,WACR/B,KAAM,oDACNiB,UAAW,aACXiB,cAAe,CACXP,QAAS,CAAC,eACVQ,OAAQ,CACJC,KAAM,SAAS9C,YAEL+C,IAAMC,SAASC,cAAc,cACnCF,IAAIG,UAAYlD,MACR+C,IAAII,aAAeJ,IAAIK,WAAa,IAAIC,WAKhE,CACIZ,OAAQ,aACR/B,KAAM,0DACNiB,UAAW,aACXiB,cAAe,CACXP,QAAS,CAAC,eACVQ,OAAQ,CACJC,KAAM,SAAS9C,YAEL+C,IAAMC,SAASC,cAAc,cACnCF,IAAIG,UAAYlD,MACR+C,IAAII,aAAeJ,IAAIK,WAAa,IAAIC,yBAMpD,+BACV,yBACGC,KAAK,0GACR,oCAAoCC,SAAS,qCAC7C,mCAAmCA,SAAS,4CAC5C,kCAAkCA,SAAS,2BAC3C,8BAA8BC,6BAC9B,yBAAyBC,YAAY,gCAK7C,0BAA0BC,MAAK,iBACvBC,QAAS,mBAAEC,MAAM5D,KAAK,QAAQ6D,WAC9BC,OAAQ,mBAAEF,MAAM5D,KAAK,QAC3BgB,iBAAiBqB,QAAQ0B,KAAK,CAC1B/D,KAAM,KACNgE,UAAU,EACVrC,UAAW,yBACXT,OAAQ,SAASlB,KAAMiE,MAAO7C,SACrBpB,KAAKkE,uDAINC,kBADAD,eAAiBvD,KAAKC,MAAMZ,KAAKkE,oBAGjCC,kBAAoBxD,KAAKC,MAAMZ,KAAKmE,mBAAmBC,KAAIC,GAAK1D,KAAKC,MAAMyD,KAC7E,MAAOC,GACLH,kBAAoB,MAEpBD,eAAgB,IACZA,eAAeK,QAAQZ,SAAW,EAAG,KACjCa,QAAUL,kBAAkBM,MAAKJ,GAAKK,OAAOL,EAAE5C,KAAOiD,OAAOf,iBAC7Da,iDACyCA,QAAQG,WAAa,iBAAmB,2DACrEhB,iCAAwBvC,IAAIK,2BAAkBqC,mBAAUU,QAAQI,sBAErE,SAGJ,iEAGJ,iEAMvBpE,WAAY,mBAAE,oBAAoBqE,UAAU7D,yCAG9CgC,UAAU8B,GAAG,QAAS,iBAAiB,eAOjCC,cAAe,mBAAEnB,MAAMoB,QAAQ,MAAMhF,KAAK,QAC1CiF,cAAgBxE,UAAUgE,MAAKJ,GAAKA,EAAE5C,IAAMsD,eAC5CG,cAAgB1E,UAAU2E,OAAOnF,OAAOoF,gBACtCC,4OAGwBJ,cAAcxD,8VAIawD,cAAcK,eACjE,MAjBuBC,CAAAA,gBACnBC,EAAIC,KAAKC,MAAMH,QAAU,MACzBI,EAAIF,KAAKC,MAAMH,QAAU,KAAO,IAChCK,EAAIH,KAAKC,MAAMH,QAAU,KAAO,WAC9BC,EAAI,EAAIA,EAAI,IAAM,KAAOG,EAAI,GAAK,IAAM,IAAMA,EAAI,KAAOC,EAAI,GAAK,IAAM,IAAMA,GAa5EC,CAAoBZ,cAAca,+iBAa9C,QAAQC,OAAOV,2BACf,qBAAqBA,MAAM,4BAC3B,qBAAqBP,GAAG,iBAAiB,+BACrC,qBAAqBtB,gCAGzB,qBAAqBsB,GAAG,kBAAkB,+BACtC,iCAAiCkB,OAAO,SAEtCC,UADuB1F,aAAakE,MAAKJ,GAAKA,EAAE6B,OAASjB,cAAc9D,OACtC8E,UACrCE,QAAQ,CAACF,UAAY,KAAK,SAASG,QAC/BnB,cAAcoB,WAAY,OACtBD,QAASE,kBAAkBrB,cAAeC,sCAEhDtB,MAAMa,KAAK,gBAAgB8B,kCAInCvD,UAAU8B,GAAG,QAAS,aAAa,SAASR,GAC1CA,EAAEkC,uBACIC,UAAW,mBAAE7C,MAAM5D,KAAK,cAC1B0G,OAAQ,mBAAE9C,gCAED+C,aACThH,EAAE2B,KAAKC,WAAW,mBAAoB,wBACtC5B,EAAE2B,KAAKC,WAAW,4CAA6C,wBAC/D5B,EAAE2B,KAAKC,WAAW,SAAU,yBAC5B,2BACM9B,KAAK,CACHC,IAAKC,EAAEC,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,wBACRwG,SAAAA,SACAtG,UAAWR,EAAEC,IAAIO,UACjBD,QAASP,EAAEC,IAAIM,SAEnB0G,QAAS,SAASC,aACE,WAAZA,SAAuB,KACnBC,WAAatG,UAAUY,IAAIsF,MAAM1B,QAAQ,OAAOhF,OACpD8G,WAAWpF,qBAAuB,EAClCoF,WAAWC,cAAgB,EAC3BD,WAAWE,GAAK,EAChBF,WAAW9E,YAAc,EACzB8E,WAAW5C,eAAiB,KAC5B4C,WAAW3C,kBAAoB,KAC/B2C,WAAWtF,aAAe,KAC1BhB,UAAUY,IAAIsF,MAAM1B,QAAQ,OAAOhF,KAAK8G,YAAYG,sBAC3CtH,EAAE2B,KAAKC,WAAW,yBAA0B,wBAAyB,CAC1EJ,KAAM,cAIlB+F,MAAO,0BACMvH,EAAE2B,KAAKC,WAAW,uBAAwB,wBAAyB,CACxEJ,KAAM,eAKtB,MAEN,4BACegG,oBACTxH,EAAE2B,KAAKC,WAAW,mBAAoB,wBACtC5B,EAAE2B,KAAKC,WAAW,4CAA6C,wBAC/D5B,EAAE2B,KAAKC,WAAW,SAAU,yBAC9B6F,MAAK,IACI5H,gBAAEC,KAAK,CACVC,IAAKC,EAAEC,IAAIC,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVC,KAAM,CACFC,OAAQ,wBACRwG,SAAAA,SACAtG,UAAWR,EAAEC,IAAIO,UACjBD,QAASP,EAAEC,IAAIM,SAEnB0G,QAAS,SAASC,aACE,WAAZA,SAAuB,KACnBC,WAAatG,UAAUY,IAAIsF,MAAM1B,QAAQ,OAAOhF,OACpD8G,WAAWpF,qBAAuB,EAClCoF,WAAWC,cAAgB,EAC3BD,WAAWE,GAAK,EAChBF,WAAW9E,YAAc,EACzB8E,WAAW5C,eAAiB,KAC5B4C,WAAW3C,kBAAoB,KAC/B2C,WAAWtF,aAAe,KAC1BhB,UAAUY,IAAIsF,MAAM1B,QAAQ,OAAOhF,KAAK8G,YAAYG,sBAC3CtH,EAAE2B,KAAKC,WAAW,yBAA0B,wBAAyB,CAC1EJ,KAAM,cAIlB+F,MAAO,0BACMvH,EAAE2B,KAAKC,WAAW,uBAAwB,wBAAyB,CACxEJ,KAAM,eAInBkG,OAAM,iCAMXrE,UAAU8B,GAAG,QAAS,yBAAyB,eACzCrD,IAAK,mBAAEmC,MAAM5D,KAAK,MAClBsH,QAAS,mBAAE1D,MAAM5D,KAAK,UACtBmB,MAAO,mBAAEyC,MAAM5D,KAAK,QAEpBiG,UADuB1F,aAAakE,MAAKJ,GAAKA,EAAE6B,OAAS/E,OACxB8E,UAEjChB,cAAgBxE,UAAUgE,MAAKJ,GAAKA,EAAE5C,IAAMA,KAChD0E,QAAQ,CAACF,UAAY,KAAK,SAASG,aAC3BA,QAASmB,kBAAkBtC,cAAeqC,6CAc7B,CAACtH,KAAMwH,KAAM7E,aAClC8E,aAAe,MACPzH,KAAKmF,kBACE,aACD,SACL,CAAC,CAAC,EAAG,mBACA,CACV,SACe,yBACC,aAGR,YACM,qBACCxF,EAAE2B,KAAKC,WAAW,UAAW,+BAClC5B,EAAE2B,KAAKC,WAAW,SAAU,6BAC9B5B,EAAE2B,KAAKC,WAAW,gBAAiB,kCAC9B5B,EAAE2B,KAAKC,WAAW,qBAAsB,qCACrC5B,EAAE2B,KAAKC,WAAW,wBAAyB,iCAC/C,OACC5B,EAAE2B,KAAKC,WAAW,QAAS,6BAC5B5B,EAAE2B,KAAKC,WAAW,OAAQ,6BAC1B5B,EAAE2B,KAAKC,WAAW,OAAQ,iCACtB5B,EAAE2B,KAAKC,WAAW,WAAY,0BAGlDU,gBAAiB,SAASC,SAAUlC,aAEhCA,KAAKmC,OAAOA,OAAS,GACrBnC,KAAKoC,MAAQ,EACbpC,KAAKqC,QAAQC,SAAQ,SAASC,QAC1BA,OAAOJ,OAAOA,OAAS,MAEpBnC,MAEXwC,WAAW,sDAEA,CACP,CACIC,OAAQ,YACR/B,KAAM,4CACNiB,UAAW,aACXe,WAAY,KACZC,MAAO,KACPC,cAAe,CACXP,QAAS,CAAC,iBAGlB,CACII,OAAQ,WACR/B,KAAM,oDACNiC,MAAOA,MACPhB,UAAW,aACXiB,cAAe,CACXP,QAAS,CAAC,iBAGlB,CACII,OAAQ,aACR/B,KAAM,0DACNiB,UAAW,aACXgB,MAAOA,MACPC,cAAe,CACXP,QAAS,CAAC,+BAIN,yCACPmF,gBACAlE,KAAK,oHACLkE,6BAA2BjE,SAAS,+CACpCiE,6BAA2BjE,SAAS,sDACpCiE,4BAA0BjE,SAAS,uCAI3CiE,gBAAc3C,UAAU4C"}