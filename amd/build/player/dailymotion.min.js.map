{"version":3,"file":"dailymotion.min.js","sources":["../../src/player/dailymotion.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * DailyMotion Player class\n *\n * @module     mod_interactivevideo/player/dailymotion\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport $ from 'jquery';\nlet player;\nclass DailyMotion {\n    constructor(url, start, end, showControls, customStart = false) {\n        this.type = 'dailymotion';\n        this.start = start;\n        this.frequency = 0.27;\n        this.support = {\n            playbackrate: true,\n            quality: true,\n        };\n        // Documented at https://developer.dailymotion.com/player#player-parameters.\n        var reg = /(?:https?:\\/\\/)?(?:www\\.)?(?:dai\\.ly|dailymotion\\.com)\\/(?:embed\\/video\\/|video\\/|)([^\\/]+)/g;\n        var match = reg.exec(url);\n        var videoId = match[1];\n        this.videoId = videoId;\n        var self = this;\n        fetch(`https://api.dailymotion.com/video/${videoId}?fields=thumbnail_720_url`)\n            .then(response => response.json())\n            .then(data => {\n                self.posterImage = data.thumbnail_720_url;\n                return;\n            })\n            .catch(() => {\n                // Do nothing.\n            });\n        var ready = false;\n        var dmOptions = {\n            video: videoId,\n            params: {\n                startTime: start,\n            },\n        };\n        let dailymotion;\n        const dailymotionEvents = (player) => {\n            if (showControls) {\n                player.setQuality(480);\n            }\n            player.getState().then(function(state) {\n                end = !end ? state.videoDuration : Math.min(end, state.videoDuration);\n                return;\n            }).catch(() => {\n                // Do nothing.\n            });\n            // Handle Dailymotion behavior. Video always start from the start time,\n            // So if you seek before starting the video, it will just start from the beginning.\n            // So, to deal with this, we have to start the video as soon as the player is ready.\n            // Let it plays on mute which sometimes include ads. When the ad is done, the VIDEO_START event will fire.\n            // That's when we let user know, player is ready.\n            if (customStart) {\n                player.setMute(true);\n                player.play();\n                player.on(dailymotion.events.VIDEO_START, function() {\n                    if (ready == true) { // When the video is replayed, it will fire VIDEO_START event again.\n                        player.setMute(true);\n                    }\n                    setTimeout(() => {\n                        player.seek(start);\n                        player.setMute(false);\n                        if (!ready) {\n                            player.pause();\n                            ready = true;\n                            dispatchEvent('iv:playerReady');\n                        }\n                    }, 1000);\n                });\n            } else {\n                ready = true;\n                dispatchEvent('iv:playerReady');\n            }\n\n            // Show ads to user so they know ad is playing, not because something is wrong.\n            player.on(dailymotion.events.AD_START, function() {\n                $(\".video-block\").css('background', 'transparent');\n            });\n\n            player.on(dailymotion.events.VIDEO_SEEKEND, function(e) {\n                dispatchEvent('iv:playerSeek', e.videoTime);\n            });\n\n            player.on(dailymotion.events.VIDEO_END, function() {\n                player.seek(start);\n                player.pause();\n                dispatchEvent('iv:playerEnded');\n            });\n\n            player.on(dailymotion.events.VIDEO_TIMECHANGE, function(e) {\n                if (!ready) {\n                    return;\n                }\n\n                if (e.videoTime >= end) {\n                    dispatchEvent('iv:playerEnded');\n                    player.pause();\n                } else if (e.playerIsPlaying === false) {\n                    dispatchEvent('iv:playerPaused');\n                } else if (e.playerIsPlaying === true) {\n                    dispatchEvent('iv:playerPlaying');\n                }\n            });\n\n            player.on(dailymotion.events.PLAYER_ERROR, function(e) {\n                dispatchEvent('iv:playerError', {error: e});\n            });\n\n            player.on(dailymotion.events.PLAYER_PLAYBACKSPEEDCHANGE, function(e) {\n                dispatchEvent('iv:playerRateChange', {rate: e.playerPlaybackSpeed});\n            });\n        };\n\n        if (!window.dailymotion) {\n            // Add dailymotion script.\n            var tag = document.createElement('script');\n            if (showControls) {\n                tag.src = \"https://geo.dailymotion.com/libs/player/xsyje.js\";\n            } else {\n                tag.src = \"https://geo.dailymotion.com/libs/player/xsyj8.js\";\n            }\n            var firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n            window.dailymotion = {\n                onScriptLoaded: () => {\n                    dailymotion = window.dailymotion;\n                    dailymotion.createPlayer(\"player\", dmOptions).then(function(pl) {\n                        player = pl;\n                        dailymotionEvents(player);\n                        return;\n                    }).catch(() => {\n                        // Do nothing.\n                    });\n                }\n            };\n        } else {\n            dailymotion.createPlayer(\"player\", dmOptions).then(function(pl) {\n                player = pl;\n                dailymotionEvents(player);\n                dailymotion = window.dailymotion;\n                return;\n            }).catch(() => {\n                // Do nothing.\n            });\n        }\n    }\n    play() {\n        player.play();\n    }\n    pause() {\n        player.pause();\n    }\n    stop(starttime) {\n        player.seek(starttime);\n        player.pause();\n    }\n    async seek(time) {\n        await player.seek(time);\n        dispatchEvent('iv:playerSeek', {time: time});\n    }\n    async getCurrentTime() {\n        const state = await player.getState();\n        return state.videoTime;\n    }\n    async getDuration() {\n        const state = await player.getState();\n        return state.videoDuration;\n    }\n    async isPaused() {\n        const state = await player.getState();\n        return !state.playerIsPlaying;\n    }\n    async isPlaying() {\n        const state = await player.getState();\n        return state.playerIsPlaying;\n    }\n    async isEnded() {\n        const state = await player.getState();\n        return state.playerIsReplayScreen;\n    }\n    async ratio() {\n        const state = await player.getState();\n        const ratio = state.playerAspectRatio.split(':');\n        if (ratio[0] / ratio[1] > 16 / 9) {\n            return ratio[0] / ratio[1];\n        } else {\n            return 16 / 9;\n        }\n    }\n    destroy() {\n        player.destroy();\n    }\n    async getState() {\n        const state = await player.getState();\n        return state;\n    }\n    setRate(rate) {\n        player.setPlaybackSpeed(rate);\n    }\n    mute() {\n        player.setMute(true);\n    }\n    unMute() {\n        player.setMute(false);\n    }\n    originalPlayer() {\n        return player;\n    }\n    setQuality(quality) {\n        player.setQuality(quality);\n    }\n    async getQualities() {\n        let states = await this.getState();\n        return {\n            qualities: ['default', ...states.videoQualitiesList],\n            currentQuality: states.videoQuality == 'Auto' ? 'default' : states.videoQuality,\n        };\n    }\n}\n\nexport default DailyMotion;"],"names":["player","constructor","url","start","end","showControls","customStart","type","frequency","support","playbackrate","quality","videoId","exec","self","this","fetch","then","response","json","data","posterImage","thumbnail_720_url","catch","ready","dmOptions","video","params","startTime","dailymotion","dailymotionEvents","setQuality","getState","state","Math","min","videoDuration","setMute","play","on","events","VIDEO_START","setTimeout","seek","pause","AD_START","css","VIDEO_SEEKEND","e","videoTime","VIDEO_END","VIDEO_TIMECHANGE","playerIsPlaying","PLAYER_ERROR","error","PLAYER_PLAYBACKSPEEDCHANGE","rate","playerPlaybackSpeed","window","createPlayer","pl","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onScriptLoaded","stop","starttime","time","playerIsReplayScreen","ratio","playerAspectRatio","split","destroy","setRate","setPlaybackSpeed","mute","unMute","originalPlayer","states","qualities","videoQualitiesList","currentQuality","videoQuality"],"mappings":"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"}