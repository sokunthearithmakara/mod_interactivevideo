{"version":3,"file":"html5video.min.js","sources":["../../src/player/html5video.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * HTML5 Video Player class\n *\n * @module     mod_interactivevideo/player/html5video\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport { dispatchEvent } from 'core/event_dispatcher';\nimport $ from 'jquery';\n\nclass Html5Video {\n    constructor(url, start, end, showControls) {\n        this.type = \"html5video\";\n        this.start = start;\n        this.end = end;\n        this.frequency = 0.28;\n        var player = document.getElementById('player');\n        player.src = url;\n        player.controls = true;\n        player.autoplay = false;\n        player.preload = 'metadata';\n        player.currentTime = start;\n        // Disable keyboard controls.\n        player.tabIndex = -1;\n        this.posterImage = player.poster;\n\n        if (!showControls) {\n            $('body').addClass('no-original-controls');\n        }\n\n        // Play inline.\n        player.setAttribute('playsinline', '');\n\n        player.addEventListener('loadedmetadata', function () {\n            dispatchEvent('iv:playerReady');\n            end = !end ? player.duration : Math.min(end, player.duration);\n        });\n\n        player.addEventListener('seeked', function () {\n            dispatchEvent('iv:playerSeek', { time: player.currentTime });\n        });\n\n        player.addEventListener('timeupdate', function () {\n            if (player.ended || (end && player.currentTime >= end)) {\n                dispatchEvent('iv:playerEnded');\n                player.pause();\n            } else if (player.paused) {\n                dispatchEvent('iv:playerPaused');\n            } else if (!player.paused) {\n                dispatchEvent('iv:playerPlaying');\n            }\n        });\n\n        player.addEventListener('error', function (e) {\n            dispatchEvent('iv:playerError', { error: e });\n        });\n\n        this.player = player;\n    }\n    play() {\n        this.player.play();\n    }\n    pause() {\n        this.player.pause();\n    }\n    stop(starttime) {\n        this.player.pause();\n        this.player.currentTime = starttime;\n    }\n    seek(time) {\n        this.player.currentTime = time;\n        return Promise.resolve();\n    }\n    getCurrentTime() {\n        return Promise.resolve(this.player.currentTime);\n    }\n    getDuration() {\n        return Promise.resolve(this.player.duration);\n    }\n    isPaused() {\n        return Promise.resolve(this.player.paused);\n    }\n    isPlaying() {\n        return Promise.resolve(!this.player.paused);\n    }\n    isEnded() {\n        return Promise.resolve(this.player.ended);\n    }\n    ratio() {\n        // If wide video, use that ratio; otherwise, 16:9\n        if (this.player.videoWidth / this.player.videoHeight > 16 / 9) {\n            return Promise.resolve(this.player.videoWidth / this.player.videoHeight);\n        } else {\n            return Promise.resolve(16 / 9);\n        }\n    }\n    destroy() {\n        this.player.pause();\n        this.player.removeAttribute('src');\n        this.player.load();\n    }\n    getState() {\n        return Promise.resolve(this.player.paused ? 'paused' : 'playing');\n    }\n    setRate(rate) {\n        this.player.playbackRate = rate;\n    }\n    mute() {\n        this.player.muted = true;\n    }\n    unMute() {\n        this.player.muted = false;\n    }\n    originalPlayer() {\n        return this.player;\n    }\n    setQuality(quality) {\n        // Not supported.\n        return quality;\n    }\n}\n\nexport default Html5Video;"],"names":["constructor","url","start","end","showControls","type","frequency","player","document","getElementById","src","controls","autoplay","preload","currentTime","tabIndex","posterImage","poster","addClass","setAttribute","addEventListener","Math","min","duration","time","ended","pause","paused","e","error","play","stop","starttime","seek","Promise","resolve","getCurrentTime","this","getDuration","isPaused","isPlaying","isEnded","ratio","videoWidth","videoHeight","destroy","removeAttribute","load","getState","setRate","rate","playbackRate","mute","muted","unMute","originalPlayer","setQuality","quality"],"mappings":";;;;;;;gKA0BIA,YAAYC,IAAKC,MAAOC,IAAKC,mBACpBC,KAAO,kBACPH,MAAQA,WACRC,IAAMA,SACNG,UAAY,QACbC,OAASC,SAASC,eAAe,UACrCF,OAAOG,IAAMT,IACbM,OAAOI,UAAW,EAClBJ,OAAOK,UAAW,EAClBL,OAAOM,QAAU,WACjBN,OAAOO,YAAcZ,MAErBK,OAAOQ,UAAY,OACdC,YAAcT,OAAOU,OAErBb,kCACC,QAAQc,SAAS,wBAIvBX,OAAOY,aAAa,cAAe,IAEnCZ,OAAOa,iBAAiB,kBAAkB,+CACxB,kBACdjB,IAAOA,IAAwBkB,KAAKC,IAAInB,IAAKI,OAAOgB,UAAvChB,OAAOgB,YAGxBhB,OAAOa,iBAAiB,UAAU,+CAChB,gBAAiB,CAAEI,KAAMjB,OAAOO,iBAGlDP,OAAOa,iBAAiB,cAAc,WAC9Bb,OAAOkB,OAAUtB,KAAOI,OAAOO,aAAeX,yCAChC,kBACdI,OAAOmB,SACAnB,OAAOoB,2CACA,mBACNpB,OAAOoB,4CACD,uBAItBpB,OAAOa,iBAAiB,SAAS,SAAUQ,uCACzB,iBAAkB,CAAEC,MAAOD,YAGxCrB,OAASA,OAElBuB,YACSvB,OAAOuB,OAEhBJ,aACSnB,OAAOmB,QAEhBK,KAAKC,gBACIzB,OAAOmB,aACPnB,OAAOO,YAAckB,UAE9BC,KAAKT,kBACIjB,OAAOO,YAAcU,KACnBU,QAAQC,UAEnBC,wBACWF,QAAQC,QAAQE,KAAK9B,OAAOO,aAEvCwB,qBACWJ,QAAQC,QAAQE,KAAK9B,OAAOgB,UAEvCgB,kBACWL,QAAQC,QAAQE,KAAK9B,OAAOoB,QAEvCa,mBACWN,QAAQC,SAASE,KAAK9B,OAAOoB,QAExCc,iBACWP,QAAQC,QAAQE,KAAK9B,OAAOkB,OAEvCiB,eAEQL,KAAK9B,OAAOoC,WAAaN,KAAK9B,OAAOqC,YAAc,GAAK,EACjDV,QAAQC,QAAQE,KAAK9B,OAAOoC,WAAaN,KAAK9B,OAAOqC,aAErDV,QAAQC,QAAQ,GAAK,GAGpCU,eACStC,OAAOmB,aACPnB,OAAOuC,gBAAgB,YACvBvC,OAAOwC,OAEhBC,kBACWd,QAAQC,QAAQE,KAAK9B,OAAOoB,OAAS,SAAW,WAE3DsB,QAAQC,WACC3C,OAAO4C,aAAeD,KAE/BE,YACS7C,OAAO8C,OAAQ,EAExBC,cACS/C,OAAO8C,OAAQ,EAExBE,wBACWlB,KAAK9B,OAEhBiD,WAAWC,gBAEAA"}