{"version":3,"file":"wistia.min.js","sources":["../../src/player/wistia.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Wistia Player class\n *\n * @module     mod_interactivevideo/player/wistia\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport { dispatchEvent } from 'core/event_dispatcher';\nlet player;\n\nclass Wistia {\n    constructor(url, start, end, showControls) {\n        this.type = 'wistia';\n        this.start = start;\n        this.frequency = 0.3;\n        var regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:wistia\\.com)\\/medias\\/([^\\/]+)/g;\n        var match = regex.exec(url);\n        var videoId = match[1];\n        this.videoId = videoId;\n        var playerIframe = `<iframe id=\"player\" src=\"https://fast.wistia.net/embed/iframe/${videoId}?`;\n        playerIframe += `seo=false&videoFoam=false&controlsVisibleOnLoad=${showControls}`;\n        playerIframe += `&playButton=${showControls}&time=${start}&autoPlay=false&efullscreenButton=false\" `;\n        playerIframe += `allow=\"autoplay;\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"no\"`;\n        playerIframe += `class=\"wistia_embed\" name=\"wistia_embed\" msallowfullscreen></iframe>`;\n        $(\"#player\").replaceWith(playerIframe);\n        var self = this;\n        $.get('https://fast.wistia.com/oembed.json?url=' + url)\n            .then(function (data) {\n                self.posterImage = data.thumbnail_url;\n            });\n        var ready = false;\n        var wistiaOptions = {\n            id: videoId,\n            options: {\n                autoPlay: false,\n                time: start,\n                fullscreenButton: false,\n                controlsVisibleOnLoad: showControls,\n                playButton: showControls,\n                playerColor: \"#54bbff\",\n                wmode: \"transparent\",\n            },\n            onReady: function (video) {\n                player = video;\n                end = !end ? video.duration() : Math.min(end, video.duration());\n\n                var interval = setInterval(() => {\n                    if (video.state() === 'paused') {\n                        ready = true;\n                        dispatchEvent('iv:playerReady');\n                        clearInterval(interval);\n                    }\n                }, 1000);\n\n                video.on(\"pause\", () => {\n                    if (!ready) {\n                        return;\n                    }\n                    dispatchEvent('iv:playerPaused');\n                });\n\n                video.on(\"seek\", (e) => {\n                    if (!ready) {\n                        return;\n                    }\n                    dispatchEvent('iv:playerSeek', { time: e });\n                });\n\n                video.bind('play', () => {\n                    if (!ready) {\n                        return;\n                    }\n                    dispatchEvent('iv:playerPlaying');\n                    if (video.time() > end) {\n                        dispatchEvent('iv:playerEnded');\n                        video.time(start);\n                        video.pause();\n                    }\n                });\n\n                video.on('timechange', (s) => {\n                    if (s > end || s < start) {\n                        dispatchEvent('iv:playerEnded');\n                        video.time(start);\n                        video.pause();\n                    }\n                    video.unmute();\n                });\n\n                video.on(\"error\", (e) => {\n                    dispatchEvent('iv:playerError', { error: e });\n                });\n            },\n            onError: function (e) {\n                dispatchEvent('iv:playerError', { error: e });\n            }\n        };\n\n        if (!window._wq) {\n            // Add wistia script\n            var tag = document.createElement('script');\n            tag.src = \"https://fast.wistia.com/assets/external/E-v1.js\";\n            var firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n            var interval = setInterval(() => {\n                if (window._wq) {\n                    clearInterval(interval);\n                    window._wq.push(wistiaOptions);\n                }\n            }, 1000);\n        } else {\n            window._wq.push(wistiaOptions);\n        }\n    }\n    play() {\n        player.play();\n    }\n    pause() {\n        player.pause();\n    }\n    stop(starttime) {\n        player.pause();\n        player.time(starttime);\n    }\n    seek(time) {\n        return new Promise((resolve) => {\n            player.time(time);\n            resolve();\n        });\n    }\n    getCurrentTime() {\n        return new Promise((resolve) => {\n            resolve(player.time());\n        });\n    }\n    getDuration() {\n        return new Promise((resolve) => {\n            resolve(player.duration());\n        });\n    }\n    isPaused() {\n        return new Promise((resolve) => {\n            resolve(player.state() === 'paused');\n        });\n    }\n    isPlaying() {\n        return new Promise((resolve) => {\n            resolve(player.state() === 'playing');\n        });\n    }\n    isEnded() {\n        return Promise.resolve(player.state() === 'ended');\n    }\n    ratio() {\n        return new Promise((resolve) => {\n            // If wide video, use that ratio; otherwise, 16:9\n            if (player.aspect() > 16 / 9) {\n                resolve(player.aspect());\n            } else {\n                resolve(16 / 9);\n            }\n        });\n    }\n    destroy() {\n        player.remove();\n    }\n    getState() {\n        return new Promise((resolve) => {\n            resolve(player.state());\n        });\n    }\n    setRate(rate) {\n        player.playbackRate(rate);\n    }\n    mute() {\n        player.mute();\n    }\n    unMute() {\n        player.unmute();\n    }\n    originalPlayer() {\n        return player;\n    }\n}\n\nexport default Wistia;"],"names":["player","constructor","url","start","end","showControls","type","frequency","videoId","exec","playerIframe","replaceWith","self","this","get","then","data","posterImage","thumbnail_url","ready","wistiaOptions","id","options","autoPlay","time","fullscreenButton","controlsVisibleOnLoad","playButton","playerColor","wmode","onReady","video","Math","min","duration","interval","setInterval","state","clearInterval","on","e","bind","pause","s","unmute","error","onError","window","_wq","push","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","play","stop","starttime","seek","Promise","resolve","getCurrentTime","getDuration","isPaused","isPlaying","isEnded","ratio","aspect","destroy","remove","getState","setRate","rate","playbackRate","mute","unMute","originalPlayer"],"mappings":";;;;;;;SAwBIA,kKAGAC,YAAYC,IAAKC,MAAOC,IAAKC,mBACpBC,KAAO,cACPH,MAAQA,WACRI,UAAY,OAGbC,QAFQ,+DACMC,KAAKP,KACH,QACfM,QAAUA,YACXE,aAAgB,iEAAgEF,WACpFE,cAAiB,mDAAkDL,eACnEK,cAAiB,eAAcL,qBAAqBF,iDACpDO,cAAiB,4EACjBA,cAAiB,2FACf,WAAWC,YAAYD,kBACrBE,KAAOC,qBACTC,IAAI,2CAA6CZ,KAC9Ca,MAAK,SAAUC,MACZJ,KAAKK,YAAcD,KAAKE,qBAE5BC,OAAQ,EACRC,cAAgB,CAChBC,GAAIb,QACJc,QAAS,CACLC,UAAU,EACVC,KAAMrB,MACNsB,kBAAkB,EAClBC,sBAAuBrB,aACvBsB,WAAYtB,aACZuB,YAAa,UACbC,MAAO,eAEXC,QAAS,SAAUC,OACf/B,OAAS+B,MACT3B,IAAOA,IAAyB4B,KAAKC,IAAI7B,IAAK2B,MAAMG,YAAvCH,MAAMG,eAEfC,SAAWC,aAAY,KACD,WAAlBL,MAAMM,UACNlB,OAAQ,sCACM,kBACdmB,cAAcH,aAEnB,KAEHJ,MAAMQ,GAAG,SAAS,KACTpB,2CAGS,sBAGlBY,MAAMQ,GAAG,QAASC,IACTrB,2CAGS,gBAAiB,CAAEK,KAAMgB,OAG3CT,MAAMU,KAAK,QAAQ,KACVtB,4CAGS,oBACVY,MAAMP,OAASpB,0CACD,kBACd2B,MAAMP,KAAKrB,OACX4B,MAAMW,aAIdX,MAAMQ,GAAG,cAAeI,KAChBA,EAAIvC,KAAOuC,EAAIxC,6CACD,kBACd4B,MAAMP,KAAKrB,OACX4B,MAAMW,SAEVX,MAAMa,YAGVb,MAAMQ,GAAG,SAAUC,wCACD,iBAAkB,CAAEK,MAAOL,QAGjDM,QAAS,SAAUN,uCACD,iBAAkB,CAAEK,MAAOL,SAI5CO,OAAOC,IAcRD,OAAOC,IAAIC,KAAK7B,mBAdH,KAET8B,IAAMC,SAASC,cAAc,UACjCF,IAAIG,IAAM,sDACNC,eAAiBH,SAASI,qBAAqB,UAAU,GAC7DD,eAAeE,WAAWC,aAAaP,IAAKI,oBAExCnB,SAAWC,aAAY,KACnBW,OAAOC,MACPV,cAAcH,UACdY,OAAOC,IAAIC,KAAK7B,kBAErB,MAKXsC,OACI1D,OAAO0D,OAEXhB,QACI1C,OAAO0C,QAEXiB,KAAKC,WACD5D,OAAO0C,QACP1C,OAAOwB,KAAKoC,WAEhBC,KAAKrC,aACM,IAAIsC,SAASC,UAChB/D,OAAOwB,KAAKA,MACZuC,aAGRC,wBACW,IAAIF,SAASC,UAChBA,QAAQ/D,OAAOwB,WAGvByC,qBACW,IAAIH,SAASC,UAChBA,QAAQ/D,OAAOkC,eAGvBgC,kBACW,IAAIJ,SAASC,UAChBA,QAA2B,WAAnB/D,OAAOqC,YAGvB8B,mBACW,IAAIL,SAASC,UAChBA,QAA2B,YAAnB/D,OAAOqC,YAGvB+B,iBACWN,QAAQC,QAA2B,UAAnB/D,OAAOqC,SAElCgC,eACW,IAAIP,SAASC,UAEZ/D,OAAOsE,SAAW,GAAK,EACvBP,QAAQ/D,OAAOsE,UAEfP,QAAQ,GAAK,MAIzBQ,UACIvE,OAAOwE,SAEXC,kBACW,IAAIX,SAASC,UAChBA,QAAQ/D,OAAOqC,YAGvBqC,QAAQC,MACJ3E,OAAO4E,aAAaD,MAExBE,OACI7E,OAAO6E,OAEXC,SACI9E,OAAO4C,SAEXmC,wBACW/E"}