{"version":3,"file":"viewannotation.min.js","sources":["../src/viewannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * View page module\n *\n * @module     mod_interactivevideo/viewannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/event_dispatcher', 'core/toast'], function ($, { dispatchEvent }, Toast) {\n    let ctRenderer = {};\n    let annotations, // Array of annotations.\n        totaltime, // Video total time.\n        activityType, // Current activityType.\n        lastanno, // Last run annotation.\n        contentTypes, // Array of available content types.\n        displayoptions, // Display options.\n        releventAnnotations, // Array of annotations that are not skipped and have completion.\n        player;\n\n    const $videoNav = $('#video-nav');\n\n    const convertSecondsToMinutes = (seconds) => {\n        if (seconds < 60) {\n            return seconds + 's';\n        } else {\n            const minutes = Math.floor(seconds / 60);\n            const remainingSeconds = seconds % 60;\n            return minutes + 'm ' + remainingSeconds + 's';\n        }\n    };\n\n    const renderAnnotationItems = async (annos, start, totaltime) => {\n        releventAnnotations = annos;\n\n        let actualduration = totaltime;\n\n        const skipsegments = annos.filter(x => x.type == 'skipsegment');\n\n        if (skipsegments.length > 0) {\n            skipsegments.forEach(x => {\n                const length = (Number(x.title) - Number(x.timestamp));\n                actualduration -= length;\n            });\n        }\n\n        const completableAnno = releventAnnotations.filter(x => JSON.parse(x.prop).hascompletion);\n        const actualAnnotationCounts = completableAnno.length;\n\n        const xp = completableAnno.map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n\n        const completedAnnos = completableAnno\n            .filter(x => x.completed);\n\n        const xpEarned = completedAnnos.map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n\n        $(\".metadata\").empty();\n        $(\".metadata\").append(`<span class=\"d-inline-block mr-3\">\n            <i class=\"bi bi-stopwatch mr-2\"></i>${convertSecondsToMinutes(Math.ceil(actualduration))}</span>\n            <span class=\"d-inline-block mr-3\">\n        <i class=\"bi bi-bullseye mr-2\"></i>${completedAnnos.length} / ${actualAnnotationCounts}</span>\n        <span class=\"d-inline-block\"><i class=\"bi bi-star mr-2\"></i>${xpEarned} / ${xp}</span>`);\n\n        $(\"#video-nav ul\").empty();\n\n        if (annos.length == 0) {\n            return;\n        }\n\n        if (displayoptions.preventseeking == 1) {\n            $videoNav.addClass('no-pointer-events');\n        }\n\n        if (displayoptions.hidemainvideocontrols == 1 || displayoptions.hideinteractions == 1) {\n            if (displayoptions.hidemainvideocontrols == 1) {\n                $('#wrapper').addClass('no-videonav');\n            }\n            return;\n        }\n        const render = new Promise((resolve) => {\n            annos.forEach(async (x) => {\n                const renderer = ctRenderer[x.type];\n                renderer.renderItemOnVideoNavigation(x);\n            });\n            resolve();\n        });\n\n        render.then(() => {\n            dispatchEvent('annotationitemsrendered', { 'annotations': annos });\n            $('.annolistinchapter').empty();\n            const chapteritems = releventAnnotations.filter(x => x.type != 'skipsegment' && JSON.parse(x.prop).hascompletion);\n            chapteritems.sort((a, b) => a.timestamp - b.timestamp);\n            chapteritems.forEach((x) => {\n                $('[data-region=\"chapterlists\"] li').each(function () {\n                    const cstart = $(this).data('start');\n                    const cend = $(this).data('end');\n                    if (x.timestamp >= cstart && x.timestamp < cend) {\n                        $(this).find('.annolistinchapter')\n                            .append(`<li class=\"border-bottom anno d-flex align-items-center justify-content-between\n                         px-3 py-2 ${x.completed ? \"completed\" : \"\"}\" data-id=\"${x.id}\" data-timestamp=\"${x.timestamp}\">\n                         <span class=\"text-nowrap\">\n                         <i class=\"small bi ${x.completed ? \"bi-check-circle-fill text-success\" : 'bi-circle'} mr-2\"></i>\n                         <i class=\"${JSON.parse(x.prop).icon} mr-2\"></i></span>\n                         <span class=\"flex-grow-1 text-truncate\">${x.formattedtitle}</span>\n                         <span class=\"text-nowrap\">${x.xp}<i class=\"bi bi-star ml-1\"></i></span></li>`);\n                    }\n                });\n            });\n        }).then(() => {\n            dispatchEvent('chapterrendered', { 'annotations': releventAnnotations });\n        });\n\n        $(document).on('annotationitemsrendered', function () {\n            $('#controler [data-toggle=\"tooltip\"]').tooltip({\n                container: '#controler',\n                boundary: 'window',\n            });\n            if (displayoptions.disableinteractionclickuntilcompleted == 1) {\n                $videoNav.find('ul li:not(.completed):not(.chapter)').addClass('no-click');\n            }\n            if (displayoptions.disableinteractionclick == 1) {\n                $videoNav.find('ul li:not(.chapter)').addClass('no-click');\n            }\n            if (displayoptions.preventseeking == 1) {\n                $videoNav.find('ul li').addClass('no-click');\n                $videoNav.addClass('no-click');\n            }\n        });\n    };\n\n    return {\n        renderAnnotationItems: renderAnnotationItems,\n        init: function (\n            url, cmid, interaction, course, userid, start = 0, end,\n            completionpercentage, gradeiteminstance, grademax, vtype,\n            preventskip = true, moment = null, doptions = {}, token = null) {\n            // Convert start to number if string\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            // Convert end to number if string\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            displayoptions = doptions;\n\n            let playerReady = false;\n\n            const convertSecondsToHMS = (seconds) => {\n                const h = Math.floor(seconds / 3600);\n                const m = Math.floor(seconds % 3600 / 60);\n                const s = Math.floor(seconds % 3600 % 60);\n                return (h > 0 ? h + ':' : '') + (m < 10 ? '0' : '') + m + ':' + (s < 10 ? '0' : '') + s;\n            };\n\n            const replaceProgressBars = (percentage) => {\n                percentage = percentage > 100 ? 100 : percentage;\n                $videoNav.find('#progress').replaceWith(`<div id=\"progress\" style=\"width: ${percentage}%;\"></div>`);\n            };\n\n            const getAnnotations = (callback) => {\n                // Get all interaction items.\n                const annnoitems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.courseContextId,\n                        token: token,\n                        cmid: cmid\n                    }\n                });\n\n                // Get current user progress.\n                const userprogress = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_progress',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        uid: userid,\n                        token: token,\n                        cmid: cmid\n                    }\n                });\n\n                // Get all content types.\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'getallcontenttypes',\n                        sesskey: M.cfg.sesskey,\n                        token: token,\n                        cmid: cmid\n                    }\n                });\n\n                $.when(annnoitems, userprogress, getContentTypes).done(function (annos, progress, ct) {\n                    annotations = JSON.parse(annos[0]);\n                    progress = JSON.parse(progress[0]);\n                    contentTypes = JSON.parse(ct[0]);\n                    // Get only annotations within the start and end times.\n                    // Remove the skip segments that are completely outside the start and end times.\n                    // Remove the annotations whose content type is not in the contentTypes.\n                    annotations = annotations.filter(x => {\n                        const inContentType = contentTypes.some(y => y.name === x.type);\n                        if (!inContentType) {\n                            return false;\n                        }\n\n                        if (x.type === 'skipsegment') {\n                            return !(x.timestamp > end || x.title < start);\n                        }\n\n                        return x.timestamp >= start && x.timestamp <= end;\n                    });\n\n                    const completedItems = progress.completeditems == '' ? [] : JSON.parse(progress.completeditems);\n                    annotations = annotations.map(x => {\n                        // First, let's make sure numbers are treated as numbers.\n                        x.timestamp = Number(x.timestamp);\n                        x.xp = Number(x.xp);\n                        if (x.type == 'skipsegment') {\n                            x.title = Number(x.title);\n                        }\n                        // Properties must be stringified so it can be passed through Fragment.\n                        x.prop = JSON.stringify(contentTypes.find(y => y.name == x.type));\n\n                        x.completed = completedItems.indexOf(x.id) > -1;\n\n                        // Handle the skip segments that are half inside the start and end times.\n                        if (x.type == 'skipsegment') {\n                            if (x.timestamp < start && x.title > start) {\n                                x.timestamp = start;\n                            }\n                            if (x.title > end && x.timestamp < end) {\n                                x.title = end;\n                            }\n                        }\n\n                        const advanced = JSON.parse(x.advanced);\n                        x.rerunnable = advanced && advanced.replaybehavior === '1';\n\n                        return x;\n                    });\n\n                    // Sort by timestamp.\n                    annotations.sort((a, b) => a.timestamp - b.timestamp);\n\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n\n                    releventAnnotations = [];\n                    annotations.forEach(x => {\n                        let shouldAdd = true;\n                        skipsegments.forEach(y => {\n                            if (Number(x.timestamp) > Number(y.timestamp) && Number(x.timestamp) < Number(y.title)) {\n                                shouldAdd = false;\n                            }\n                        });\n                        if (shouldAdd) {\n                            releventAnnotations.push(x);\n                        }\n                    });\n\n                    if (releventAnnotations.length > 0 && !releventAnnotations.find(x => x.type == 'chapter')) {\n                        // Add a dummy chapter at the start of the video.\n                        releventAnnotations.unshift({\n                            id: 0,\n                            title: M.util.get_string('startchapter', 'mod_interactivevideo'),\n                            formattedtitle: M.util.get_string('startchapter', 'mod_interactivevideo'),\n                            timestamp: start,\n                            type: 'chapter',\n                            prop: JSON.stringify(contentTypes.find(x => x.name == 'chapter')),\n                            xp: 0,\n                            completed: true,\n                            hide: true\n                        });\n                    }\n\n                    const getRenderers = new Promise((resolve) => {\n                        const chapterContentType = contentTypes.find(x => x.name == 'chapter');\n                        // We want to use only the content types that are being used in the annotations\n                        contentTypes = contentTypes.filter(x => releventAnnotations.map(y => y.type).includes(x.name));\n                        if (contentTypes.length == 0) {\n                            // Remove the chapter toggle\n                            $('#chaptertoggle, #chapter-container-left, #chapter-container-right').remove();\n                            resolve(ctRenderer);\n                        } else {\n                            $('#chaptertoggle, #chapter-container-left, #chapter-container-right').removeClass('d-none');\n                        }\n                        if (!contentTypes.find(x => x.name == 'chapter')) {\n                            // Include the chapterContentType\n                            contentTypes.push(chapterContentType);\n                        }\n                        var count = 0;\n                        contentTypes.forEach(x => {\n                            require([x.amdmodule], function (Type) {\n                                ctRenderer[x.name] = new Type(player, releventAnnotations, interaction, course, userid,\n                                    completionpercentage, gradeiteminstance, grademax, vtype, preventskip, totaltime, start,\n                                    end, x, cmid, token);\n                                try {\n                                    ctRenderer[x.name].init();\n                                } catch (error) {\n                                    // Do nothing.\n                                }\n                                count++;\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n\n                    getRenderers.then(() => {\n                        renderAnnotationItems(releventAnnotations, start, totaltime);\n                        $(\"#play\").removeClass('d-none');\n                        $(\"#spinner\").remove();\n                        $(\"#video-info\").toggleClass('d-none d-flex');\n                        callback();\n                    });\n                });\n            };\n\n            const runInteraction = async (annotation) => {\n                player.pause();\n                lastanno = annotation;\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').remove();\n                $('#end-screen, #start-screen').fadeOut(300);\n\n                if (preventskip) {\n                    const theAnnotations = releventAnnotations\n                        .filter(x => Number(x.timestamp) < Number(annotation.timestamp)\n                            && x.completed == false && JSON.parse(x.prop).hascompletion == true);\n                    if (theAnnotations.length > 0) {\n                        const theAnnotation = theAnnotations[0];\n                        player.pause();\n                        await player.seek((theAnnotation.timestamp - 0.7 > start) ? (theAnnotation.timestamp - 0.7) : start);\n                        $('#toast').toast('show');\n                        return;\n                    }\n                }\n                activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            const shareMoment = async () => {\n                if (!moment) {\n                    return;\n                }\n                // Check if the url has a timestamp using url params.\n                const urlParams = new URLSearchParams(window.location.search);\n                const time = Number(moment);\n                if (time && !isNaN(time) && time >= start && time <= end) {\n                    // Hide the start screen.\n                    $('#video-wrapper #start-screen').hide(0);\n                    await player.seek(time);\n                    player.play();\n                    const theAnnotation = releventAnnotations.find(x => x.timestamp == time);\n                    if (theAnnotation) {\n                        runInteraction(theAnnotation);\n                    }\n\n                    replaceProgressBars(((time - start) / totaltime) * 100);\n\n                }\n                urlParams.delete('t');\n                const newurl = window.location.protocol\n                    + '//' + window.location.host + window.location.pathname + '?' + urlParams.toString();\n                window.history.replaceState(null, null, newurl);\n            };\n\n            const onReady = () => {\n                if (player.posterImage) {\n                    $('#video-wrapper #start-screen').css({\n                        'background': `url(${player.posterImage}) no-repeat center center / cover`,\n                    });\n                }\n                $(\".video-block\").css('background', 'transparent');\n                player.getDuration().then((duration) => {\n                    end = !end ? duration : Math.min(end, duration);\n                    start = start > end ? 0 : start;\n                    totaltime = end - start;\n                    getAnnotations(shareMoment);\n                    $('#duration').text(convertSecondsToHMS(totaltime));\n                });\n\n                // Recalculate the ratio of the video\n                player.ratio().then((ratio) => {\n                    $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n                });\n\n                playerReady = true;\n                $('#start-screen #start').focus();\n            };\n\n            const onPaused = () => {\n                if (!playerReady) {\n                    return;\n                }\n                clearInterval(interval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('play', 'mod_interactivevideo'));\n            };\n\n            const onEnded = (t) => {\n                if (!playerReady) {\n                    return;\n                }\n                const time = t || end;\n                // Check if theAnnotation exists at the end of the video.\n                const theAnnotation = releventAnnotations.find(x => x.timestamp == time);\n                if (theAnnotation && !lastanno) {\n                    if (!theAnnotation.completed || theAnnotation.rerunnable) {\n                        player.pause();\n                        runInteraction(theAnnotation);\n                    }\n                    // Toggle the tooltip to show the title.\n                    $videoNav.find('.annotation[data-id=\"' + theAnnotation.id + '\"] .item').tooltip('show');\n                    // Hide the tooltip after 2 seconds.\n                    setTimeout(function () {\n                        $videoNav.find('.annotation[data-id=\"' + theAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n\n                $('#restart').removeClass('d-none').fadeIn(300);\n                $('#end-screen').removeClass('d-none').fadeIn(300);\n                $('#progress').css('width', '100%');\n                clearInterval(interval);\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('play', 'mod_interactivevideo'));\n            };\n\n            let interval;\n            const onPlaying = async () => { // Use with player timeupdate event.\n                // Reset the annotation content.\n                if (!playerReady) {\n                    return;\n                }\n                if ($('body').hasClass('mobiletheme') && !$('#wrapper').hasClass('fullscreen')) {\n                    $(\"#fullscreen\").trigger('click');\n                }\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').remove();\n                $('#end-screen, #start-screen').fadeOut(300);\n                $('#restart').addClass('d-none');\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('pause', 'mod_interactivevideo'));\n                const intervalFunction = async function () {\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        clearInterval(interval);\n                        return;\n                    }\n\n                    const t = await player.getCurrentTime();\n                    if (t > end || isEnded) {\n                        clearInterval(interval);\n                        onEnded(end);\n                        return;\n                    }\n\n                    dispatchEvent('timeupdate', { 'time': t });\n\n                    const time = Math.round(t);\n\n                    // If it is the same annotation we just run, then we don't need to run it again.\n                    if (lastanno && time == lastanno.timestamp) {\n                        return;\n                    } else {\n                        if (lastanno && time > lastanno.timestamp) {\n                            lastanno = null;\n                        }\n                        let percentagePlayed = (t - start) / totaltime;\n                        $('#currenttime').text(convertSecondsToHMS(t - start));\n                        percentagePlayed = percentagePlayed > 1 ? 1 : percentagePlayed;\n                        $('#video-nav #progress').css('width', percentagePlayed * 100 + '%');\n\n                        const theAnnotation = releventAnnotations.find(x => (((t - player.frequency) <= x.timestamp\n                            && (t + player.frequency) >= x.timestamp) || time == x.timestamp) && x.id != 0);\n                        if (theAnnotation) {\n                            if (theAnnotation.completed && !theAnnotation.rerunnable) {\n                                $('#video-nav .annotation[data-id=\"' + theAnnotation.id + '\"] .item').tooltip('show');\n                                setTimeout(function () {\n                                    $('#video-nav .annotation[data-id=\"' + theAnnotation.id + '\"] .item').tooltip('hide');\n                                }, 2000);\n                            } else {\n                                player.pause();\n                                $('#video-nav #progress')\n                                    .css('width', (theAnnotation.timestamp - start) / totaltime * 100 + '%');\n                                runInteraction(theAnnotation);\n                            }\n                        }\n                    }\n\n                    // Pause video on spacebar pressed\n                    $(document).on('keydown', function (e) {\n                        if (e.keyCode == 32) {\n                            e.preventDefault();\n                            player.pause();\n                        }\n                    });\n                };\n\n                if (player.type == 'yt' || player.type == 'wistia') {\n                    interval = setInterval(intervalFunction, player.frequency * 100);\n                } else {\n                    intervalFunction();\n                }\n\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + vtype], function (VideoPlayer) {\n                player = new VideoPlayer(\n                    url,\n                    start,\n                    end,\n                    displayoptions.useoriginalvideocontrols == 1,\n                    true,\n                    false\n                );\n            });\n\n            $(document).on('timeupdate', async function (e) {\n                const t = e.originalEvent.detail.time;\n                if (preventskip) {\n                    const theAnnotations = releventAnnotations.filter(x => Number(x.timestamp) <= (t + player.frequency)\n                        && x.completed == false && JSON.parse(x.prop).hascompletion == true);\n                    if (theAnnotations.length > 0) {\n                        const theAnnotation = theAnnotations[0];\n                        player.pause();\n                        await player.seek((theAnnotation.timestamp - 0.7 > start) ? (theAnnotation.timestamp - 0.7) : start);\n                        clearInterval(interval);\n                        $('#toast').toast('show');\n                        $videoNav('#progress').css('width', ((theAnnotation.timestamp - start) / totaltime) * 100 + '%');\n                    }\n                }\n            });\n\n            // Handle the refresh button:: allowing user to refresh the content\n            $(document).on('click', '#refresh', function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = releventAnnotations.find(x => x.id == id);\n                $(this).closest('#message').find(\"#content\").empty();\n                runInteraction(annotation, true);\n            });\n\n            // Handle video control events:: fullscreen toggle\n            $(document).on('click', '#fullscreen', function (e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n\n                // Put the wrapper in fullscreen mode\n                let elem = document.getElementById('wrapper');\n                $('#fullscreen').toggleClass('active');\n                if (!$('#wrapper').hasClass('fullscreen')) {\n                    if (elem.requestFullscreen) {\n                        elem.requestFullscreen();\n                    } else if (elem.mozRequestFullScreen) { /* Firefox */\n                        elem.mozRequestFullScreen();\n                    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n                        elem.webkitRequestFullscreen();\n                    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n                        elem.msRequestFullscreen();\n                    }\n                } else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    } else if (document.mozCancelFullScreen) { /* Firefox */\n                        document.mozCancelFullScreen();\n                    } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n                        document.webkitExitFullscreen();\n                    } else if (document.msExitFullscreen) { /* IE/Edge */\n                        document.msExitFullscreen();\n                    }\n                }\n            });\n\n            $(document).on('fullscreenchange', function () {\n                if (document.fullscreenElement) {\n                    $('#wrapper, #interactivevideo-container').addClass('fullscreen');\n                    $(\"#video-wrapper\").css('padding-bottom', '0');\n                } else {\n                    $('#wrapper, #interactivevideo-container').removeClass('fullscreen');\n                    player.ratio().then((ratio) => {\n                        $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n                    });\n                }\n                $('#wrapper #fullscreen i').toggleClass('bi-fullscreen bi-fullscreen-exit');\n            });\n\n            // Pause video when the tab is not visible.\n            $(document).on('visibilitychange', function () {\n                if (document.visibilityState == 'hidden') {\n                    player.pause();\n                }\n            });\n\n            // Handle share this moment event.\n            $(document).on('click', '#controler #share', function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const $this = $(this);\n                $this.find('i').toggleClass('bi-share-fill bi-share');\n                player.getCurrentTime().then((time) => {\n                    const url = window.location.href;\n                    const shareurl = url + (url.indexOf('?') > 0 ? '&' : '?') + 't=' + Math.round(time);\n                    // Add shareurl to clipboard.\n                    navigator.clipboard.writeText(shareurl).then(function () {\n                        // Show the copied message.\n                        // Change tooltip to copied.\n                        $this.attr('data-original-title', M.util.get_string(\"copied\", \"mod_interactivevideo\")).tooltip('show');\n                        setTimeout(function () {\n                            // Change tooltip back to share.\n                            $this\n                                .attr('data-original-title', M.util.get_string(\"sharethismoment\", \"mod_interactivevideo\"))\n                                .tooltip('hide');\n                            $this.find('i').toggleClass('bi-share-fill bi-share');\n                        }, 2000);\n                    });\n                });\n            });\n\n            // Display time when user hover on the progress bar.\n            $(document).on('mousemove', '#video-nav #seek', function (e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                const time = Math.floor(percentage * totaltime);\n                const formattedTime = convertSecondsToHMS(time);\n                $('.tooltip').remove();\n                $videoNav.find('#seek #tooltip').remove();\n                // Create a dummy element on the ul and show the time as tooltip.\n                $videoNav.find('#seek').append(`<div id=\"tooltip\" class=\"position-absolute bg-transparent text-white\"\n                     data-original-title=\"${formattedTime}\" style=\"left: calc(${percentage * 100}%); width: 3px;\"></div>`);\n                $('#tooltip').tooltip({\n                    container: '#wrapper',\n                    boundary: 'window',\n                }).tooltip('show');\n            });\n\n            $(document).on('mouseleave', '#video-nav #seek', function () {\n                if (!playerReady) {\n                    return;\n                }\n                $videoNav.find('#seek #tooltip').tooltip('hide');\n                $('.tooltip').remove();\n            });\n\n            // Handle annotation click event:: when user click on the annotation on the progress bar\n            $(document).on('click', '#video-nav .annotation', async function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($(this).hasClass('no-click')) {\n                    // Add a tooltip that seeking is disabled.\n                    Toast.add(M.util.get_string('youcannotviewthisannotationyet', 'mod_interactivevideo'), {\n                        type: 'danger'\n                    });\n                    return;\n                }\n                const timestamp = $(this).data('timestamp');\n                player.play();\n                if (player.type == 'yt') {\n                    clearInterval(interval);\n                }\n                await player.seek(Number(timestamp));\n                replaceProgressBars(((timestamp - start) / totaltime) * 100);\n                const id = $(this).data('id');\n                const theAnnotation = releventAnnotations.find(x => x.id == id);\n                runInteraction(theAnnotation);\n                lastanno = theAnnotation;\n            });\n\n            // Handle seeking event:: when user click on the progress bar\n            $(document).on('click', '#video-nav', async function (e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($(this).hasClass('no-click')) {\n                    // Add a tooltip that seeking is disabled.\n                    Toast.add(M.util.get_string('seekingdisabled', 'mod_interactivevideo'), {\n                        type: 'danger'\n                    });\n                    return;\n                }\n                lastanno = null;\n                $('#start-screen').fadeOut(300);\n                $('#end-screen').fadeOut(300);\n                var percentage = e.offsetX / $(this).width();\n                // Gotta check if this affects anything.\n                if (player.type == 'yt') {\n                    clearInterval(interval);\n                }\n                player.pause(); // Especially for vimeo.\n                await player.seek((percentage * totaltime) + start);\n                replaceProgressBars(percentage * 100);\n                player.play();\n\n            });\n\n            // Handle video control events:: play\n            $(document).on('click', '#start-screen #play', async function (e) {\n                e.preventDefault();\n                $('#start-screen').fadeOut(300);\n                $(this).addClass('d-none');\n                $videoNav.removeClass('d-none');\n                await player.seek(start);\n                player.play();\n            });\n\n            // Handle video control events:: restart\n            $(document).on('click', '#end-screen #restart', async function (e) {\n                e.preventDefault();\n                $('#message').remove();\n                lastanno = null;\n                await player.seek(start);\n                $videoNav.find(\"#progress\").css('width', '0%');\n                $('#end-screen').fadeOut(300);\n                $(this).addClass('d-none');\n                $videoNav.removeClass('d-none');\n                replaceProgressBars(0);\n                player.play();\n            });\n\n            // Handle video control events:: pause/resume when user click on the video\n            $(document).on('click', '#video-wrapper .video-block', async function (e) {\n                if (!playerReady) {\n                    return;\n                }\n                clearInterval(interval);\n                e.preventDefault();\n                // Pause or resume the video.\n                player.isPlaying().then(async (playing) => {\n                    if (playing) {\n                        player.pause();\n                    } else {\n                        player.play();\n                    }\n                });\n            });\n\n            $(document).on('click', '#playpause', function (e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $(this).tooltip('hide');\n                // Pause or resume the video.\n                player.isPlaying().then(async (playing) => {\n                    if (playing) {\n                        player.pause();\n                    } else {\n                        let t = await player.getCurrentTime();\n                        if (t >= end) {\n                            $('#end-screen #restart').trigger('click');\n                        } else {\n                            player.play();\n                        }\n                    }\n                });\n            });\n\n            $(document).on('click', 'li.anno', async function (e) {\n                e.preventDefault();\n                const id = $(this).data('id');\n                $(`li.annotation[data-id=${id}]`).trigger('click');\n                if ($(this).closest('#chapter-container-left').length > 0) {\n                    $('#chaptertoggle .btn').trigger('click');\n                }\n            });\n\n            $(document).on('click', '#mute', function (e) {\n                e.preventDefault();\n                $(this).tooltip('hide');\n                $(this).toggleClass('active');\n                if ($(this).hasClass('active')) {\n                    player.mute();\n                    $(this).attr('data-original-title', M.util.get_string('unmute', 'mod_interactivevideo'));\n                } else {\n                    player.unMute();\n                    $(this).attr('data-original-title', M.util.get_string('mute', 'mod_interactivevideo'));\n                }\n                $(this).find('i').toggleClass('bi-volume-mute bi-volume-up');\n                $(this).tooltip('show');\n            });\n\n            $(document).on('interactionrun', function (e) {\n                window.console.log(e);\n            });\n\n            $(document).on('interactionclose', function (e) {\n                window.console.log(e);\n            });\n\n            $(document).on('interactionCompletionUpdated', function (e) {\n                window.console.log(e);\n            });\n\n            $(document).on('iv:playerReady', function () {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function () {\n                onPaused();\n            });\n\n            $(document).on('iv:playerPlaying', function () {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function () {\n                onEnded();\n            });\n\n            $(document).on('iv:playerError', function () {\n                Toast.add(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), {\n                    type: 'danger'\n                });\n                $('#spinner').remove();\n            });\n\n        }\n    };\n});"],"names":["define","$","Toast","annotations","totaltime","activityType","lastanno","contentTypes","displayoptions","releventAnnotations","player","dispatchEvent","ctRenderer","$videoNav","renderAnnotationItems","async","annos","start","actualduration","skipsegments","filter","x","type","length","forEach","Number","title","timestamp","completableAnno","JSON","parse","prop","hascompletion","actualAnnotationCounts","xp","map","reduce","a","b","completedAnnos","completed","xpEarned","seconds","empty","append","Math","ceil","floor","preventseeking","addClass","hidemainvideocontrols","hideinteractions","Promise","resolve","renderItemOnVideoNavigation","then","chapteritems","sort","each","cstart","this","data","cend","find","id","icon","formattedtitle","document","on","tooltip","container","boundary","disableinteractionclickuntilcompleted","disableinteractionclick","init","url","cmid","interaction","course","userid","end","completionpercentage","gradeiteminstance","grademax","vtype","preventskip","moment","doptions","token","isNaN","playerReady","convertSecondsToHMS","h","m","s","replaceProgressBars","percentage","replaceWith","getAnnotations","callback","annnoitems","ajax","M","cfg","wwwroot","method","dataType","action","sesskey","contextid","courseContextId","userprogress","uid","getContentTypes","when","done","progress","ct","some","y","name","completedItems","completeditems","stringify","indexOf","advanced","rerunnable","replaybehavior","shouldAdd","push","unshift","util","get_string","hide","chapterContentType","includes","remove","removeClass","count","require","amdmodule","Type","error","toggleClass","runInteraction","pause","annotation","modal","not","fadeOut","theAnnotations","theAnnotation","seek","toast","shareMoment","urlParams","URLSearchParams","window","location","search","time","play","delete","newurl","protocol","host","pathname","toString","history","replaceState","onReady","posterImage","css","getDuration","duration","min","text","ratio","focus","onPaused","clearInterval","interval","attr","onEnded","t","setTimeout","fadeIn","onPlaying","hasClass","trigger","intervalFunction","isPlaying","isEnded","getCurrentTime","round","percentagePlayed","frequency","e","keyCode","preventDefault","setInterval","VideoPlayer","useoriginalvideocontrols","originalEvent","detail","stopImmediatePropagation","closest","elem","getElementById","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","fullscreenElement","visibilityState","$this","href","shareurl","navigator","clipboard","writeText","offsetX","width","formattedTime","add","playing","mute","unMute","console","log"],"mappings":"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"}