{"version":3,"file":"viewannotation.min.js","sources":["../src/viewannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n\n/**\n * View page module\n *\n * @module     mod_interactivevideo/viewannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery', 'core/event_dispatcher', 'core/toast', 'mod_interactivevideo/libraries/jquery-ui'\n], function($, eventDispatcher, Toast) {\n    const {dispatchEvent} = eventDispatcher;\n    const ctRenderer = {};\n    let annotations, // Array of annotations.\n        totaltime, // Video total time.\n        activityType, // Current activityType.\n        viewedAnno = [], // Array of viewed annotations.\n        contentTypes, // Array of available content types.\n        displayoptions, // Display options.\n        releventAnnotations, // Array of annotations that are not skipped.\n        completionid, // Id of the completion record.\n        player, // Video player instance.\n        lastrun; // Last run annotation.\n\n    const $videoNav = $('#video-nav');\n    const $interactionNav = $('#interactions-nav');\n    const $loader = $('#background-loading');\n\n    const formatTime = (seconds) => {\n        const hours = Math.floor(seconds / 3600);\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const remainingSeconds = seconds % 60;\n        let string = '';\n        if (hours > 0) {\n            string += hours + 'h ';\n        }\n        if (minutes > 0) {\n            string += minutes + 'm ';\n        }\n        if (remainingSeconds > 0) {\n            string += remainingSeconds + 's';\n        }\n        return string;\n    };\n\n    const renderAnnotationItems = async (annos, start, totaltime) => {\n        releventAnnotations = annos;\n        window.IVANNO = annos;\n        let actualduration = totaltime;\n\n        const skipsegments = annos.filter(x => x.type == 'skipsegment');\n\n        if (skipsegments.length > 0) {\n            skipsegments.forEach(x => {\n                const length = (Number(x.title) - Number(x.timestamp));\n                actualduration -= length;\n            });\n        }\n\n        const completableAnno = releventAnnotations.filter(x => x.hascompletion == 1);\n        const actualAnnotationCounts = completableAnno.length;\n\n        const xp = completableAnno.map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n\n        const completedAnnos = completableAnno\n            .filter(x => x.completed);\n\n        const xpEarned = completedAnnos.map(x => Number(x.earned)).reduce((a, b) => a + b, 0);\n\n        $(\".metadata\").empty();\n        $(\".metadata\").append(`<span class=\"d-inline-block mr-3\">\n            <i class=\"bi bi-stopwatch mr-2\"></i>${formatTime(Math.ceil(actualduration))}</span>\n            <span class=\"d-inline-block mr-3\">\n        <i class=\"bi bi-bullseye mr-2\"></i>${completedAnnos.length} / ${actualAnnotationCounts}</span>\n        <span class=\"d-inline-block\"><i class=\"bi bi-star mr-2\"></i>${xpEarned} / ${xp}</span>`);\n\n        $(\"#interactions-nav ul\").empty();\n\n        if (displayoptions.preventseeking == 1) {\n            $videoNav.addClass('no-pointer-events');\n        }\n\n        if (displayoptions.hidemainvideocontrols == 1 || displayoptions.hideinteractions == 1) {\n            if (displayoptions.hidemainvideocontrols == 1) {\n                $('#wrapper').addClass('no-videonav');\n            }\n            dispatchEvent('annotationitemsrendered', {\n                'annotations': annos,\n                'completed': completedAnnos.length,\n                'total': actualAnnotationCounts,\n                'xp': xpEarned,\n                'totalxp': xp,\n            });\n            return;\n        }\n        for (const x of annos) {\n            const renderer = ctRenderer[x.type];\n            await renderer.renderItemOnVideoNavigation(x);\n        }\n        dispatchEvent('annotationitemsrendered', {\n            'annotations': annos,\n            'completed': completedAnnos.length,\n            'total': actualAnnotationCounts,\n            'xp': xpEarned,\n            'totalxp': xp,\n        });\n\n        $('.annolistinchapter').empty();\n        const chapteritems = releventAnnotations.filter(x => x.type != 'skipsegment' && x.hascompletion == 1);\n        chapteritems.sort((a, b) => a.timestamp - b.timestamp);\n        chapteritems.forEach((x) => {\n            $('[data-region=\"chapterlists\"] li').each(function() {\n                const cstart = $(this).data('start');\n                const cend = $(this).data('end');\n                if (x.timestamp >= cstart && x.timestamp < cend) {\n                    $(this).find('.annolistinchapter')\n                        .append(`<li class=\"border-bottom anno d-flex align-items-center justify-content-between\n                         px-3 py-2 ${x.completed ? \"completed\" : \"\"}\" data-id=\"${x.id}\" data-timestamp=\"${x.timestamp}\">\n                         <span class=\"text-nowrap\">\n                         <i class=\"small bi ${x.completed ? \"bi-check-circle-fill text-success\" : 'bi-circle'} mr-2\"></i>\n                         <i class=\"${JSON.parse(x.prop).icon} mr-2\"></i></span>\n                         <span class=\"flex-grow-1 text-truncate\">${x.formattedtitle}</span>\n                         <span class=\"text-nowrap\">${x.xp}<i class=\"bi bi-star ml-1\"></i></span></li>`);\n                }\n            });\n        });\n        dispatchEvent('chapterrendered', {'annotations': releventAnnotations});\n    };\n\n    return {\n        /**\n         * Render annotation items on the video navigation and chapter list.\n         */\n        renderAnnotationItems: renderAnnotationItems,\n        /**\n         * Initialize the view annotation on page loads.\n         * @param {string} url - The video url.\n         * @param {number} cmid - The course module id.\n         * @param {number} interaction - Interactive video instance.\n         * @param {number} course - The course id.\n         * @param {number} userid - The user id.\n         * @param {number} start - The start time of the video.\n         * @param {number} end - The end time of the video.\n         * @param {number} completionpercentage - The completion percentage.\n         * @param {number} gradeiteminstance - The grade item instance.\n         * @param {number} grademax - The grade max.\n         * @param {string} vtype - The video type.\n         * @param {boolean} preventskip - Prevent user from skipping the video.\n         * @param {number} moment - The moment to share.\n         * @param {object} doptions - The display options.\n         * @param {string} token - The token.\n         * @param {string} extendedcompletion - The extended completion requirements.\n         * @return {void}\n         */\n        init: function(\n            url, cmid, interaction, course, userid, start = 0, end,\n            completionpercentage, gradeiteminstance, grademax, vtype,\n            preventskip = true, moment = null, doptions = {}, token = null, extendedcompletion = null) {\n            // Convert start to number if string\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            // Convert end to number if string\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            displayoptions = doptions;\n\n            let playerReady = false;\n\n            if (localStorage.getItem('limitedwidth') == 'true' && displayoptions.hidemainvideocontrols == 0) {\n                $('body').addClass('limited-width');\n                $('#controller #expand i').removeClass('bi-file').addClass('bi-square');\n            }\n\n            /**\n             * Function to convert seconds to HH:MM:SS format.\n             * @param {number} seconds\n             * @returns {string}\n             */\n            const convertSecondsToHMS = (seconds) => {\n                if (seconds < 0) {\n                    return '00:00';\n                }\n                const h = Math.floor(seconds / 3600);\n                const m = Math.floor(seconds % 3600 / 60);\n                const s = Math.floor(seconds % 3600 % 60);\n                return (h > 0 ? h + ':' : '') + (m < 10 ? '0' : '') + m + ':' + (s < 10 ? '0' : '') + s;\n            };\n\n            /**\n             * Function to replace the progress bars on the video navigation.\n             * @param {number} percentage\n             * @returns {void}\n             */\n            const replaceProgressBars = (percentage) => {\n                percentage = percentage > 100 ? 100 : percentage;\n                $videoNav.find('#progress').css('width', percentage + '%');\n                $videoNav.find('#seekhead').css('left', percentage + '%');\n            };\n\n            /**\n             * Function to get all annotations from the database and render them.\n             * @param {function} callback\n             * @returns {Promise}\n             */\n            const getAnnotations = (callback) => {\n                // Get all interaction items.\n                const annnoitems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.courseContextId,\n                        token: token,\n                        cmid: cmid\n                    }\n                });\n\n                // Get current user progress.\n                const userprogress = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_progress',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        uid: userid,\n                        token: token,\n                        cmid: cmid,\n                        contextid: M.cfg.contextid,\n                        previewmode: $('body').hasClass('preview-mode') ? 1 : 0\n                    }\n                });\n\n                // Get all content types.\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        token: token,\n                        cmid: cmid,\n                        contextid: M.cfg.contextid\n                    }\n                });\n\n                $.when(annnoitems, userprogress, getContentTypes).done(async function(annos, progress, ct) {\n                    annotations = JSON.parse(annos[0]);\n                    progress = JSON.parse(progress[0]);\n                    contentTypes = JSON.parse(ct[0]);\n                    completionid = progress.id;\n                    let completiondetails = JSON.parse(progress.completiondetails || '[]');\n                    annotations = filterAnnotations(annotations, contentTypes, start, end);\n                    annotations = processAnnotations(annotations, contentTypes, progress, start, end, completiondetails);\n                    annotations.sort((a, b) => a.timestamp - b.timestamp);\n\n                    releventAnnotations = getRelevantAnnotations(annotations, start, end, contentTypes);\n\n                    if (releventAnnotations.length > 0 && !releventAnnotations.find(x => x.type == 'chapter')) {\n                        prependDummyChapter(releventAnnotations, start, contentTypes);\n                    }\n\n                    await initializeContentTypeRenderers(contentTypes, releventAnnotations, player, interaction, course, userid,\n                        completionpercentage, gradeiteminstance, grademax, vtype, preventskip,\n                        totaltime, start, end, cmid, token, completionid);\n\n                    await renderAnnotationItems(releventAnnotations, start, totaltime);\n                    $(\"#play\").removeClass('d-none');\n                    $(\"#spinner\").remove();\n                    $(\"#video-info\").toggleClass('d-none d-flex');\n                    playerReady = true;\n                    callback();\n                    return new Promise((resolve) => {\n                        resolve();\n                    });\n                });\n\n                /**\n                 * Filters annotations based on content types and a time range.\n                 *\n                 * @param {Array} annotations - The list of annotations to filter.\n                 * @param {Array} contentTypes - The list of content types to include.\n                 * @param {number} start - The start time of the range.\n                 * @param {number} end - The end time of the range.\n                 * @returns {Array} - The filtered list of annotations.\n                 */\n                function filterAnnotations(annotations, contentTypes, start, end) {\n                    return annotations.filter(annotation => {\n                        const inContentType = contentTypes.some(y => y.name === annotation.type);\n                        if (!inContentType) {\n                            return false;\n                        }\n\n                        if (annotation.type === 'skipsegment') {\n                            return !(annotation.timestamp > end || annotation.title < start);\n                        }\n\n                        return (annotation.timestamp >= start && annotation.timestamp <= end) || annotation.timestamp < 0;\n                    });\n                }\n\n                /**\n                 * Maps and processes annotations based on provided content types, progress, and time range.\n                 *\n                 * @param {Array} annotations - The list of annotations to be processed.\n                 * @param {Array} contentTypes - The list of content types to match with annotations.\n                 * @param {Object} progress - The progress object containing completed items.\n                 * @param {number} start - The start time of the segment.\n                 * @param {number} end - The end time of the segment.\n                 * @param {Object} completiondetails - The completion details object.\n                 * @returns {Array} - The processed list of annotations.\n                 */\n                function processAnnotations(annotations, contentTypes, progress, start, end, completiondetails) {\n                    const completedItems = progress.completeditems == '' ? [] : JSON.parse(progress.completeditems);\n                    const contentTypeMap = new Map(contentTypes.map(ct => [ct.name, ct]));\n                    return annotations.map(annotation => {\n                        annotation.timestamp = Number(annotation.timestamp);\n                        annotation.xp = Number(annotation.xp);\n                        const completionitem = completiondetails.find(x => JSON.parse(x).id == annotation.id);\n                        if (completionitem) {\n                            annotation.earned = Number(JSON.parse(completionitem).xp);\n                        } else {\n                            annotation.earned = 0;\n                        }\n                        if (annotation.type == 'skipsegment') {\n                            annotation.title = Number(annotation.title);\n                            if (annotation.timestamp < start && annotation.title > start) {\n                                annotation.timestamp = start;\n                            }\n                            if (annotation.title > end && annotation.timestamp < end) {\n                                annotation.title = end;\n                            }\n                        }\n                        annotation.prop = JSON.stringify(contentTypeMap.get(annotation.type));\n                        annotation.completed = completedItems.indexOf(annotation.id) > -1;\n\n                        let advanced;\n                        try {\n                            advanced = JSON.parse(annotation.advanced);\n                        } catch (e) {\n                            advanced = null;\n                        }\n                        annotation.rerunnable = advanced && advanced.replaybehavior === '1';\n\n                        return annotation;\n                    });\n                }\n\n                /**\n                 * Filters and returns relevant annotations within a specified time range,\n                 * excluding those that fall within skip segments.\n                 *\n                 * @param {Array} annotations - The list of annotations to filter.\n                 * @returns {Array} - The filtered list of relevant annotations.\n                 */\n                function getRelevantAnnotations(annotations) {\n                    const skipsegments = annotations.filter(annotation => annotation.type == 'skipsegment');\n                    let releventAnnotations = [];\n                    annotations.forEach(annotation => {\n                        let shouldAdd = true;\n                        skipsegments.forEach(skipsegment => {\n                            if (Number(annotation.timestamp) > Number(skipsegment.timestamp)\n                                && Number(annotation.timestamp) < Number(skipsegment.title)) {\n                                shouldAdd = false;\n                            }\n                        });\n                        if (shouldAdd) {\n                            releventAnnotations.push(annotation);\n                        }\n                    });\n                    return releventAnnotations;\n                }\n\n                /**\n                 * Adds a dummy chapter annotation to the beginning of the relevant annotations array.\n                 *\n                 * @param {Array} releventAnnotations - The array of relevant annotations to which the dummy chapter will be added.\n                 * @param {number} start - The timestamp at which the dummy chapter starts.\n                 * @param {Array} contentTypes - The array of content types to find the chapter type from.\n                 */\n                function prependDummyChapter(releventAnnotations, start, contentTypes) {\n                    releventAnnotations.unshift({\n                        id: 0,\n                        title: M.util.get_string('startchapter', 'mod_interactivevideo'),\n                        formattedtitle: M.util.get_string('startchapter', 'mod_interactivevideo'),\n                        timestamp: start,\n                        type: 'chapter',\n                        prop: JSON.stringify(contentTypes.find(x => x.name == 'chapter')),\n                        xp: 0,\n                        completed: true,\n                        hide: true\n                    });\n                }\n\n\n                /**\n                 * Asynchronously loads and initializes content type renderers for interactive video annotations.\n                 *\n                 * @param {Array} contentTypes - Array of content type objects.\n                 * @param {Array} releventAnnotations - Array of relevant annotation objects.\n                 * @param {Object} player - The video player instance.\n                 * @param {Object} interaction - The interaction object.\n                 * @param {Object} course - The course object.\n                 * @param {number} userid - The user ID.\n                 * @param {number} completionpercentage - The completion percentage.\n                 * @param {number} gradeiteminstance - The grade item instance.\n                 * @param {number} grademax - The maximum grade.\n                 * @param {string} vtype - The video type.\n                 * @param {boolean} preventskip - Flag to prevent skipping.\n                 * @param {number} totaltime - The total time of the video.\n                 * @param {number} start - The start time of the video.\n                 * @param {number} end - The end time of the video.\n                 * @param {number} cmid - The course module ID.\n                 * @param {string} token - The authentication token.\n                 * @param {number} completionid - Completion record id.\n                 */\n                async function initializeContentTypeRenderers(contentTypes, releventAnnotations,\n                    player, interaction, course, userid, completionpercentage, gradeiteminstance,\n                    grademax, vtype, preventskip, totaltime, start, end, cmid, token, completionid) {\n                    const chapterContentType = contentTypes.find(x => x.name == 'chapter');\n                    contentTypes = contentTypes.filter(x => releventAnnotations.map(y => y.type).includes(x.name));\n                    if (contentTypes.length == 0) {\n                        $('#chaptertoggle, #chapter-container-left, #chapter-container-right').remove();\n                        return;\n                    } else {\n                        $('#chaptertoggle, #chapter-container-left, #chapter-container-right').removeClass('d-none');\n                    }\n                    if (!contentTypes.find(x => x.name == 'chapter')) {\n                        contentTypes.push(chapterContentType);\n                    }\n                    await Promise.all(contentTypes.map(contentType => {\n                        return new Promise((resolve) => {\n                            require([contentType.amdmodule], function(Type) {\n                                ctRenderer[contentType.name] = new Type(player, releventAnnotations, interaction, course, userid,\n                                    completionpercentage, gradeiteminstance, grademax, vtype, preventskip, totaltime, start,\n                                    end, contentType, cmid, token, displayoptions, completionid, extendedcompletion);\n                                try {\n                                    ctRenderer[contentType.name].init();\n                                } catch (error) {\n                                    // Do nothing.\n                                }\n                                resolve();\n                            });\n                        });\n                    }));\n                }\n            };\n\n            /**\n             * Run the interaction.\n             * @param {object} annotation annotation object\n             * @returns {void}\n             */\n            const runInteraction = async (annotation) => {\n                lastrun = annotation.id;\n                $('#video-wrapper').data('timestamp', new Date().getTime());\n                viewedAnno.push(Number(annotation.id));\n                viewedAnno = [...new Set(viewedAnno)];\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').not(`[data-id=${annotation.id}]`).remove();\n                $('#end-screen, #start-screen').fadeOut(300);\n\n                if (preventskip) {\n                    const theAnnotations = releventAnnotations\n                        .filter(x => Number(x.timestamp) < Number(annotation.timestamp)\n                            && x.completed == false && x.hascompletion == 1);\n                    if (theAnnotations.length > 0) {\n                        const theAnnotation = theAnnotations[0];\n                        await player.pause();\n                        await player.seek((theAnnotation.timestamp - 0.7 > start) ? (theAnnotation.timestamp - 0.7) : start);\n                        Toast.add(M.util.get_string('youmustcompletethepreviousactivity', 'mod_interactivevideo'), {\n                            type: 'danger'\n                        });\n                        return;\n                    }\n                }\n                activityType = ctRenderer[annotation.type];\n                replaceProgressBars(((annotation.timestamp - start) / totaltime) * 100);\n                activityType.runInteraction(annotation);\n                dispatchEvent('interactionrun', {'annotation': annotation});\n            };\n\n            /**\n             * Shares a specific moment in the video by seeking to the given timestamp and playing the video.\n             * If the timestamp is within the valid range, it hides the start screen, seeks to the timestamp,\n             * plays the video, runs the relevant annotation interaction, and updates the progress bars.\n             * Finally, it removes the timestamp parameter from the URL.\n             *\n             * @async\n             * @function shareMoment\n             * @returns {Promise<void>} A promise that resolves when the video has been successfully sought and played.\n             */\n            const shareMoment = async () => {\n                if (!moment) {\n                    return;\n                }\n                // Check if the url has a timestamp using url params.\n                const urlParams = new URLSearchParams(window.location.search);\n                const time = Number(moment);\n                if (time && !isNaN(time) && time >= start && time <= end) {\n                    // Hide the start screen.\n                    $('#video-wrapper #start-screen').hide(0);\n                    replaceProgressBars(((time - start) / totaltime) * 100);\n                    await player.seek(time);\n                    player.play();\n                }\n                urlParams.delete('t');\n                const newurl = window.location.protocol\n                    + '//' + window.location.host + window.location.pathname + '?' + urlParams.toString();\n                window.history.replaceState(null, null, newurl);\n            };\n\n            /**\n             * Initializes the video player and its controls when the player is ready.\n             *\n             * This function performs the following tasks:\n             * - Checks if the player supports playback rate and quality adjustments, and updates the UI accordingly.\n             * - Sets the background image of the start screen if a poster image is available.\n             * - Adjusts the background of the video block to be transparent.\n             * - Retrieves the video duration and updates the end time if necessary.\n             * - Calculates the total playback time and updates the duration display.\n             * - Recalculates the aspect ratio of the video and updates the video wrapper's padding.\n             * - Sets the player as ready and focuses on the start button.\n             * - Initializes the seek head draggable functionality, allowing users to seek through the video.\n             *\n             * @async\n             * @function onReady\n             * @returns {Promise<void>} A promise that resolves when the player is fully initialized and ready.\n             */\n            const onReady = async () => {\n                // Add player to Window object.\n                window.IVPLAYER = player;\n                // Check if the player supports playback rate and quality adjustments.\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                if (player.support.quality == false) {\n                    $('#changequality').remove();\n                } else {\n                    $('#changequality').removeClass('d-none');\n                }\n\n                // Get watchedpoint from storage to resume.\n                if (!moment) {\n                    const lastwatched = localStorage.getItem(`watchedpoint-${userid}-${interaction}`);\n                    if (lastwatched) {\n                        if (lastwatched > start + 60 || lastwatched < end - 60) {\n                            player.seek(lastwatched);\n                        }\n                    }\n                }\n\n                $(\".video-block\").css('background', 'transparent');\n                $(\"#annotation-canvas\").removeClass('d-none');\n                // Explanation: YT shows annoying related videos if the player is large enough when the script is loading.\n                // So we're tricking it by hiding the canvas which also hides the #player first\n                // and only shows it when player is ready.\n                const duration = await player.getDuration();\n                end = !end ? duration : Math.min(end, duration);\n                start = start > end ? 0 : start;\n                totaltime = end - start;\n                await getAnnotations(shareMoment);\n                $('#duration').text(convertSecondsToHMS(totaltime));\n\n                // Recalculate the ratio of the video\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n                let gap = '125px';\n                if ($(\"body\").hasClass('embed-mode')) {\n                    if (displayoptions.hidemainvideocontrols == 1) {\n                        $(\"#wrapper\").css({\n                            'width': 'calc(100dvh * ' + ratio + ')'\n                        });\n                    } else {\n                        $(\"#wrapper\").css({\n                            'width': 'calc((100dvh - 55px) * ' + ratio + ')'\n                        });\n                    }\n                } else {\n                    if (displayoptions.hidemainvideocontrols == 1) {\n                        gap = '55px';\n                    }\n                    $(\"#wrapper\").css({\n                        'width': 'calc((100dvh - ' + gap + ' - 3rem) * ' + ratio + ')'\n                    });\n                }\n                $('#start-screen #start').focus();\n\n                $('#seekhead').draggable({\n                    'containment': '#video-nav',\n                    'axis': 'x',\n                    'cursor': 'col-resize',\n                    'start': function(event, ui) {\n                        $(this).addClass('active');\n                        $('#taskinfo').addClass('no-pointer-events');\n                        $(\"#message, #end-screen\").remove();\n                        $(\"#seek\").append('<div id=\"position\"><div id=\"timelabel\"></div></div>');\n                        let $position = $('#position');\n                        const relX = ui.position.left;\n                        $position.css('left', (relX) + 'px');\n                        const percentage = relX / $(this).width();\n                        const time = percentage * totaltime;\n                        const formattedTime = convertSecondsToHMS(time);\n                        $position.find('#timelabel').text(formattedTime);\n                    },\n                    'drag': async function(event, ui) {\n                        let timestamp = ((ui.position.left) / $('#video-nav').width()) * totaltime + start;\n                        let percentage = ui.position.left / $('#video-nav').width();\n                        replaceProgressBars(percentage * 100);\n                        $('#seek #position').css('left', ui.position.left + 'px');\n                        $('#seek #position #timelabel').text(convertSecondsToHMS(timestamp - start));\n                        await player.seek(timestamp);\n                        await player.pause();\n                    },\n                    'stop': async function() {\n                        setTimeout(function() {\n                            $('#taskinfo').removeClass('no-pointer-events');\n                        }, 200);\n                        setTimeout(function() {\n                            $('#seekhead').removeClass('active');\n                            $('#seek #position').remove();\n                        }, 1000);\n                        player.play();\n                    }\n                });\n\n                dispatchEvent('timeupdate', {'time': start});\n\n                // Resize observer\n                let vwrapper = document.querySelector('#video-wrapper');\n                const resizeObserver = new ResizeObserver(() => {\n                    // If vwrapper is larger than 1050px, show #expand; otherwise, hide it.\n                    if (vwrapper.clientWidth > 1050) {\n                        $('#controller #expand').removeClass('d-none');\n                    } else {\n                        $('#controller #expand').addClass('d-none');\n                    }\n                });\n\n                resizeObserver.observe(vwrapper);\n\n                // Scroll into view #video-wrapper\n                if ($('body').hasClass('embed-mode')) {\n                    return;\n                }\n                vwrapper.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"});\n            };\n\n            /**\n             * Handles the event when the video player is paused.\n             *\n             * This function performs the following actions:\n             * - Checks if the player is ready. If not, it exits early.\n             * - Clears the interval timer.\n             * - Updates the play/pause button icon to indicate 'play'.\n             * - Sets the tooltip of the play/pause button to 'play'.\n             */\n            const onPaused = () => {\n                if (!playerReady) {\n                    return;\n                }\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('play', 'mod_interactivevideo'));\n                // Save watched point to cache.\n                localStorage.setItem(`watchedpoint-${userid}-${interaction}`, player.getCurrentTime());\n            };\n\n\n            /**\n             * Handles the end of the video playback.\n             *\n             *\n             * @returns {void}\n             *\n             * This function performs the following actions:\n             * - Checks if the player is ready.\n             * - Updates the UI to show the end screen and restart button.\n             * - Clears the interval and pauses the player.\n             * - Updates the play/pause button to show the play icon.\n             */\n            const onEnded = async () => {\n                if (!playerReady) {\n                    return;\n                }\n                $('#currenttime').text(convertSecondsToHMS(totaltime));\n                $('#restart').removeClass('d-none').fadeIn(300);\n                $('#end-screen').removeClass('d-none').fadeIn(300);\n                $('#progress').css('width', '100%');\n                $('#seekhead').css('left', '100%');\n                await player.pause();\n                dispatchEvent('timeupdate', {'time': end});\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('play', 'mod_interactivevideo'));\n            };\n\n            /**\n             * Handles the seek event for the video player.\n             *\n             * @param {number} t - The time to seek to. If not provided, the current time of the player will be used.\n             * @returns {Promise<void>} - A promise that resolves when the seek operation is complete.\n             */\n            const onSeek = async (t) => {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen, #start-screen').addClass('d-none');\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#currenttime').text(convertSecondsToHMS(t - start));\n                replaceProgressBars(percentage);\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let visualized = false;\n            /**\n             * Handles the 'playing' event of the video player.\n             * This function is triggered when the video is playing and performs various actions such as:\n             * - Resetting the annotation content.\n             * - Handling fullscreen mode for mobile themes.\n             * - Hiding modals and messages.\n             * - Updating the play/pause button state.\n             * - Managing the video progress and annotations.\n             *\n             * @async\n             * @function onPlaying\n             * @returns {Promise<void>} A promise that resolves when the function completes.\n             */\n            const onPlaying = () => {\n                // Reset the annotation content.\n                if (!playerReady) {\n                    return;\n                }\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                if ($('body').hasClass('mobiletheme') && !$('#wrapper').hasClass('fullscreen')) {\n                    $(\"#fullscreen\").trigger('click');\n                }\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen, #start-screen').fadeOut(300);\n                $('#restart').addClass('d-none');\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');\n                $('#playpause').attr('data-original-title', M.util.get_string('pause', 'mod_interactivevideo'));\n                const intervalFunction = async function() {\n                    const t = await player.getCurrentTime();\n                    // Remove the viewedAnno after the current time.\n                    viewedAnno = viewedAnno.filter(x => {\n                        const anno = releventAnnotations.find(y => y.id == x);\n                        return anno.timestamp <= t;\n                    });\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        return;\n                    }\n\n                    if (t > end || isEnded) {\n                        onEnded(end);\n                        return;\n                    }\n\n                    // Make sure wistia is not muted.\n                    if ($('#mute i').hasClass('bi-volume-up') && player.type == 'wistia') {\n                        player.unMute();\n                    }\n\n                    dispatchEvent('timeupdate', {'time': t});\n\n                    const time = Number(t.toFixed(2));\n                    // If it is the same annotation we just run, then we don't need to run it again.\n                    let percentagePlayed = (t - start) / totaltime;\n                    $('#currenttime').text(convertSecondsToHMS(t - start));\n                    percentagePlayed = percentagePlayed > 1 ? 1 : percentagePlayed;\n                    $('#video-nav #progress').css('width', percentagePlayed * 100 + '%');\n                    $('#video-nav #seekhead').css('left', percentagePlayed * 100 + '%');\n                    const theAnnotation = releventAnnotations.find(x => (((t - 0.5).toFixed(2) <= x.timestamp\n                        && (t + player.frequency).toFixed(2) >= x.timestamp) || time == x.timestamp) &&\n                        x.id != 0 && !viewedAnno.includes(Number(x.id)));\n                    if (theAnnotation) {\n                        $('#interactions-nav .annotation[data-id=\"' + theAnnotation.id + '\"] .item').trigger('mouseover')\n                            .addClass('active');\n                        setTimeout(function() {\n                            $('#interactions-nav .annotation[data-id=\"' + theAnnotation.id + '\"] .item')\n                                .trigger('mouseout').removeClass('active');\n                        }, 2000);\n\n                        if (lastrun && theAnnotation.id == lastrun) {\n                            return;\n                        }\n                        // If in preview mode, don't run the interaction.\n                        if ($('body').hasClass('preview-mode')) {\n                            return;\n                        }\n                        // Run the interaction if it isn't complete or rerunnable.\n                        if (!theAnnotation.completed || theAnnotation.rerunnable) {\n                            $('#video-nav #progress')\n                                .css('width', (theAnnotation.timestamp - start) / totaltime * 100 + '%');\n                            $('#video-nav #seekhead').css('left', (theAnnotation.timestamp - start) / totaltime * 100 + '%');\n                            await player.seek(theAnnotation.timestamp);\n                            runInteraction(theAnnotation);\n                        }\n                    }\n                };\n\n                if (player.type == 'yt' || player.type == 'wistia') {\n                    const animate = async () => {\n                        intervalFunction();\n                        if (await player.isPlaying()) {\n                            requestAnimationFrame(animate);\n                        }\n                    };\n                    requestAnimationFrame(animate);\n                } else {\n                    intervalFunction();\n                }\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + vtype], function(VideoPlayer) {\n                player = new VideoPlayer(\n                    url,\n                    start,\n                    end,\n                    {\n                        'showControls': displayoptions.useoriginalvideocontrols == 1,\n                        'customStart': true,\n                        'preload': false,\n                        'autoplay': displayoptions.autoplay == 1,\n                    }\n                );\n            });\n\n            // Move toast-wrapper to the #wrapper element so it can be displayed on top of the video in fullscreen mode.\n            let $toast = $('.toast-wrapper').detach();\n            $('#wrapper').append($toast);\n\n            $(document).on('timeupdate', async function(e) {\n                const t = e.originalEvent.detail.time;\n                if (preventskip) {\n                    const theAnnotations = releventAnnotations.filter(x => Number(x.timestamp) <= (t + player.frequency)\n                        && x.completed == false && x.hascompletion == 1);\n                    if (theAnnotations.length > 0) {\n                        const theAnnotation = theAnnotations[0];\n                        await player.pause();\n                        await player.seek((theAnnotation.timestamp - 0.7 > start) ? (theAnnotation.timestamp - 0.7) : start);\n                        Toast.add(M.util.get_string('youmustcompletethepreviousactivity', 'mod_interactivevideo'), {\n                            type: 'danger'\n                        });\n                        $videoNav.find('#progress').css('width', ((theAnnotation.timestamp - start) / totaltime) * 100 + '%');\n                        $videoNav.find('#seekhead').css('left', ((theAnnotation.timestamp - start) / totaltime) * 100 + '%');\n                    }\n                }\n            });\n\n            // Handle the refresh button:: allowing user to refresh the content\n            $(document).on('click', '#refresh', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = releventAnnotations.find(x => x.id == id);\n                $(this).closest('#message').remove();\n                runInteraction(annotation);\n            });\n\n            // Handle video control events:: fullscreen toggle\n            $(document).on('click', '#fullscreen', function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n\n                // Put the wrapper in fullscreen mode\n                let elem = document.getElementById('wrapper');\n                $('#fullscreen').toggleClass('active');\n                if (!$('#wrapper').hasClass('fullscreen')) {\n                    if (elem.requestFullscreen) {\n                        elem.requestFullscreen();\n                    } else if (elem.mozRequestFullScreen) { /* Firefox */\n                        elem.mozRequestFullScreen();\n                    } else if (elem.webkitRequestFullscreen) { /* Chrome, Safari and Opera */\n                        elem.webkitRequestFullscreen();\n                    } else if (elem.msRequestFullscreen) { /* IE/Edge */\n                        elem.msRequestFullscreen();\n                    } else if (elem.webkitEnterFullscreen) { /* IOS Safari */\n                        elem.webkitEnterFullscreen();\n                    } else {\n                        Toast.add(M.util.get_string('fullscreenisnotsupported', 'mod_interactivevideo'), {\n                            type: 'danger'\n                        });\n                        // Remove the fullscreen button.\n                        $('#fullscreen').remove();\n                    }\n                } else {\n                    if (document.exitFullscreen) {\n                        document.exitFullscreen();\n                    } else if (document.mozCancelFullScreen) { /* Firefox */\n                        document.mozCancelFullScreen();\n                    } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */\n                        document.webkitExitFullscreen();\n                    } else if (document.msExitFullscreen) { /* IE/Edge */\n                        document.msExitFullscreen();\n                    }\n                }\n            });\n\n            $(document).on('fullscreenchange', async function() {\n                if (document.fullscreenElement) {\n                    $('#wrapper, #interactivevideo-container').addClass('fullscreen');\n                    $(\"#video-wrapper\").css('padding-bottom', '0');\n                    $('#wrapper [data-toggle=\"tooltip\"]').tooltip({\n                        container: '#wrapper',\n                        boundary: 'window',\n                    });\n                } else {\n                    $('#wrapper, #interactivevideo-container').removeClass('fullscreen');\n                    let ratio = 16 / 9;\n                    if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                        ratio = player.aspectratio;\n                    }\n                    $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n                }\n                $('#wrapper #fullscreen i').toggleClass('bi-fullscreen bi-fullscreen-exit');\n            });\n\n            // Pause video when the tab is not visible.\n            if (displayoptions.pauseonblur && displayoptions.pauseonblur == 1) {\n                $(document).on('visibilitychange', function() {\n                    if (!playerReady) {\n                        return;\n                    }\n                    if (document.visibilityState == 'hidden') {\n                        player.pause();\n                    }\n                });\n            }\n\n            // Handle player size change event.\n            $(document).on('click', '#controller #expand', function(e) {\n                e.preventDefault();\n                $('body').toggleClass('limited-width');\n                localStorage.setItem('limitedwidth', $('body').hasClass('limited-width'));\n                $(this).find('i').toggleClass('bi-square bi-file');\n            });\n\n            // Handle share this moment event.\n            $(document).on('click', '#controller #share', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const $this = $(this);\n                $this.find('i').toggleClass('bi-share-fill bi-share');\n                let time = await player.getCurrentTime();\n                const url = window.location.href;\n                const shareurl = url + (url.indexOf('?') > 0 ? '&' : '?') + 't=' + Math.round(time);\n                // Add shareurl to clipboard.\n                await navigator.clipboard.writeText(shareurl);\n                $this.attr('data-original-title', M.util.get_string(\"copied\", \"mod_interactivevideo\")).tooltip('show');\n                setTimeout(function() {\n                    // Change tooltip back to share.\n                    $this\n                        .attr('data-original-title', M.util.get_string(\"sharethismoment\", \"mod_interactivevideo\"))\n                        .tooltip('hide');\n                    $this.find('i').toggleClass('bi-share-fill bi-share');\n                }, 2000);\n            });\n\n            // Display time when user hover on the progress bar.\n            $(document).on('mouseenter', '#video-nav #seek', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $(this).append('<div id=\"position\"><div id=\"timelabel\"></div></div>');\n                let $position = $('#position');\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $position.css('left', (relX) + 'px');\n                const percentage = relX / $(this).width();\n                const time = percentage * totaltime;\n                const formattedTime = convertSecondsToHMS(time);\n                $position.find('#timelabel').text(formattedTime);\n            });\n\n            $(document).on('mousemove', '#video-nav #seek', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                const time = percentage * totaltime;\n                const formattedTime = convertSecondsToHMS(time);\n                $('#position').css('left', (relX) + 'px');\n                $('#position #timelabel').text(formattedTime);\n            });\n\n            $(document).on('mouseleave', '#video-nav #seek', function() {\n                $('#position').remove();\n            });\n\n            // Handle annotation click event:: when user click on the annotation on the progress bar\n            $(document).on('click', '#interactions-nav .annotation, #video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                $loader.fadeIn(300);\n                if ($(this).hasClass('no-click')) {\n                    // Add a tooltip that seeking is disabled.\n                    Toast.add(M.util.get_string('youcannotviewthisannotationyet', 'mod_interactivevideo'), {\n                        type: 'danger'\n                    });\n                    return;\n                }\n                const timestamp = $(this).data('timestamp');\n                if (await player.getCurrentTime() == timestamp && lastrun) {\n                    $loader.fadeOut(300);\n                    return;\n                }\n                lastrun = null;\n                await player.pause();\n                await player.seek(Number(timestamp));\n                const id = $(this).data('id');\n                const theAnnotation = releventAnnotations.find(x => x.id == id);\n                runInteraction(theAnnotation);\n                $loader.fadeOut(300);\n                // Clear the viewed annotations that are after this timestamp.\n                const preceedingAnno = releventAnnotations.filter(x => x.timestamp < timestamp).map(x => Number(x.id));\n                viewedAnno = preceedingAnno;\n                viewedAnno.push(id);\n                // Concatenate the preceeding annotations.\n                viewedAnno = [...new Set(viewedAnno)];\n            });\n\n            // Handle seeking event:: when user click on the progress bar\n            $(document).on('click', '#seek', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('#video-nav').hasClass('no-click')) {\n                    // Add a tooltip that seeking is disabled.\n                    Toast.add(M.util.get_string('seekingdisabled', 'mod_interactivevideo'), {\n                        type: 'danger'\n                    });\n                    return;\n                }\n                $('#start-screen').fadeOut(300);\n                $('#end-screen').fadeOut(300);\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                await player.pause(); // Especially for vimeo.\n                await player.seek((percentage * totaltime) + start);\n                player.play();\n                setTimeout(() => {\n                    // Remove the position.\n                    $('#position').remove();\n                    $loader.fadeOut(300);\n                }, 300);\n            });\n\n            // Handle video control events:: play\n            $(document).on('click', '#start-screen #play', async function(e) {\n                e.preventDefault();\n                $('#start-screen').fadeOut(300);\n                $(this).addClass('d-none');\n                $videoNav.removeClass('d-none');\n                player.play();\n            });\n\n            // Handle video control events:: restart\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#message').remove();\n                viewedAnno = [];\n                lastrun = null;\n                $loader.fadeIn(300);\n                await player.seek(start);\n                $videoNav.find(\"#progress\").css('width', '0%');\n                $videoNav.find(\"#seekhead\").css('left', '0%');\n                $('#end-screen').fadeOut(300);\n                $(this).addClass('d-none');\n                $videoNav.removeClass('d-none');\n                player.play();\n                $loader.fadeOut(300);\n            });\n\n            // Handle video control events:: pause/resume when user click on the video\n            $(document).on('click', '#video-wrapper .video-block', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                const playing = await player.isPlaying();\n                if (playing) {\n                    await player.pause();\n                } else {\n                    player.play();\n                }\n            });\n\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $(this).tooltip('hide');\n                // Pause or resume the video.\n                const playing = await player.isPlaying();\n                if (playing) {\n                    await player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', 'li.anno', async function(e) {\n                e.preventDefault();\n                const id = $(this).data('id');\n                $(`li.annotation[data-id=${id}]`).trigger('click');\n                if ($(this).closest('#chapter-container-left').length > 0) {\n                    $('#chaptertoggle .btn').trigger('click');\n                }\n            });\n\n            // Handle video control events:: mute/unmute\n            $(document).on('click', '#mute', function(e) {\n                e.preventDefault();\n                $(this).tooltip('hide');\n                $(this).toggleClass('active');\n                if ($(this).hasClass('active')) {\n                    player.mute();\n                    $(this).attr('data-original-title', M.util.get_string('unmute', 'mod_interactivevideo'));\n                } else {\n                    player.unMute();\n                    $(this).attr('data-original-title', M.util.get_string('mute', 'mod_interactivevideo'));\n                }\n                $(this).find('i').toggleClass('bi-volume-mute bi-volume-up');\n                $(this).tooltip('show');\n            });\n\n            // Handle video control events:: playrate change\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            // Handle video control:: Quality change\n            $(\"#changequality\").on('shown.bs.dropdown', async function() {\n                let quality = await player.getQualities();\n                $('#qualitieslist').empty();\n                let currentQuality = quality.currentQuality;\n                if (currentQuality === null) {\n                    currentQuality = $(this).data('current');\n                }\n                let qualities = quality.qualities;\n                let qualitiesLabel = quality.qualitiesLabel;\n                qualities.forEach((q, i) => {\n                    $('#qualitieslist').append(`<a class=\"dropdown-item text-white changequality\" data-quality=\"${q}\"\n                         href=\"#\"><i class=\"bi ${q == currentQuality ? 'bi-check' : ''} fa-fw ml-n3\"></i>${qualitiesLabel[i]}</a>`);\n                });\n                $(this).find('[data-toggle=dropdown]').dropdown('update');\n            });\n\n            $(document).on('click', '.changequality', function(e) {\n                e.preventDefault();\n                const quality = $(this).data('quality');\n                player.setQuality(quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                // Remove the tooltip.\n                $('.tooltip').remove();\n                onPaused();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n                $loader.fadeOut(300);\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('iv:playerError', function() {\n                Toast.add(M.util.get_string('thereisanissueloadingvideo', 'mod_interactivevideo'), {\n                    type: 'danger'\n                });\n                $('#spinner').remove();\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerQualityChange', function(e) {\n                $('#changequality').attr('data-current', e.originalEvent.detail.quality);\n                $('.changequality').find('i').removeClass('bi-check');\n                $(`.changequality[data-quality=\"${e.originalEvent.detail.quality}\"]`).find('i').addClass('bi-check');\n            });\n\n            let firstPlay = false;\n            $(document).on('annotationitemsrendered', function() {\n                $('#wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    container: '#wrapper',\n                    boundary: 'window',\n                });\n                if (displayoptions.disableinteractionclickuntilcompleted == 1) {\n                    $interactionNav.find('li:not(.completed)').addClass('no-click');\n                }\n                if (displayoptions.disableinteractionclick == 1) {\n                    $interactionNav.find('li').addClass('no-click');\n                }\n                if (displayoptions.preventseeking == 1) {\n                    $interactionNav.find('li').addClass('no-click');\n                    $videoNav.addClass('no-click');\n                }\n                if ($interactionNav.find('li').length > 0) {\n                    $('#taskinfo').removeClass('border-0');\n                }\n                // Autoplay if enabled.\n                if (displayoptions.autoplay == 1 && !firstPlay && !$('body').hasClass('preview-mode')) {\n                    $('#play').trigger('click');\n                    firstPlay = true;\n                    // Make sure to unmute.\n                    player.unMute();\n                }\n            });\n\n            if ($(\"body\").hasClass('mobiletheme')) {\n                $('[data-toggle=\"tooltip\"]').on('click', function() {\n                    const $this = $(this);\n                    setTimeout(function() {\n                        $this.tooltip('hide');\n                    }, 2000); // Hide after 3 seconds\n                });\n            }\n\n            if ($(\"body\").hasClass('mobiletheme')) {\n                $('[data-toggle=\"tooltip\"]').on('click', function() {\n                    const $this = $(this);\n                    setTimeout(function() {\n                        $this.tooltip('hide');\n                    }, 2000); // Hide after 3 seconds\n                });\n            }\n        }\n    };\n});"],"names":["define","$","eventDispatcher","Toast","dispatchEvent","ctRenderer","annotations","totaltime","activityType","contentTypes","displayoptions","releventAnnotations","completionid","player","lastrun","viewedAnno","$videoNav","$interactionNav","$loader","renderAnnotationItems","async","annos","start","window","IVANNO","actualduration","skipsegments","filter","x","type","length","forEach","Number","title","timestamp","completableAnno","hascompletion","actualAnnotationCounts","xp","map","reduce","a","b","completedAnnos","completed","xpEarned","earned","empty","append","seconds","hours","Math","floor","minutes","remainingSeconds","string","formatTime","ceil","preventseeking","addClass","hidemainvideocontrols","hideinteractions","renderer","renderItemOnVideoNavigation","chapteritems","sort","each","cstart","this","data","cend","find","id","JSON","parse","prop","icon","formattedtitle","init","url","cmid","interaction","course","userid","end","completionpercentage","gradeiteminstance","grademax","vtype","preventskip","moment","doptions","token","extendedcompletion","isNaN","playerReady","localStorage","getItem","removeClass","convertSecondsToHMS","h","m","s","replaceProgressBars","percentage","css","getAnnotations","callback","annnoitems","ajax","M","cfg","wwwroot","method","dataType","action","sesskey","contextid","courseContextId","userprogress","uid","previewmode","hasClass","getContentTypes","when","done","progress","ct","completiondetails","annotation","some","y","name","filterAnnotations","completedItems","completeditems","contentTypeMap","Map","completionitem","advanced","stringify","get","indexOf","e","rerunnable","replaybehavior","processAnnotations","shouldAdd","skipsegment","push","getRelevantAnnotations","unshift","util","get_string","hide","prependDummyChapter","chapterContentType","includes","remove","Promise","all","contentType","resolve","require","amdmodule","Type","error","initializeContentTypeRenderers","toggleClass","runInteraction","Date","getTime","Set","modal","not","fadeOut","theAnnotations","theAnnotation","pause","seek","add","shareMoment","urlParams","URLSearchParams","location","search","time","play","delete","newurl","protocol","host","pathname","toString","history","replaceState","onReady","IVPLAYER","support","playbackrate","quality","lastwatched","duration","getDuration","min","text","ratio","usefixedratio","aspectratio","gap","focus","draggable","event","ui","$position","relX","position","left","width","formattedTime","setTimeout","vwrapper","document","querySelector","ResizeObserver","clientWidth","observe","scrollIntoView","behavior","block","inline","onPaused","attr","setItem","getCurrentTime","onEnded","fadeIn","onSeek","t","visualized","onPlaying","audio","visualizer","trigger","intervalFunction","isPlaying","isEnded","unMute","toFixed","percentagePlayed","frequency","animate","requestAnimationFrame","VideoPlayer","useoriginalvideocontrols","autoplay","$toast","detach","on","originalEvent","detail","preventDefault","stopImmediatePropagation","closest","elem","getElementById","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","webkitEnterFullscreen","fullscreenElement","tooltip","container","boundary","pauseonblur","visibilityState","$this","href","shareurl","round","navigator","clipboard","writeText","parentOffset","offset","pageX","preceedingAnno","mute","rate","setRate","getQualities","currentQuality","qualities","qualitiesLabel","q","i","dropdown","setQuality","firstPlay","disableinteractionclickuntilcompleted","disableinteractionclick"],"mappings":"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"}