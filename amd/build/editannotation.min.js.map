{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    'mod_interactivevideo/libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}) {\n    let ctRenderer = {};\n    let player;\n    let totaltime;\n    let currentTime;\n    let playerReady = false;\n    let $loader = $('#background-loading');\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async(x) => {\n            const render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        const percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n    };\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         * @param {Object} displayoptions display options\n         * @param {Number} userid user id\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid, type = 'yt', displayoptions, userid) {\n\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            let annotations = []; // Annotations.\n            let contentTypes; // Content types.\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                if (rounded) {\n                    s = Math.round(s);\n                }\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            let activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                renderVideoNav(annotations, start, totaltime);\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    let listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                let xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    const activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_all_contenttypes',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(async function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the enabled content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        let count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule);\n                                count++;\n                                ctRenderer[x.name].init();\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        let prop = contentTypes.find(y => y.name === x.type);\n                        // Clean up the prop by removing author, authorlink, description;\n                        delete prop.author;\n                        delete prop.authorlink;\n                        delete prop.description;\n                        x.prop = JSON.stringify(prop);\n                        return x;\n                    });\n                    ctRenderer = await getRenderers;\n                    renderAnnotationItems(annotations);\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                const regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])(\\.\\d{2})?$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start, false, false));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                const parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        const message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true, false),\n                            \"end\": convertSecondsToHMS(end, true, false)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true, false),\n                            \"end\": convertSecondsToHMS(skip.title, true, false)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start, false, false));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').not('.sticky').remove();\n                $('#end-screen').remove();\n                player.pause();\n                const activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Correct the start and end time.\n             * @param {Number} duration Total duration of the video.\n             * @returns {Object} Object containing start and end time.\n             */\n            const updateTime = async(duration) => {\n                let toUpdatetime = false;\n                if (!end || end == 0 || end > duration) {\n                    toUpdatetime = true;\n                }\n                end = !end ? duration : Math.min(end, duration);\n                if (!start || start >= duration || start < 0 || start >= end) {\n                    toUpdatetime = true;\n                }\n                start = start > end ? 0 : start;\n                if (toUpdatetime) {\n                await $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'update_videotime',\n                            sesskey: M.cfg.sesskey,\n                            id: interaction,\n                            start: start,\n                            end: end,\n                            contextid: M.cfg.contextid,\n                        }\n                    });\n                }\n                return {start, end};\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async() => {\n                if (player.type != 'vimeo' && player.type != 'html5video') { // Vimeo/HTML5 does not pause/play on click.\n                    $('#video-block').addClass('no-pointer');\n                }\n\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n\n                let t = player.totaltime;\n\n                ({start, end} = await updateTime(t));\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video.\n                let ratio = 16 / 9;\n                if (!displayoptions.usefixedratio || displayoptions.usefixedratio == 0) {\n                    ratio = player.aspectratio;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n                $('#annotation-canvas').removeClass('d-none');\n\n                // Handle timeline block.\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + player.posterImage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers.\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center\" style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger border-0 rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                const currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                const percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            let onPlayingInterval;\n            let visualized = false;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = () => {\n                $('#message, #end-screen').not('.sticky').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');\n                if (player.audio && !visualized) {\n                    player.visualizer();\n                    visualized = true;\n                }\n                const intervalFunction = async function() {\n                    let thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        cancelAnimationFrame(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end) {\n                        player.stop(end);\n                        cancelAnimationFrame(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment.\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar.\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.type == 'yt' || player.type == 'wistia') {\n                    const animate = async() => {\n                        intervalFunction();\n                        onPlayingInterval = requestAnimationFrame(animate);\n                    };\n                    onPlayingInterval = requestAnimationFrame(animate);\n                } else {\n                    intervalFunction();\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                cancelAnimationFrame(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                player = new VideoPlayer(\n                    url,\n                    start,\n                    end,\n                    {\n                        'customStart': true,\n                    }\n                );\n                window.IVPLAYER = player;\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            // Post annotation update (add, edit, clone).\n            $(document).on('annotationupdated', function(e) {\n                const action = e.originalEvent.detail.action;\n                if (action == 'import') {\n                    annotations = e.originalEvent.detail.annotations;\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactionimported', 'mod_interactivevideo'), 'success');\n                    return;\n                }\n                let updated = e.originalEvent.detail.annotation;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled').addClass('pulse');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled').removeClass('pulse');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                const annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                // Check if the target item is a link.\n                if ($(e.target).is('a')) {\n                    return;\n                }\n\n                const ctype = $(this).data('type');\n                player.pause();\n                let timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Number(timestamp.toFixed(2));\n                const contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string(\n                        'thisinteractionalreadyexists', 'mod_interactivevideo', contenttype.title), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', async function(e) {\n                e.preventDefault();\n                const id = $(this).closest('.annotation').data('id');\n                const contenttype = $(this).closest('.annotation').data('type');\n                const time = await player.getCurrentTime();\n                ctRenderer[contenttype].cloneAnnotation(id, time);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const annotation = annotations.find(annotation => annotation.id == id);\n                try {\n                    Notification.deleteCancelPromise(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                    ).then(() => {\n                        return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    Notification.saveCancel(\n                        M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                        M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            return ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                        }\n                    );\n                }\n\n\n            });\n\n            // Implement view annotation.\n            $(document).on('click', 'tr.annotation .title', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar.\n                const percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                let currentTime = await player.getCurrentTime();\n                if (currentTime != timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                const id = $(this).closest('.annotation').data('id');\n                const theAnnotation = annotations.find(annotation => annotation.id == id);\n                setTimeout(() => {\n                    runInteraction(theAnnotation);\n                }, 500);\n            });\n\n            // Implement go to timestamp.\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                const timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = (percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('click', '#video-block', function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#playpause').trigger('click');\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                // Trigger click on the edit button.\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit.\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                const fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                const initialValue = $(this).data('initial-value');\n                const val = $(this).val();\n                const fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value.\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    return;\n                }\n                // If enter key is pressed, save the value.\n                if (e.key == 'Enter') {\n                    let seconds;\n                    if (fld == 'timestamp') {\n                        const parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        const timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    const id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                const initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n            });\n            // End quick edit.\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                const id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                const id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                const parts = $(this).val().split(':');\n                const seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                const timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                $('#timeline-wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Destroy draggable and resizable if already initialized.\n                try {\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').draggable('destroy');\n                    $('#timeline-items .annotation, #video-timeline-wrapper .skipsegment').resizable('destroy');\n                } catch (e) {\n                    // Do nothing.\n                }\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'start': function() {\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        $(this).css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(timestamp);\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(timestamp);\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = timestamp;\n                        targetAnnotation.title = timestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(timestamp);\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == timestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == timestamp) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = timestamp;\n                        } else {\n                            targetAnnotation.title = timestamp;\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(timestamp);\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('contextmenu').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').off('click').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    player.pause();\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').off('click').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': function(event, ui) {\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                    player.pause();\n\n                },\n                'stop': function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    $('#scrollbar, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': function(event, ui) {\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, false));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                    player.pause();\n                },\n                'stop': function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100dvh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100dvh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                let $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                const percentage = relX / $(this).width();\n                const time = percentage * (totaltime) + start;\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                const percentage = relX / $(this).width();\n                let time = percentage * (totaltime) + start;\n                if (time < start) {\n                    time = start;\n                }\n                const formattedTime = convertSecondsToHMS(time, true, false);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const id = $(this).data('id');\n                const annotation = annotations.find(x => x.id == id);\n                $loader.fadeIn(300);\n                if (await player.getCurrentTime() != annotation.timestamp) {\n                    await player.seek(annotation.timestamp);\n                }\n                $loader.fadeOut(300);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                $loader.fadeIn(300);\n                await player.seek((percentage * totaltime) + start);\n                player.pause();\n                $loader.fadeOut(300);\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                const currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                const newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quick_edit_field',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            const updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quick_edit_field',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                const updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n\n            // Implement import content\n            $(document).on('click', '#importcontent', function(e) {\n                e.preventDefault();\n                const importmodal = `<div class=\"modal fade\" id=\"importmodal\" tabindex=\"-1\" aria-labelledby=\"importmodalLabel\"\n                 aria-hidden=\"true\">\n                    <div class=\"modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\" id=\"importmodalLabel\">\n                                ${M.util.get_string('importcontent', 'mod_interactivevideo')}</h5>\n                                <button type=\"button\" class=\"btn p-0 border-0\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary border-0\" data-dismiss=\"modal\">\n                                ${M.util.get_string('cancel', 'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary border-0\" id=\"importcontentbutton\">\n                                ${M.util.get_string('import', 'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(importmodal);\n                $('#importmodal').modal('show');\n\n                $('#importmodal').on('hidden.bs.modal', function() {\n                    $('#importmodal').remove();\n                });\n\n                $('#importmodal').off('shown.bs.modal').on('shown.bs.modal', function() {\n                    // Make the modal draggable.\n                    $('#importmodal .modal-dialog').draggable({\n                        handle: \".modal-header\"\n                    });\n                    // Render the course select dropdown.\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'get_taught_courses',\n                            sesskey: M.cfg.sesskey,\n                            contextid: M.cfg.contextid,\n                            userid: userid\n                        },\n                        success: function(data) {\n                            let courses = JSON.parse(data);\n                            // Sort courses by name.\n                            courses.sort((a, b) => a.fullname.localeCompare(b.fullname));\n                            let courseSelect = `<select class=\"custom-select w-100\" id=\"importcourse\">`;\n                            courses.forEach(course => {\n                                courseSelect += `<option value=\"${course.id}\">${course.fullname} (${course.shortname})</option>`;\n                            });\n                            courseSelect += `</select>`;\n                            let selectfield = `<div class=\"form-group selectcourse\">\n                            <label class=\"font-weight-bold\" for=\"importcourse\">\n                            ${M.util.get_string('selectcourse', 'mod_interactivevideo')}</label>\n                            ${courseSelect}</div>`;\n                            $('#importmodal .modal-body').append(selectfield);\n                            // Default current course.\n                            $('#importmodal #importcourse').val(course);\n                            $('#importmodal #importcourse').trigger('change');\n                        }\n                    });\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcourse', function() {\n                $(`#importmodal .selectcm, #importmodal .select-interaction`).remove();\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_cm_by_courseid',\n                        sesskey: M.cfg.sesskey,\n                        contextid: M.cfg.contextid,\n                        courseid: $(this).val()\n                    },\n                    success: function(data) {\n                        let cms = JSON.parse(data);\n                        cms.sort((a, b) => a.name.localeCompare(b.name));\n                        let cmSelect = `<select class=\"custom-select w-100\" id=\"importcm\">\n                        <option value=\"\">${M.util.get_string('select', 'mod_interactivevideo')}</option>`;\n                        cms.forEach(cm => {\n                            cmSelect += `<option value=\"${cm.id}\" ${cm.id == interaction ? 'disabled' : ''}>${cm.name}</option>`;\n                        });\n                        cmSelect += `</select>`;\n                        let selectfield = `<div class=\"form-group selectcm\">\n                        <label for=\"importcm\" class=\"font-weight-bold\">\n                        ${M.util.get_string('selectactivity', 'mod_interactivevideo')}</label>\n                        ${cmSelect}</div>`;\n                        $(`#importmodal .selectcourse`).after(selectfield);\n                    }\n                });\n            });\n\n            $(document).on('change', '#importmodal #importcm', async function() {\n                $(`#importmodal .select-interaction`).remove();\n                $(`#importmodal #importcm`).after(`<div class=\"select-interaction py-3\">\n                    <iframe src=\"${M.cfg.wwwroot + '/mod/interactivevideo/view.php?i=' + $(this).val()}&embed=1&preview=1\"\n                    frameborder=0 width=\"100%\" height=\"500\" class=\"loader\"></iframe></div>`);\n                let interactions = await $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: $(this).val(),\n                        contextid: M.cfg.contextid,\n                        coursecontextid: M.cfg.courseContextId\n                    }\n                });\n                interactions = JSON.parse(interactions);\n                interactions = interactions.filter(x => x.type != 'skipsegment');\n                if (interactions.length == 0) {\n                    $(`#importmodal .select-interaction`).append(`<div class=\"alert alert-warning mt-3\">\n                        ${M.util.get_string('nocontent', 'mod_interactivevideo')}</div>`);\n                    return;\n                }\n\n                $(`#importmodal .select-interaction`).append(`<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\n                     no-pointer\">\n                     <div class=\"input-group-prepend border-0 invisible\">\n                            <label class=\"input-group-text bg-white\">\n                                <input type=\"checkbox\"/>\n                                <i class=\"bi bi-plus ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\"\n                 value=\"${M.util.get_string('title', 'mod_interactivevideo')}\">\n                <input type=\"text\" class=\"form-control border-0 font-weight-bold\" style=\"max-width: 50px;\"\n                value=\"XP\">\n                <input type=\"text\" style=\"max-width: 150px;\" value=\"${M.util.get_string('timestamp', 'mod_interactivevideo')}\"\n                 class=\"form-control border-0 font-weight-bold\"></div>`);\n\n                interactions = interactions.map(int => {\n                    // Get the icon and check if the interaction is out of range (start, end time);\n                    const ctype = contentTypes.find(y => y.name === int.type);\n                    int.prop = JSON.stringify(ctype);\n                    int.icon = ctype.icon;\n                    if ((int.timestamp > end || int.timestamp < start) && int.timestamp > 0) {\n                        int.outside = true;\n                    } else {\n                        int.outside = false;\n                    }\n                    // Check if the interaction can be added (e.g. annotation content type can only be added once per activity);\n                    if (!ctype.allowmultiple && annotations.find(x => x.type == int.type)) {\n                        int.disabled = true;\n                    }\n                    return int;\n                });\n\n                interactions.sort((a, b) => a.timestamp - b.timestamp);\n                interactions.forEach(int => {\n                    const inputgroup = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\"\n                     data-id=\"${int.id}\">\n                        <div class=\"input-group-prepend\">\n                            <label class=\"input-group-text\">\n                                <input type=\"checkbox\" ${int.disabled ? 'disabled' : ''}/>\n                                <i class=\"${int.icon} ml-3 fs-unset\"></i>\n                            </label>\n                        </div>\n                <input type=\"text\" class=\"form-control name\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 value=\"${int.title}\">\n                <input type=\"text\" style=\"max-width: 50px;\" ${int.timestamp < 0 || int.hascompletion == 0 ? 'readonly' : ''}\n                 class=\"form-control xp\" value=\"${int.xp}\">\n                <input type=\"text\" placeholder=\"00:00:00\" style=\"max-width: 150px;\" ${int.timestamp < 0 ? 'readonly' : ''}\n                 class=\"form-control timestamp-input ${int.outside ? 'is-invalid' : ''}\"\n                value=\"${int.timestamp < 0 ? int.timestamp :\n                            convertSecondsToHMS(int.timestamp, false, false)}\"></div>`;\n                    $(`#importmodal .select-interaction`).append(inputgroup);\n                });\n\n                $(document).off('click', '#importmodal #importcontentbutton').on('click', '#importmodal #importcontentbutton',\n                    async function(e) {\n                        e.preventDefault();\n                        let $selected = $(`#importmodal .select-interaction input[type=\"checkbox\"]:checked`);\n                        let selectedInt = [];\n                        $selected.each(function() {\n                            let $row = $(this).closest('.input-group');\n                            const name = $row.find('.name').val();\n                            if (name.trim() == '') {\n                                return;\n                            }\n                            let timestamp = $row.find('.timestamp-input').val();\n                            if (timestamp == '') {\n                                return;\n                            }\n\n                            if (Number(timestamp) < 0) {\n                                timestamp = Number(timestamp);\n                            } else {\n                                const parts = timestamp.split(':');\n                                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                                if (annotations.find(x => x.timestamp == timestamp)) {\n                                    return;\n                                }\n                            }\n                            let id = $row.data('id');\n                            let int = interactions.find(x => x.id == id);\n                            int.title = name;\n                            int.timestamp = timestamp;\n                            let xp = Number($row.find('.xp').val());\n                            if (isNaN(xp) || xp == '') {\n                                xp = 0;\n                            }\n                            int.xp = xp;\n                            selectedInt.push(int);\n                        });\n                        if (selectedInt.length == 0) {\n                            addNotification(M.util.get_string('selectinteraction', 'mod_interactivevideo'), 'danger');\n                            return;\n                        } else {\n                            let interactions = await $.ajax({\n                                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                                method: \"POST\",\n                                dataType: \"text\",\n                                data: {\n                                    action: 'import_annotations',\n                                    sesskey: M.cfg.sesskey,\n                                    contextid: M.cfg.contextid,\n                                    annotations: JSON.stringify(selectedInt),\n                                    tocourse: M.cfg.courseId,\n                                    fromcourse: $('#importcourse').val(),\n                                    tocm: interaction,\n                                    fromcm: $('#importcm').val(),\n                                    module: coursemodule\n                                }\n                            });\n                            interactions = JSON.parse(interactions);\n\n                            // Dismiss modal.\n                            $('#importmodal').modal('hide');\n\n                            // Add the imported annotations to the current annotations.\n                            annotations = annotations.concat(interactions);\n                            dispatchEvent('annotationupdated', {\n                                annotations: annotations,\n                                action: 'import'\n                            });\n\n                            // Get interaction that allowmultiple false and init each one.\n                            interactions.forEach(int => {\n                                if (!int.allowmultiple) {\n                                    ctRenderer[int.type].init();\n                                }\n                            });\n                        }\n                    });\n            });\n\n            // Implement content type filter.\n            $(document).on('keyup', '#contentmodal #contentsearch', function() {\n                let search = $(this).val().toLowerCase();\n\n                $('#addcontentdropdown .dropdown-item').removeClass('d-none').addClass('d-flex');\n\n                if (search == '') {\n                    return;\n                }\n\n                $('#contentmodal #addcontentdropdown .dropdown-item').each(function() {\n                    let text = $(this).find('.contenttype-title').text().toLowerCase();\n                    if (text.includes(search)) {\n                        $(this).addClass('d-flex').removeClass('d-none');\n                    } else {\n                        $(this).addClass('d-none').removeClass('d-flex');\n                    }\n                });\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","player","totaltime","currentTime","dispatchEvent","ctRenderer","playerReady","$loader","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","displayoptions","userid","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","Math","round","hours","floor","minutes","seconds","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","html","M","util","get_string","addClass","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","prop","author","authorlink","description","stringify","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","updateTime","toUpdatetime","duration","min","onReady","support","playbackrate","t","ratio","usefixedratio","aspectratio","posterImage","relWidth","width","startPercentage","newStart","append","i","marker","onEnded","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","visualized","onPlaying","audio","visualizer","intervalFunction","thisTime","isPlaying","isEnded","cancelAnimationFrame","seek","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","animate","requestAnimationFrame","onPause","VideoPlayer","IVPLAYER","on","e","detail","originalEvent","updated","push","status","removeAttr","attr","target","is","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","preventDefault","closest","editAnnotation","cloneAnnotation","deleteCancelPromise","then","deleteAnnotation","catch","saveCancel","theAnnotation","play","stopImmediatePropagation","offsetX","trigger","hide","siblings","initialValue","key","show","hasClass","field","value","success","appendTimestampMarker","formattedTime","targetAnnotation","draggable","resizable","event","ui","position","skipduration","abs","originalPosition","originalSize","size","direction","off","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","fadeIn","fadeOut","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","timelineWrapper","resizeObserver","ResizeObserver","observe","importmodal","handle","courses","fullname","localeCompare","courseSelect","shortname","selectfield","courseid","cms","cmSelect","cm","after","interactions","int","icon","outside","disabled","inputgroup","hascompletion","$selected","selectedInt","each","$row","trim","tocourse","courseId","fromcourse","tocm","fromcm","module","concat","search","toLowerCase","includes"],"mappings":"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"}