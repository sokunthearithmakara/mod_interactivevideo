{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    'mod_interactivevideo/libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}) {\n    var ctRenderer = new Object();\n    var player;\n    var totaltime;\n    var currentTime;\n    var playerReady = false;\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').css('width', percentage + '%');\n        $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async (x) => {\n            var render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        var percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n\n    };\n\n\n    return {\n        /**\n         * Initialize function on page loads.\n         * @param {String} url video url\n         * @param {Number} coursemodule cm id\n         * @param {Number} interaction cm instance\n         * @param {Number} course course id\n         * @param {Number} start video start time\n         * @param {Number} end video end time\n         * @param {Number} coursecontextid course context id\n         * @param {String} type video type\n         */\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid, type = 'yt') {\n\n            /**\n             * Util function to display notification\n             * @param {String} msg message text\n             * @param {String} type message type\n             */\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            var annotations = []; // Annotations\n            var contentTypes; // Content types\n\n            /**\n             * Convert seconds to HH:MM:SS format\n             * @param {Number} s second\n             * @param {Boolean} dynamic if true, only show minutes and seconds if less than one hour\n             * @param {Boolean} rounded if true, second is rounded\n             * @returns formatted timestamp\n             */\n            const convertSecondsToHMS = (s, dynamic = false, rounded = true) => {\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - hours * 3600) / 60);\n                let seconds = s - hours * 3600 - minutes * 60;\n                if (rounded && seconds > 59.5) {\n                    seconds = 0;\n                    minutes++;\n                    if (minutes > 59) {\n                        minutes = 0;\n                        hours++;\n                    }\n                }\n                if (minutes < 10) {\n                    minutes = '0' + minutes;\n                }\n\n                if (rounded) {\n                    seconds = Math.round(seconds);\n                } else {\n                    seconds = parseFloat(seconds).toFixed(2);\n                }\n\n                if (seconds < 10) {\n                    seconds = '0' + seconds;\n                }\n\n                if (dynamic && hours == 0) {\n                    return minutes + ':' + seconds;\n                }\n\n                return (hours < 10 ? '0' + hours : hours) + ':' + minutes + ':' + seconds;\n            };\n\n            var activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n\n            /**\n             * Handle rendering of annotation items on the list\n             * @param {Array} annotations array of annotation objects\n             * @returns\n             */\n            const renderAnnotationItems = (annotations) => {\n                renderVideoNav(annotations, start, totaltime);\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    var listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                var xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    var activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            /**\n             * Get annotations from the server and execute the rendering function\n             * @returns\n             */\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.courseContextId,\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'getallcontenttypes',\n                        sesskey: M.cfg.sesskey,\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        var count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule);\n                                count++;\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                                ctRenderer[x.name].init();\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        x.prop = JSON.stringify(contentTypes.find(y => y.name === x.type));\n                        return x;\n                    });\n                    getRenderers.then(() => {\n                        renderAnnotationItems(annotations);\n                        return;\n                    }).catch(() => {\n                        // Do nothing.\n                    });\n                });\n            };\n\n            /**\n             * Validate given timestamp against format\n             * @param {String} timestamp formatted timestamp hh:mm:ss\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @returns\n             */\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                var regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            /**\n             * Validate timestamp against start and end time of the video, existing timestamp and skip segments\n             * @param {String} timestamp formatted timestamp\n             * @param {String} fld field selector\n             * @param {String} existing existing value\n             * @param {Number} seconds\n             * @param {Boolean} checkduration if true, check against start and end time\n             * @param {Boolean} checkexisting if true, check against existing annotations\n             * @param {Boolean} checkskipsegment if true, check against skip segments\n             * @returns\n             */\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                var parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        var message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true),\n                            \"end\": convertSecondsToHMS(end, true)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    const skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    var skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true),\n                            \"end\": convertSecondsToHMS(skip.title, true)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n            };\n\n            /**\n             * Run interaction\n             * @param {Object} annotation annotation object\n             */\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').remove();\n                $('#end-screen').remove();\n                player.pause();\n                var activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            /**\n             * Set of events to run after the video player is ready.\n             */\n            const onReady = async () => {\n                if (player.support.playbackrate == false) {\n                    $('#changerate').remove();\n                } else {\n                    $('#changerate').removeClass('d-none');\n                }\n                let t = await player.getDuration();\n                if (!end) {\n                    end = t;\n                } else {\n                    end = Math.min(end, t);\n                }\n\n                if (start > end) {\n                    start = 0;\n                }\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video\n                let ratio = await player.ratio();\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n\n                // Handle timeline block\n                $(\"#timeline-wrapper #video-timeline\").css({\n                    'background-image': 'url(' + player.posterImage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline-wrapper #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline-wrapper #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let startPercentage = 0;\n                let newStart = start;\n                if (start % 60 != 0) {\n                    startPercentage = (60 - (start % 60)) / totaltime * 100;\n                    newStart = start + (60 - (start % 60));\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 0%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                for (let i = newStart; i <= end; i += 60) {\n                    let percentage = ((i - newStart) / totaltime * 100) + startPercentage;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m).\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                         style=\"left: ${percentage}%;\"><div class=\"text-white minute-label\">${marker}</div></div>`);\n                }\n\n                if (end % 60 != 0) {\n                    $('#minute-markers, #minute-markers-bg').append(`<div class=\"minute-marker position-absolute\"\n                        style=\"left: 100%;\"><div class=\"text-white minute-label\"></div></div>`);\n                }\n                getAnnotations();\n            };\n\n            /**\n             * Run when video ended (i.e. arrives at 'end' time)\n             */\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"border position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar, #scrollhead-top').css('left', '100%');\n                // Focus on the restart button.\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation.\n                var currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n                    // Show tooltip for two seconds.\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            /**\n             * Execute when video is sought\n             * @param {Number} t seconds\n             * @returns\n             */\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                var percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar, #scrollhead-top').css('left', percentage + '%');\n                $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            var onPlayingInterval;\n            /**\n             * Excute when video plays (i.e. start or resume)\n             */\n            const onPlaying = () => {\n                $('#message, #end-screen').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');\n                var intervalFunction = async function() {\n                    var thisTime = await player.getCurrentTime();\n                    const isPlaying = await player.isPlaying();\n                    const isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        clearInterval(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end) {\n                        player.stop(end);\n                        clearInterval(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline-wrapper #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    let percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n\n                    $(\"#scrollbar, #scrollhead-top\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    const currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n\n                        // Show tooltip for two seconds\n                        // toggle the tooltip to show the title\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        // Hide the tooltip after 2 seconds\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // If current time is within the skipsegment, seek to the end of the segment\n                    let skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    let skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                        && Number(x.title) > Number(thisTime));\n                    if (skip) {\n                        await player.seek(Number(skip.title));\n                        // Replace the progress bar\n                        percentage = (skip.title - start) / totaltime * 100;\n                        replaceProgressBars(percentage);\n                    }\n                };\n                if (player.type == 'yt' || player.type == 'wistia') {\n                    const update = async () => {\n                        await intervalFunction();\n                        if (await player.isPlaying() && !await player.isEnded()) {\n                            requestAnimationFrame(update);\n                        }\n                    };\n                    requestAnimationFrame(update);\n                } else {\n                    intervalFunction();\n                }\n            };\n\n            /**\n             * Excute when video is paused.\n             */\n            const onPause = () => {\n                clearInterval(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                player = new VideoPlayer(\n                    url,\n                    start,\n                    end,\n                    false,\n                    true,\n                );\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            // Post annotation update (add, edit, clone).\n            $(document).on('annotationupdated', function(e) {\n                var updated = e.originalEvent.detail.annotation;\n                var action = e.originalEvent.detail.action;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    if (action == 'clone') {\n                        setTimeout(function() {\n                            $(`tr[data-id=\"${updated.id}\"]`).find(`[data-editable=\"timestamp\"]`).trigger('contextmenu');\n                        }, 100);\n                    }\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline-wrapper #savedraft').removeAttr('disabled');\n                } else {\n                    $('#timeline-wrapper #savedraft').attr('disabled', 'disabled');\n                }\n            });\n\n            // Re-render annotation list and timeline after an annotation is deleted.\n            $(document).on('annotationdeleted', function(e) {\n                var annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown .dropdown-item', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                let ctype = $(this).data('type');\n                player.pause();\n                var timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Math.floor(timestamp);\n                var contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr.annotation .edit', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).closest('.annotation').data('timestamp');\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                var id = $(this).closest('.annotation').data('id');\n                var contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr.annotation .copy', function(e) {\n                e.preventDefault();\n                var id = $(this).closest('.annotation').data('id');\n                var contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].cloneAnnotation(id);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', 'tr.annotation .delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                var id = $(this).closest('.annotation').data('id');\n                var annotation = annotations.find(annotation => annotation.id == id);\n                Notification.saveCancel(\n                    M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                    M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                    M.util.get_string('delete', 'mod_interactivevideo'),\n                    function() {\n                        ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    },\n                    null\n                );\n\n            });\n\n            // Implement view annotation\n            $(document).on('click', 'tr.annotation  .title', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).closest('.annotation').data('timestamp');\n                // Update the progress bar\n                var percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n                await player.seek(timestamp, true);\n                var id = $(this).closest('.annotation').data('id');\n\n                var theAnnotation = annotations.find(annotation => annotation.id == id);\n\n                runInteraction(theAnnotation);\n            });\n\n            // Implement go to timestamp\n            $(document).on('click', 'tr.annotation .timestamp', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            // Right click on the video nav or video timeline to add a new interaction.\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = Math.floor(percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Right click on the scrollbar to add a new interaction.\n            $(document).on('contextmenu', '#scrollbar, #scrollhead-top', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            // Click the play/pause button on the timeline region to pause/play video.\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            // Right click on the annotation indicator to edit the annotation.\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var id = $(this).data('id');\n                // Trigger click on the edit button\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                var fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                var initialValue = $(this).data('initial-value');\n                var val = $(this).val();\n                var fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    return;\n                }\n                // If enter key is pressed, save the value\n                if (e.key == 'Enter') {\n                    var seconds;\n                    if (fld == 'timestamp') {\n                        var parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        var timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            window.console.log('wtf');\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    var id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quickeditfield',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            var updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                var initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n            });\n            // End quick edit\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            // Display tooltip on anntation indicator when annotation on the list is hovered.\n            $(document).on('mouseover', 'tr.annotation', function() {\n                var id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            // Remove tooltip when annotation on the list is not hovered.\n            $(document).on('mouseout', 'tr.annotation', function() {\n                var id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            // Highlight annotation on the list when annotation indicator is hovered.\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                var id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            // Remove highlight when annotation indicator is not hovered.\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                var id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            // Validate timestamp when the timestamp field is changed.\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                var parts = $(this).val().split(':');\n                var seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                var timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            const appendTimestampMarker = (seconds, rounded) => {\n                const formattedTime = convertSecondsToHMS(seconds, true, rounded);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                let secondLength = $('#timeline-items').width() / totaltime;\n                $('#timeline-wrapper [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Tested\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    'axis': 'x',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        window.console.log(ui.position.left);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            ui.position.left = -5;\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            ui.position.left = $('#timeline-items').width() - 5;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        $(this).css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const roundedTimestamp = Math.round(timestamp);\n                        const existingAnnotation = annotations.find(x => x.timestamp == roundedTimestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == Math.round(timestamp)) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = Math.round(timestamp);\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(Math.round(timestamp)); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        const roundedTimestamp = Math.round(timestamp);\n                        await player.seek(roundedTimestamp);\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(roundedTimestamp, true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const roundedTimestamp = Math.round(timestamp);\n                        const existingAnnotation = annotations.find(x => x.timestamp == roundedTimestamp && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == roundedTimestamp) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = roundedTimestamp;\n                        targetAnnotation.title = roundedTimestamp + skipduration;\n                        if (targetAnnotation.title > end) {\n                            targetAnnotation.title = end;\n                        }\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(roundedTimestamp); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestampMarker($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#vseek #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#vseek #position-marker').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == Math.round(timestamp) && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == Math.round(timestamp)) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = Math.round(timestamp);\n                        } else {\n                            targetAnnotation.title = Math.round(timestamp);\n                            if (targetAnnotation.title > end) {\n                                targetAnnotation.title = end;\n                            }\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#scrollbar, #position-marker, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    player.pause();\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': function(event, ui) {\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    if ($(this).hasClass('snap')) {\n                        appendTimestampMarker(Math.round(((ui.position.left) /\n                            $('#timeline-items').width()) * totaltime + start), true);\n                    } else {\n                        appendTimestampMarker(((ui.position.left) / $('#timeline-items').width()) * totaltime + start, false);\n                    }\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if ($(this).hasClass('snap')) {\n                        timestamp = Math.round(timestamp);\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, $(this).hasClass('snap')));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                    player.pause();\n\n                },\n                'stop': function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    if ($(this).hasClass('snap')) {\n                        timestamp = Math.round(timestamp);\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                }\n            });\n\n            $('#scrollhead-top').draggable({\n                'axis': 'x',\n                'cursor': 'col-resize',\n                'start': function(event, ui) {\n                    $('#vseek').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    if ($('#scrollbar').hasClass('snap')) {\n                        appendTimestampMarker(Math.round(((ui.position.left) / $('#vseek').width()) * totaltime + start), true);\n                    } else {\n                        appendTimestampMarker(((ui.position.left) / $('#vseek').width()) * totaltime + start, false);\n                    }\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    let percentage = (timestamp - start) / totaltime * 100;\n                    if ($('#scrollbar').hasClass('snap')) {\n                        timestamp = Math.round(timestamp);\n                    }\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    $('#vseek #position').text(convertSecondsToHMS(timestamp, true, $('#scrollbar').hasClass('snap')));\n                    $('#vseek #position-marker, #scrollhead-top, #scrollbar')\n                        .css('left', percentage + '%');\n                    await player.seek(timestamp);\n                    player.pause();\n                },\n                'stop': function(event, ui) {\n                    $('#vseek #position-marker').remove();\n                    setTimeout(function() {\n                        $('#vseek').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#vseek').width()) * totaltime + start;\n                    if (timestamp < start) {\n                        timestamp = start;\n                    }\n                    if ($('#scrollbar').hasClass('snap')) {\n                        timestamp = Math.round(timestamp);\n                    }\n                    $('#scrollbar, #scrollhead-top').css('left', (timestamp - start) / totaltime * 100 + '%');\n                }\n            });\n\n            // Resize timeline.\n            $('#timeline-wrapper').resizable({\n                'handles': 'n',\n                'minHeight': 125,\n                'maxHeight': 500,\n                'start': function() {\n                    $('#top-region, #timeline-wrapper').addClass('no-pointer-events');\n                },\n                'resize': function(event, ui) {\n                    $('#top-region').css('height', `calc(100vh - ${ui.size.height + 70}px)`);\n                },\n                'stop': function() {\n                    $('#top-region, #timeline-wrapper').removeClass('no-pointer-events');\n                    localStorage.setItem('timeline-height', $('#timeline-wrapper').height());\n                }\n            });\n\n            // Resize player region.\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            // Set player region width from the saved width in local storage.\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Set timeline height from saved height in local storage.\n            const timelineHeight = localStorage.getItem('timeline-height');\n            if (timelineHeight) {\n                $('#timeline-wrapper').css('height', timelineHeight + 'px');\n                $('#top-region').css('height', `calc(100vh - ${Number(timelineHeight) + 70}px)`);\n            }\n\n            // Seek bar functionalities\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar, #position-marker').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                var $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                var percentage = relX / $(this).width();\n                var time = Math.round(percentage * (totaltime) + start);\n                var formattedTime = convertSecondsToHMS(time, true);\n                $('#vseek #bar').append(`<div id=\"position-marker\">\n                    <div id=\"position\" class=\"py-0 px-1\" style=\"top:-25px;\">${formattedTime}</div></div>`);\n                $('#vseek #position-marker').css('left', relX + 'px');\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek #bar, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#vseek #position-marker, #cursorbar').remove();\n            });\n\n            $('#vseek #bar, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                var percentage = relX / $(this).width();\n                var time = Math.round(percentage * (totaltime) + start);\n                if (time < start) {\n                    time = start;\n                }\n                var formattedTime = convertSecondsToHMS(time, true);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#vseek #position').text(formattedTime);\n                $('#vseek #position-marker').css('left', relX + 'px');\n            });\n\n            // Run interaction when annotation indicator is clicked.\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var id = $(this).data('id');\n                var annotation = annotations.find(x => x.id == id);\n                await player.seek(annotation.timestamp);\n                runInteraction(annotation);\n            });\n\n            // Seek video on click on timeline or video nav.\n            $(document).on('click', '#vseek #bar, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                await player.seek(Math.round((percentage * totaltime) + start));\n                player.pause();\n                $(\"#message, #end-screen\").remove();\n            });\n\n            // Implement timeline zoom out.\n            $('#zoomout').on('click', function() {\n                let currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                let newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement timeline zoom in.\n            $('#zoomin').on('click', function() {\n                let currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                let newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            // Implement zoom in and zoom out on mouse scroll on timeline.\n            $(\"#timeline\").on('wheel', function(e) {\n                if (e.ctrlKey || e.metaKey) {\n                    e.preventDefault();\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            document.getElementById('timeline').addEventListener('scroll', function() {\n                document.getElementById('minute-markers-wrapper').scrollLeft = this.scrollLeft;\n                // Set left position of the vseek to - scrollleft;\n                document.getElementById('vseek').style.left = -this.scrollLeft + 'px';\n                document.getElementById('minute-markers-bg-wrapper').style.left = -this.scrollLeft + 'px';\n                document.getElementById('scrollbar').scrollHeight = this.scrollHeight;\n            });\n\n            // Save timeline changes.\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quickeditfield',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            var updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quickeditfield',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                var updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            // Launch content selection modal.\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown .dropdown-item').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            // Inform user to save changes before close or unload the current page.\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n\n            // Implement the rate change.\n            $(document).on('click', '.changerate', function(e) {\n                e.preventDefault();\n                const rate = $(this).data('rate');\n                player.setRate(rate);\n                $('.changerate').find('i').removeClass('bi-check');\n                $(this).find('i').addClass('bi-check');\n            });\n\n            $(document).on('iv:playerRateChange', function(e) {\n                $('.changerate').find('i').removeClass('bi-check');\n                $(`.changerate[data-rate=\"${e.originalEvent.detail.rate}\"]`).find('i').addClass('bi-check');\n            });\n\n            // Observe timeline-wrapper width change.\n            let timelineWrapper = document.getElementById('timeline-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                const relWidth = $('#timeline-items').width();\n                $('#minute-markers, #minute-markers-bg, #vseek').css('width', relWidth + 'px');\n            });\n\n            resizeObserver.observe(timelineWrapper);\n        }\n    };\n});"],"names":["define","$","addToast","Notification","dispatchEvent","player","totaltime","currentTime","ctRenderer","Object","playerReady","replaceProgressBars","percentage","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","rounded","hours","Math","floor","minutes","seconds","round","parseFloat","toFixed","activeid","renderAnnotationItems","removeClass","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","html","M","util","get_string","addClass","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","prop","stringify","then","catch","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","onReady","support","playbackrate","t","getDuration","min","ratio","posterImage","relWidth","width","startPercentage","newStart","append","i","marker","onEnded","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","onPlaying","intervalFunction","thisTime","isPlaying","isEnded","clearInterval","seek","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","update","requestAnimationFrame","onPause","VideoPlayer","on","e","detail","updated","originalEvent","push","trigger","status","removeAttr","attr","preventDefault","ctype","this","contenttype","hastimestamp","allowmultiple","addAnnotation","closest","editAnnotation","cloneAnnotation","saveCancel","deleteAnnotation","theAnnotation","play","stopImmediatePropagation","offsetX","hide","siblings","initialValue","key","show","console","log","hasClass","field","value","success","appendTimestampMarker","formattedTime","secondLength","targetAnnotation","draggable","event","ui","position","roundedTimestamp","skipduration","abs","resizable","originalPosition","originalSize","size","direction","height","localStorage","setItem","drag","offset","playerWidth","getItem","timelineHeight","$scrollbar","parentOffset","relX","pageX","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","ctrlKey","metaKey","deltaY","addEventListener","scrollLeft","style","scrollHeight","draftAnnotations","confirmationMessage","returnValue","rate","setRate","timelineWrapper","resizeObserver","ResizeObserver","observe"],"mappings":"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"}