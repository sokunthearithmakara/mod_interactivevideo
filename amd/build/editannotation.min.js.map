{"version":3,"file":"editannotation.min.js","sources":["../src/editannotation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Edit interactions module\n *\n * @module     mod_interactivevideo/editannotation\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery',\n    'core/toast',\n    'core/notification',\n    'core/event_dispatcher',\n    'mod_interactivevideo/libraries/jquery-ui',\n], function($, addToast, Notification, {dispatchEvent}) {\n    var ctRenderer = new Object();\n    var player;\n    var totaltime;\n    var currentTime;\n    var playerReady = false;\n    /**\n     * Replace the progress bar on the video navigation.\n     * @param {Number} percentage - Percentage to replace the progress bar.\n     * @returns {void}\n     * */\n    const replaceProgressBars = (percentage) => {\n        percentage = percentage > 100 ? 100 : percentage;\n        $('#video-nav #progress').replaceWith(`<div id=\"progress\"  style=\"width: ${percentage}%;\"></div>`);\n        $('#scrollbar').css('left', percentage + '%');\n    };\n    /**\n     * Render the annotations on the video navigation.\n     * @param {Array} annos - Annotations to render.\n     * @param {Number} start - Start time of the video.\n     * @param {Number} totaltime - Total time of the video.\n     * @returns {void}\n     * */\n    const renderVideoNav = async function(annos, start, totaltime) {\n        if (annos.length == 0) {\n            $(\"#video-nav ul\").empty();\n            return;\n        }\n\n        $(\"#video-nav ul\").empty();\n        $(\"#video-timeline-wrapper .skipsegment\").remove();\n        annos.forEach(async (x) => {\n            var render = ctRenderer[x.type];\n            await render.renderItemOnVideoNavigation(x);\n        });\n\n        const time = await player.getCurrentTime();\n        // Replace progress bar.\n        var percentage = (time - start) / totaltime * 100;\n        replaceProgressBars(percentage);\n\n        dispatchEvent('annotationitemsrendered', {'annotations': annos});\n\n    };\n\n\n    return {\n        init: function(url, coursemodule, interaction, course, start, end, coursecontextid, type = 'yt') {\n            const addNotification = (msg, type = \"info\") => {\n                addToast.add(msg, {\n                    type: type\n                });\n            };\n\n            start = Number(start);\n            if (isNaN(start)) {\n                start = 0;\n            }\n\n            end = Number(end);\n            if (isNaN(end)) {\n                end = null;\n            }\n\n            var annotations = [];\n            var contentTypes;\n\n            const convertSecondsToHMS = (s, dynamic = false) => {\n                var hours = Math.floor(s / 3600);\n                var minutes = Math.floor(s % 3600 / 60);\n                var seconds = Math.floor(s % 3600 % 60);\n                if (dynamic && hours == 0) {\n                    return (minutes < 10 ? '0' + minutes : minutes) + ':' +\n                        (seconds < 10 ? '0' + seconds : seconds);\n                }\n                return (hours < 10 ? '0' + hours : hours) + ':' +\n                    (minutes < 10 ? '0' + minutes : minutes) + ':' +\n                    (seconds < 10 ? '0' + seconds : seconds);\n            };\n\n            var activeid = null; // Current active annotation id. Mainly used when editing to relaunch the interaction afte editing.\n            const renderAnnotationItems = (annotations) => {\n                renderVideoNav(annotations, start, totaltime);\n                $('#annotationwrapper .loader').remove();\n                $('#annotation-list').empty().removeClass(\"d-flex align-items-center justify-content-center\");\n                if (annotations.length == 0) {\n                    $('#annotation-list').html(`${M.util.get_string('clickaddtoaddinteraction', 'mod_interactivevideo')}`)\n                        .addClass(\"d-flex align-items-center justify-content-center\");\n                    return;\n                }\n                annotations.sort(function(a, b) {\n                    return Number(a.timestamp) - Number(b.timestamp);\n                });\n\n                annotations.forEach(function(item) {\n                    var listItem = $('#annotation-template').clone();\n                    ctRenderer[item.type].renderEditItem(annotations, listItem, item);\n                });\n\n                var xp = annotations.filter(x => x.xp).map(x => Number(x.xp)).reduce((a, b) => a + b, 0);\n                $(\"#xp span\").text(xp);\n\n                if (activeid) {\n                    var activeAnno = annotations.find(x => x.id == activeid);\n                    if (activeAnno) {\n                        ctRenderer[activeAnno.type].postEditCallback(activeAnno);\n                    }\n                }\n            };\n\n            const getAnnotations = () => {\n                const getItems = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_items',\n                        sesskey: M.cfg.sesskey,\n                        id: interaction,\n                        contextid: M.cfg.courseContextId,\n                    }\n                });\n\n                const getContentTypes = $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'getallcontenttypes',\n                        sesskey: M.cfg.sesskey,\n                    }\n                });\n\n                $.when(getItems, getContentTypes).done(function(items, contenttypes) {\n                    annotations = JSON.parse(items[0]);\n                    contentTypes = JSON.parse(contenttypes[0]);\n                    // Remove all annotations that are not in the content types.\n                    annotations = annotations.filter(x => contentTypes.find(y => y.name === x.type));\n                    const getRenderers = new Promise((resolve) => {\n                        var count = 0;\n                        contentTypes.forEach(x => {\n                            require(['' + x.amdmodule], function(Type) {\n                                ctRenderer[x.name] = new Type(player, annotations, interaction,\n                                    course, 0, 0, 0, 0, type, 0, totaltime, start, end, x, coursemodule);\n                                count++;\n                                if (count == contentTypes.length) {\n                                    resolve(ctRenderer);\n                                }\n                                ctRenderer[x.name].init();\n                            });\n                        });\n                    });\n                    annotations.map(x => {\n                        x.prop = JSON.stringify(contentTypes.find(y => y.name === x.type));\n                        return x;\n                    });\n                    getRenderers.then(() => {\n                        renderAnnotationItems(annotations);\n                        return;\n                    }).catch(() => {\n                        // Do nothing.\n                    });\n                });\n            };\n\n            const validateTimestampFormat = (timestamp, fld, existing) => {\n                var regex = /^([0-9]{2}):([0-5][0-9]):([0-5][0-9])$/;\n                if (!regex.test(timestamp)) {\n                    addNotification(M.util.get_string('invalidtimestampformat', 'mod_interactivevideo'), 'danger');\n                    if (existing) {\n                        $(fld).val(existing);\n                    } else {\n                        $(fld).val(convertSecondsToHMS(start));\n                    }\n                    return false;\n                }\n                return true;\n            };\n\n            const validateTimeStartEnd = (timestamp, fld, existing, seconds, checkduration,\n                checkexisting, checkskipsegment) => {\n                // Convert the timestamp to seconds.\n                var parts = timestamp.split(':');\n                timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                // Make sure the timestamp is between start and end.\n                if (checkduration) {\n                    if (timestamp > end || timestamp < start) {\n                        var message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(start, true),\n                            \"end\": convertSecondsToHMS(end, true)\n                        });\n                        addNotification(message, 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure the timestamp is not already in the list.\n                if (checkexisting) {\n                    if (annotations.find(x => x.timestamp == timestamp) && timestamp != seconds) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                // Make sure timestamp is not in a skip segment.\n                if (checkskipsegment) {\n                    var skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    var skip = skipsegments.find(x => Number(x.timestamp) < Number(timestamp)\n                        && Number(x.title) > Number(timestamp));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo', {\n                            \"start\": convertSecondsToHMS(skip.timestamp, true),\n                            \"end\": convertSecondsToHMS(skip.title, true)\n                        }), 'danger');\n                        if (existing) {\n                            $(fld).val(existing);\n                        } else {\n                            $(fld).val(convertSecondsToHMS(start));\n                        }\n                        return -1;\n                    }\n                }\n\n                return timestamp;\n\n            };\n\n            const runInteraction = (annotation) => {\n                // Remove the previous message but keep the one below the video.\n                $('#annotation-modal').modal('hide');\n                $('#message').not('[data-placement=bottom]').remove();\n                $('#end-screen').remove();\n                player.pause();\n                var activityType = ctRenderer[annotation.type];\n                activityType.runInteraction(annotation);\n            };\n\n            const onReady = async () => {\n                let t = await player.getDuration();\n                if (!end) {\n                    end = t;\n                } else {\n                    end = Math.min(end, t);\n                }\n\n                if (start > end) {\n                    start = 0;\n                }\n\n                totaltime = end - start;\n                // Recalculate the ratio of the video\n                let ratio = await player.ratio();\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                playerReady = true;\n\n                // Handle timeline block\n                $(\"#timeline #video-timeline\").css({\n                    'background-image': 'url(' + player.posterImage + ')',\n                    'background-size': 'contain',\n                    'background-repeat': 'no-repeat',\n                });\n                $(\"#timeline #duration\").text(convertSecondsToHMS(end, true));\n                $(\"#timeline #currenttime\").text(convertSecondsToHMS(start, true));\n                // Render minute markers\n                const minutes = Math.floor(totaltime / 60);\n                $('#timeline-items-wrapper').css('width', (minutes * 300) + 'px');\n                $('#timeline-items .minute').remove();\n                for (let i = start; i <= end; i += 60) {\n                    let percentage = (i - start) / totaltime * 100;\n                    let marker = '';\n                    // Format h:m (e.g 3h1m);\n                    if (i >= 3600) {\n                        marker = Math.floor(i / 3600) + 'h' + Math.floor((i % 3600) / 60) + 'm';\n                    } else {\n                        marker = Math.floor(i / 60) + 'm';\n                    }\n                    $('#timeline-items').append(`<div class=\"minute position-absolute\" style=\"left: ${percentage}%\">\n                        <div class=\"minute-label\">${marker}</div></div>`);\n                }\n                getAnnotations();\n\n            };\n\n            const onEnded = () => {\n                player.pause();\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n                // Cover the video with a message on a white background div.\n                $('#video-wrapper').append(`<div id=\"end-screen\" class=\"position-absolute w-100 h-100 bg-white d-flex\n                     justify-content-center align-items-center style=\"top: 0; left: 0;\">\n                     <button class=\"btn btn-danger rounded-circle\" style=\"font-size: 1.5rem;\" id=\"restart\">\n                    <i class=\"bi bi-arrow-repeat\" style=\"font-size: x-large;\"></i></button></div>`);\n                $('#video-nav #progress').css('width', '100%');\n                $('#scrollbar').css('left', '100%');\n                // Focus on the restart button;\n                $('#message #restart').focus();\n\n                // If the current time matches the timestamp of an annotation, highlight the annotation\n                var currentAnnotation = annotations.find((annotation) => annotation.timestamp == end);\n                if (currentAnnotation) {\n                    $('#annotation-list tr').removeClass('active');\n                    $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n\n                    // Show tooltip for two seconds\n                    // toggle the tooltip to show the title\n                    $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                    // Hide the tooltip after 2 seconds\n                    setTimeout(function() {\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                    }, 2000);\n                }\n            };\n\n            const onSeek = async function(t) {\n                if (!playerReady) {\n                    return;\n                }\n                if (t) {\n                    t = Number(t);\n                } else {\n                    t = await player.getCurrentTime();\n                }\n                if (t > start && t < end) {\n                    $('#end-screen').remove();\n                }\n                var percentage = (t - start) / (totaltime) * 100;\n                $('#scrollbar').css('left', percentage + '%');\n                $('#timeline #currenttime').text(convertSecondsToHMS(t, true));\n                dispatchEvent('timeupdate', {'time': t});\n            };\n\n            var onPlayingInterval;\n            const onPlaying = () => {\n                $('#message, #end-screen').remove();\n                $('#playpause').find('i').removeClass('bi-play-fill').addClass('bi-pause-fill');\n                var intervalFunction = async function() {\n                    var thisTime = await player.getCurrentTime();\n                    var isPlaying = await player.isPlaying();\n                    var isEnded = await player.isEnded();\n                    if (!isPlaying || isEnded) {\n                        clearInterval(onPlayingInterval);\n                        return;\n                    }\n\n                    if (thisTime < start) {\n                        await player.seek(start);\n                        thisTime = start;\n                    }\n\n                    if (thisTime >= end) {\n                        player.stop(end);\n                        clearInterval(onPlayingInterval);\n                        onEnded();\n                        return;\n                    }\n                    dispatchEvent('timeupdate', {'time': thisTime});\n                    $('#timeline #currenttime').text(convertSecondsToHMS(thisTime, true));\n                    var percentage = (thisTime - start) / (totaltime) * 100;\n                    $('#video-nav #progress').css('width', percentage + '%');\n\n                    $(\"#scrollbar\").css('left', percentage + '%');\n\n                    // Scroll the timeline so that the current time is in the middle of the timeline.\n                    const scrollBar = document.getElementById('scrollbar');\n                    // Check if the scrollbar is in view.\n                    const rect = scrollBar.getBoundingClientRect();\n                    if (rect.left < 0 || rect.right > window.innerWidth) {\n                        scrollBar.scrollIntoView({behavior: \"instant\", block: \"center\", inline: \"center\"});\n                    }\n\n                    // If the current time matches the timestamp of an annotation, highlight the annotation\n                    var currentAnnotation = annotations.find(x => (thisTime - player.frequency) <= x.timestamp\n                        && (thisTime + player.frequency) >= x.timestamp);\n                    if (currentAnnotation) {\n                        $('#annotation-list tr').removeClass('active');\n                        $(`tr[data-id=\"${currentAnnotation.id}\"]`).addClass('active');\n\n                        // Show tooltip for two seconds\n                        // toggle the tooltip to show the title\n                        $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('show');\n                        // Hide the tooltip after 2 seconds\n                        setTimeout(function() {\n                            $('#video-nav .annotation[data-id=\"' + currentAnnotation.id + '\"] .item').tooltip('hide');\n                        }, 2000);\n                    }\n\n                    // // If current time is within the skipsegment, seek to the end of the segment\n                    // var skipsegments = annotations.filter((annotation) => annotation.type == 'skipsegment');\n                    // var skip = skipsegments.find(x => Number(x.timestamp) < Number(thisTime)\n                    //     && Number(x.title) > Number(thisTime));\n                    // if (skip) {\n                    //     await player.seek(Number(skip.title));\n                    //     // Replace the progress bar\n                    //     percentage = (skip.title - start) / totaltime * 100;\n                    //     replaceProgressBars(percentage);\n                    // }\n                };\n                if (player.type == 'yt' || player.type == 'wistia') {\n                    onPlayingInterval = setInterval(intervalFunction, 100);\n                } else {\n                    intervalFunction();\n                }\n            };\n\n            const onPause = () => {\n                clearInterval(onPlayingInterval);\n                $('#playpause').find('i').removeClass('bi-pause-fill').addClass('bi-play-fill');\n            };\n\n            // Implement the player\n            require(['mod_interactivevideo/player/' + type], function(VideoPlayer) {\n                player = new VideoPlayer(\n                    url,\n                    start,\n                    end,\n                    true,\n                    true,\n                );\n            });\n\n            $(document).on('iv:playerReady', function() {\n                onReady();\n            });\n\n            $(document).on('iv:playerPaused', function() {\n                onPause();\n            });\n\n            $(document).on('iv:playerPlaying', function() {\n                onPlaying();\n            });\n\n            $(document).on('iv:playerEnded', function() {\n                onEnded();\n            });\n\n            $(document).on('iv:playerSeek', function(e) {\n                onSeek(e.detail.time);\n            });\n\n            $(document).on('annotationupdated', function(e) {\n                var updated = e.originalEvent.detail.annotation;\n                var action = e.originalEvent.detail.action;\n                if (action == 'edit' || action == 'draft' || action == 'savedraft') {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != updated.id;\n                    });\n                }\n                updated.prop = JSON.stringify(contentTypes.find(x => x.name === updated.type));\n                annotations.push(updated);\n                if (action == 'add') {\n                    activeid = updated.id;\n                } else {\n                    activeid = null;\n                }\n\n                renderAnnotationItems(annotations);\n                if (action == 'add' || action == 'clone') {\n                    addNotification(M.util.get_string('interactionadded', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    if (action == 'clone') {\n                        setTimeout(function() {\n                            $(`tr[data-id=\"${updated.id}\"]`).find(`[data-editable=\"timestamp\"]`).trigger('contextmenu');\n                        }, 100);\n                    }\n                } else if (action == 'edit') {\n                    addNotification(M.util.get_string('interactionupdated', 'mod_interactivevideo'), 'success');\n                    $(`tr[data-id=\"${updated.id}\"]`).addClass('active');\n                    setTimeout(function() {\n                        $(`tr[data-id=\"${updated.id}\"]`).removeClass('active');\n                    }, 1500);\n                }\n\n                // If draft exists, activate the save button.\n                if (annotations.find(x => x.status == 'draft')) {\n                    $('#timeline #savedraft').removeAttr('disabled');\n                } else {\n                    $('#timeline #savedraft').attr('disabled', 'disabled');\n                }\n            });\n\n            // Implement create annotation\n            $(document).on('click', '#addcontentdropdown a', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                $('#addcontentdropdown a').removeClass('active');\n                $(this).addClass('active');\n                let ctype = $(this).data('type');\n                player.pause();\n                var timestamp = currentTime || await player.getCurrentTime();\n                timestamp = Math.floor(timestamp);\n                var contenttype = contentTypes.find(x => x.name == ctype);\n                if (contenttype.hastimestamp) {\n                    if (annotations.find(x => x.timestamp == timestamp)) {\n                        addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                    // Check skip segments\n                    const skipsegments = annotations.filter(x => x.type == 'skipsegment');\n                    const skip = skipsegments.find(x => Number(x.timestamp) < Number(currentTime)\n                        && Number(x.title) > Number(currentTime));\n                    if (skip) {\n                        addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'), 'danger');\n                        return;\n                    }\n                }\n                if (!contenttype.allowmultiple && annotations.find(x => x.type == ctype)) {\n                    addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                    return;\n                }\n                currentTime = null;\n                ctRenderer[ctype].addAnnotation(annotations, timestamp, coursemodule);\n            });\n\n            // Implement edit annotation\n            $(document).on('click', 'tr .edit', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).closest('.annotation').data('timestamp');\n                if (timestamp) {\n                    await player.seek(timestamp, true);\n                }\n                player.pause();\n                var id = $(this).closest('.annotation').data('id');\n                var contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].editAnnotation(annotations, id, coursemodule);\n            });\n\n            // Implement copy annotation\n            $(document).on('click', 'tr .copy', function(e) {\n                e.preventDefault();\n                var id = $(this).closest('.annotation').data('id');\n                var contenttype = $(this).closest('.annotation').data('type');\n                ctRenderer[contenttype].cloneAnnotation(id);\n            });\n\n            $(document).on('annotationdeleted', function(e) {\n                var annotation = e.originalEvent.detail.annotation;\n                activeid = null;\n                $(`tr[data-id=\"${annotation.id}\"]`).addClass('deleted');\n                setTimeout(function() {\n                    annotations = annotations.filter(function(item) {\n                        return item.id != annotation.id;\n                    });\n                    renderAnnotationItems(annotations);\n                    addNotification(M.util.get_string('interactiondeleted', 'mod_interactivevideo'), 'success');\n                }, 1000);\n            });\n\n            // Implement delete annotation.\n            $(document).on('click', '.delete', function(e) {\n                e.preventDefault();\n                player.pause();\n                var id = $(this).closest('.annotation').data('id');\n                var annotation = annotations.find(x => x.id == id);\n                Notification.saveCancel(\n                    M.util.get_string('deleteinteraction', 'mod_interactivevideo'),\n                    M.util.get_string('deleteinteractionconfirm', 'mod_interactivevideo'),\n                    M.util.get_string('delete', 'mod_interactivevideo'),\n                    function() {\n                        ctRenderer[annotation.type].deleteAnnotation(annotations, id);\n                    },\n                    null\n                );\n\n            });\n\n            // Implement view annotation\n            $(document).on('click', '.annotation .title', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).closest('.annotation').data('timestamp');\n                await player.seek(timestamp, true);\n                // Update the progress bar\n                var percentage = (timestamp - start) / totaltime * 100;\n                replaceProgressBars(percentage);\n\n                var id = $(this).closest('.annotation').data('id');\n\n                var theAnnotation = annotations.find(x => x.id == id);\n\n                runInteraction(theAnnotation);\n            });\n\n            // Implement go to timestamp\n            $(document).on('click', '.timestamp', async function(e) {\n                e.preventDefault();\n                var timestamp = $(this).data('timestamp');\n                await player.seek(timestamp);\n                player.play();\n            });\n\n            $(document).on('contextmenu', '#vseek, #video-timeline', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                currentTime = Math.floor(percentage * totaltime) + start;\n                await player.seek(currentTime);\n                player.pause();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            $(document).on('contextmenu', '#scrollbar', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                currentTime = await player.getCurrentTime();\n                $(\"#addcontent\").trigger('click');\n            });\n\n            $(document).on('click', '#playpause', async function(e) {\n                if (!playerReady) {\n                    return;\n                }\n                e.preventDefault();\n                // Pause or resume the video.\n                let isPlaying = await player.isPlaying();\n                if (isPlaying) {\n                    player.pause();\n                } else {\n                    let t = await player.getCurrentTime();\n                    if (t >= end) {\n                        $('#end-screen #restart').trigger('click');\n                    } else {\n                        player.play();\n                    }\n                }\n            });\n\n            $(document).on('contextmenu', '#video-nav .annotation', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var id = $(this).data('id');\n                // Trigger click on the edit button\n                $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n            });\n\n            // Quick edit\n            $(document).on('contextmenu', '[data-editable]', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if ($('[data-field].editing').length > 0) {\n                    return;\n                }\n                var fld = $(this).data('editable');\n                $(this).hide();\n                $(this).siblings('[data-field=\"' + fld + '\"]').removeClass('d-none').focus().addClass('editing');\n            });\n\n            $(document).on('keyup', '[data-field].editing', function(e) {\n                $(this).removeClass('is-invalid');\n                var initialValue = $(this).data('initial-value');\n                var val = $(this).val();\n                var fld = $(this).data('field');\n                if (val == '') {\n                    $(this).addClass('is-invalid');\n                }\n\n                // If escape key is pressed, revert the value\n                if (e.key == 'Escape') {\n                    $(this).val(initialValue);\n                    $(this).removeClass('editing');\n                    $(this).addClass('d-none');\n                    $(this).siblings('[data-editable]').show();\n                    return;\n                }\n                // If enter key is pressed, save the value\n                if (e.key == 'Enter') {\n                    var seconds;\n                    if (fld == 'timestamp') {\n                        var parts = initialValue.split(':');\n                        seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!validateTimestampFormat(val, '[data-field].editing', initialValue)) {\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        var timestamp = validateTimeStartEnd(val, '[data-field].editing', initialValue, seconds,\n                            true, true, true);\n                        if (timestamp == -1) {\n                            window.console.log('wtf');\n                            $(this).addClass('is-invalid');\n                            return;\n                        }\n                        seconds = timestamp;\n                    }\n\n                    if ($(this).hasClass('is-invalid')) {\n                        return;\n                    }\n                    if (val == initialValue) {\n                        $(this).removeClass('editing');\n                        $(this).addClass('d-none');\n                        $(this).siblings('[data-editable]').show();\n                        return;\n                    }\n                    var id = $(this).data('id');\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quickeditfield',\n                            sesskey: M.cfg.sesskey,\n                            id: id,\n                            field: fld,\n                            contextid: M.cfg.contextid,\n                            value: fld == 'timestamp' ? seconds : val,\n                        },\n                        success: function(data) {\n                            var updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'edit'\n                            });\n                        }\n                    });\n                    return;\n                }\n            });\n\n            $(document).on('blur', '[data-field].editing', function() {\n                var initialValue = $(this).data('initial-value');\n                $(this).val(initialValue);\n                $(this).removeClass('editing');\n                $(this).addClass('d-none');\n                $(this).siblings('[data-editable]').show();\n            });\n            // End quick edit\n\n            $(document).on('click', '#end-screen #restart', async function(e) {\n                e.preventDefault();\n                $('#end-screen').remove();\n                await player.seek(start);\n                player.play();\n            });\n\n            $(document).on('mouseover', 'tr.annotation', function() {\n                var id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseover');\n            });\n\n            $(document).on('mouseout', 'tr.annotation', function() {\n                var id = $(this).data('id');\n                $(`#video-nav ul li[data-id=\"${id}\"] .item`).trigger('mouseout');\n                $('.tooltip').remove();\n            });\n\n            $(document).on('mouseover', '#video-nav ul li', function() {\n                var id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).addClass('active');\n            });\n\n            $(document).on('mouseout', '#video-nav ul li', function() {\n                var id = $(this).data('id');\n                $(`tr.annotation[data-id=\"${id}\"]`).removeClass('active');\n            });\n\n            $(document).on('change', '.timestamp-input, .timestamp-field input', function() {\n                $(this).removeClass('is-invalid');\n                var parts = $(this).val().split(':');\n                var seconds = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                if (!validateTimestampFormat($(this).val(), this)) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n\n                var timestamp = validateTimeStartEnd($(this).val(), this, \"00:00:00\", seconds, true, false, true);\n\n                if (timestamp == -1) {\n                    $(this).addClass('is-invalid');\n                    return;\n                }\n            });\n\n            $('#contentmodal').on('show.bs.modal', function() {\n                player.pause();\n                $('#addcontentdropdown').addClass('modal-body');\n            });\n\n            $('#contentmodal').on('hide.bs.modal', function() {\n                $('#addcontentdropdown a').removeClass('active');\n                $('#addcontentdropdown').removeClass('modal-body');\n            });\n\n            $(document).on('click', '#fullscreen', function(e) {\n                e.preventDefault();\n                if ($(this).hasClass('fullscreen')) {\n                    $('#distractfreemodal').modal('hide');\n\n                } else {\n                    let modal = `<div class=\"modal fade p-0\" id=\"distractfreemodal\"\n                     role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\"\n                    data-keyboard=\"false\">\n                    <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n                        <div class=\"modal-content rounded-0 p-3\">\n                            <div class=\"modal-body px-1 px-sm-3\" id=\"distractionfreebody\">\n                <div class=\"d-flex w-100 align-items-center justify-content-center mt-5\"><div class=\"spinner-grow text-secondary\"\n                    style=\"width: 3rem; height: 3rem;\" role=\"status\">\n                <span class=\"sr-only\">Loading...</span>\n                </div></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                    $('body').append(modal);\n                    $('#distractfreemodal').modal('show');\n                }\n\n                $(this).toggleClass('fullscreen');\n\n                $('#distractfreemodal').on('shown.bs.modal', function() {\n                    $('body').addClass('distractionfreemode');\n                    let $wrapper = $('#wrapper').clone();\n                    $('#distractfreemodal').find('#distractionfreebody').html($wrapper);\n                    // Remove original wrapper\n                    $('#wrapper').remove();\n                });\n                $('#distractfreemodal').on('hidden.bs.modal', function() {\n                    $('body').removeClass('distractionfreemode');\n                    let $wrapper = $('#distractfreemodal #wrapper').clone();\n                    $('[role=\"main\"]').append($wrapper);\n                    $('#distractfreemodal').remove();\n                });\n            });\n\n            const appendTimestamp = (seconds) => {\n                var formattedTime = convertSecondsToHMS(seconds, true);\n                $('#scrollbar').append(`<div id=\"position\" class=\"position-absolute bg-black text-white small rounded-sm py-0 px-1\"\n                     style=\"top: -30px;\">${formattedTime}</div>`);\n            };\n\n            $(document).on('annotationitemsrendered', function() {\n                let secondLength = $('#timeline-items').width() / totaltime;\n                $('#timeline [data-toggle=\"tooltip\"]').tooltip({\n                    'boundary': 'window',\n                    'container': '#timeline',\n                });\n                // Put the minute markers on the timeline;\n                let targetAnnotation = null;\n                // Tested\n                $('#timeline-items .annotation.li-draggable').draggable({\n                    // 'containment': '#timeline',\n                    'axis': 'x',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        appendTimestamp($(this).data('timestamp'));\n                        $('.tooltip, #message').remove();\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        $('.tooltip').remove();\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', 0);\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', '100%');\n                        }\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#scrollbar #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('.tooltip').remove();\n                        $('#scrollbar #position').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left + 5) / $('#timeline-items').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                            $(this).css('left', '-5px');\n                        }\n                        if (timestamp > end) {\n                            timestamp = end;\n                            $(this).css('left', 'calc(100% - 5px)');\n                        }\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        const existingAnnotation = annotations.find(x => x.timestamp == Math.round(timestamp) && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == Math.round(timestamp)) {\n                            return;\n                        }\n                        targetAnnotation.timestamp = Math.round(timestamp);\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(Math.round(timestamp)); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').draggable({\n                    'axis': 'x',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestamp($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'drag': async function(event, ui) {\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        if (timestamp < start) {\n                            timestamp = start;\n                        }\n\n                        if (timestamp > end) {\n                            timestamp = end;\n                        }\n\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#scrollbar #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#scrollbar #position').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        let timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let skipduration = Number(targetAnnotation.title) - Number(targetAnnotation.timestamp);\n                        if (timestamp < 0 && timestamp + skipduration < start) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp > end) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (timestamp < start) {\n                            skipduration = skipduration - Math.abs(start - timestamp);\n                            timestamp = start;\n                        }\n                        if (timestamp + skipduration > end) {\n                            skipduration = Math.abs(end - timestamp);\n                            timestamp = end - skipduration;\n                        }\n                        if (skipduration <= 0) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == Math.round(timestamp) && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == Math.round(timestamp)) {\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        targetAnnotation.timestamp = Math.round(timestamp);\n                        targetAnnotation.title = Math.round(timestamp) + skipduration;\n                        targetAnnotation.status = \"draft\";\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(Math.round(timestamp)); // Seek to the new position\n                        player.pause();\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').resizable({\n                    'containment': '#video-timeline-wrapper',\n                    'handles': 'e, w',\n                    'grid': [secondLength, 0],\n                    'start': function() {\n                        $('#message').remove();\n                        appendTimestamp($(this).data('timestamp'));\n                        $('#timeline-items').addClass('no-pointer-events');\n                    },\n                    'resize': async function(event, ui) {\n                        let timestamp;\n                        if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                        }\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#scrollbar #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                    },\n                    'stop': async function(event, ui) {\n                        $('#scrollbar #position').remove();\n                        setTimeout(function() {\n                            $('#timeline-items').removeClass('no-pointer-events');\n                        }, 200);\n                        const id = $(this).data('id');\n                        targetAnnotation = annotations.find(x => x.id == id);\n                        let timestamp, direction;\n                        if (ui.originalPosition.left != ui.position.left) {\n                            if (ui.position.left < 0) {\n                                ui.position.left = 0;\n                            }\n                            timestamp = ((ui.position.left) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"left\";\n                        } else {\n                            timestamp = ((ui.position.left + ui.size.width) / $('#video-timeline').width()) * totaltime + start;\n                            direction = \"right\";\n                        }\n                        const existingAnnotation = annotations.find(x => x.timestamp == Math.round(timestamp) && x.id != id);\n                        if (existingAnnotation) {\n                            addNotification(M.util.get_string('interactionalreadyexists', 'mod_interactivevideo'), 'danger');\n                            renderAnnotationItems(annotations);\n                            return;\n                        }\n                        if (targetAnnotation.timestamp == Math.round(timestamp)) {\n                            return;\n                        }\n                        if (direction == \"left\") {\n                            targetAnnotation.timestamp = Math.round(timestamp);\n                        } else {\n                            targetAnnotation.title = Math.round(timestamp);\n                        }\n                        targetAnnotation.status = 'draft';\n                        dispatchEvent('annotationupdated', {\n                            annotation: targetAnnotation,\n                            action: 'draft'\n                        });\n                        await player.seek(Math.round(timestamp));\n                        player.pause();\n                        $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                    }\n                });\n\n                $('#video-timeline-wrapper .skipsegment').on('contextmenu', function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    const id = $(this).data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .edit`).trigger('click');\n                });\n\n                $('#video-timeline-wrapper .skipsegment').on('click', async function(e) {\n                    e.preventDefault();\n                    const timestamp = $(this).data('timestamp');\n                    await player.seek(timestamp);\n                    player.pause();\n                });\n\n                $('#video-timeline-wrapper .skipsegment .delete-skipsegment').on('click', function(e) {\n                    e.preventDefault();\n                    const id = $(this).closest('.skipsegment').data('id');\n                    $(`tr.annotation[data-id=\"${id}\"] .delete`).trigger('click');\n                });\n            });\n\n            // Tested\n            $('#scrollbar').draggable({\n                'containment': '#timeline-items',\n                'axis': 'x',\n                'handle': '#scrollhead, #scrollline',\n                'cursor': 'col-resize',\n                'start': function(event, ui) {\n                    $('#timeline-items').addClass('no-pointer-events');\n                    $(\"#message\").remove();\n                    appendTimestamp(Math.round(((ui.position.left) / $('#timeline-items').width()) * totaltime + start));\n                },\n                'drag': async function(event, ui) {\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    await player.seek(Math.round(timestamp));\n                    player.pause();\n                    $('#scrollbar #position').text(convertSecondsToHMS(Math.round(timestamp), true));\n                },\n                'stop': function(event, ui) {\n                    $('#scrollbar #position').remove();\n                    setTimeout(function() {\n                        $('#timeline-items').removeClass('no-pointer-events');\n                    }, 200);\n                    // Convert the position to percentage\n                    let timestamp = ((ui.position.left) / $('#timeline-items').width()) * totaltime + start;\n                    $('#scrollbar').css('left', (timestamp - start) / totaltime * 100 + '%');\n                }\n            });\n\n            // Resize player\n            $('#separator').draggable({\n                'axis': 'x',\n                'containment': '#wrapper',\n                'grid': [1, 0],\n                'start': function() {\n                    $('#wrapper').addClass('no-pointer-events');\n                },\n                drag: function() {\n                    const parentOffset = $(this).offset();\n                    const width = parentOffset.left;\n                    $('#player-region').css('width', width + 'px');\n                    $('#content-region').css('width', 'calc(100% - ' + width + 'px)');\n                },\n                stop: function() {\n                    const width = $(this).offset().left;\n                    // Save this to local storage\n                    localStorage.setItem('player-width', width);\n                    $('#wrapper').removeClass('no-pointer-events');\n                }\n            });\n\n            const playerWidth = localStorage.getItem('player-width');\n            if (playerWidth && window.innerWidth > 992) {\n                $('#separator').css('left', playerWidth + 'px');\n                $('#player-region').css('width', playerWidth + 'px');\n                $('#content-region').css('width', 'calc(100% - ' + playerWidth + 'px)');\n            }\n\n            // Seek bar functionalities\n            $('#vseek, #video-timeline, #video-nav .annotation').on('mouseenter', function(e) {\n                $('#cursorbar').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                // First clone the #scrollbar and place it where the cursor is.\n                var $scrollbar = $('#scrollbar').clone();\n                $scrollbar.attr('id', 'cursorbar');\n\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n\n                $scrollbar.css('left', (relX + 5) + 'px');\n                $scrollbar.find('#scrollhead').remove();\n                var percentage = relX / $(this).width();\n                var time = Math.round(percentage * (totaltime) + start);\n                var formattedTime = convertSecondsToHMS(time, true);\n                $scrollbar.append(`<div id=\"position\" class=\"position-absolute bg-black text-white small rounded-sm p-1\"\n                     style=\"top: -30px;\">${formattedTime}</div>`);\n                $('#timeline-items').append($scrollbar);\n            });\n\n            $('#vseek, #video-timeline, #video-nav .annotation').on('mouseleave', function(e) {\n                e.stopImmediatePropagation();\n                $('#cursorbar').remove();\n            });\n\n            $('#vseek, #video-timeline').on('mousemove', function(e) {\n                e.stopImmediatePropagation();\n                const parentOffset = $(this).offset();\n                const relX = e.pageX - parentOffset.left;\n                var percentage = relX / $(this).width();\n                var time = Math.round(percentage * (totaltime) + start);\n                var formattedTime = convertSecondsToHMS(time, true);\n                // Move the cursorbar\n                $('#cursorbar').css('left', (relX + 5) + 'px');\n                $('#cursorbar #position').text(formattedTime);\n            });\n\n            $(document).on('click', '#video-nav .annotation', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var id = $(this).data('id');\n                var annotation = annotations.find(x => x.id == id);\n                await player.seek(annotation.timestamp);\n                runInteraction(annotation);\n            });\n\n            $(document).on('click', '#vseek, #video-timeline', async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                var percentage = e.offsetX / $(this).width();\n                replaceProgressBars(percentage * 100);\n                await player.seek(Math.round((percentage * totaltime) + start));\n                player.pause();\n                $(\"#message, #end-screen\").remove();\n            });\n\n            $('#zoomout').on('click', function() {\n                let currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                let newLevel = parseInt(currentLevel) - 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                let timelineElement = document.getElementById('timeline');\n                if (timelineElement.scrollWidth <= timelineElement.clientWidth) {\n                    $(this).attr('disabled', 'disabled');\n                }\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            $(\"#timeline\").on('wheel', function(e) {\n                if (!e.shiftKey) {\n                    if (e.originalEvent.deltaY < 0) {\n                        $('#zoomin').trigger('click');\n                    } else {\n                        $('#zoomout').trigger('click');\n                    }\n                }\n            });\n\n            $('#zoomin').on('click', function() {\n                let currentLevel = $('#timeline-items-wrapper').css('width'); // In px.\n                let newLevel = parseInt(currentLevel) + 300;\n                $('#timeline-items-wrapper').css('width', newLevel + 'px');\n                $('#zoomout').removeAttr('disabled');\n                dispatchEvent('annotationitemsrendered', {'annotations': annotations});\n            });\n\n            $('#savedraft').on('click', function(e) {\n                e.stopImmediatePropagation();\n                let draftAnnotations = annotations.filter(x => x.status == 'draft');\n                let count = 0;\n                draftAnnotations.forEach(function(a) {\n                    $.ajax({\n                        url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                        method: \"POST\",\n                        dataType: \"text\",\n                        data: {\n                            action: 'quickeditfield',\n                            sesskey: M.cfg.sesskey,\n                            id: a.id,\n                            field: 'timestamp',\n                            contextid: M.cfg.contextid,\n                            value: a.timestamp,\n                        },\n                        success: function(data) {\n                            var updated = JSON.parse(data);\n                            dispatchEvent('annotationupdated', {\n                                annotation: updated,\n                                action: 'savedraft'\n                            });\n                        }\n                    });\n                    if (a.type == 'skipsegment') {\n                        $.ajax({\n                            url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                            method: \"POST\",\n                            dataType: \"text\",\n                            data: {\n                                action: 'quickeditfield',\n                                sesskey: M.cfg.sesskey,\n                                id: a.id,\n                                field: 'title',\n                                contextid: M.cfg.contextid,\n                                value: a.title,\n                            },\n                            success: function(data) {\n                                var updated = JSON.parse(data);\n                                dispatchEvent('annotationupdated', {\n                                    annotation: updated,\n                                    action: 'savedraft'\n                                });\n                            }\n                        });\n                    }\n                    count++;\n                    if (count == draftAnnotations.length) {\n                        addNotification(M.util.get_string('draftsaved', 'mod_interactivevideo'), 'success');\n                    }\n                });\n\n            });\n\n            $('#addcontent').on('click', async function(e) {\n                e.preventDefault();\n                if (!playerReady) {\n                    return;\n                }\n                $('#contentmodal').modal('show');\n            });\n\n            window.addEventListener('beforeunload', (e) => {\n                if (annotations.find(x => x.status == 'draft')) {\n                    const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                    e.returnValue = confirmationMessage;\n                    return confirmationMessage;\n                }\n                return true;\n            });\n        }\n    };\n});"],"names":["define","$","addToast","Notification","dispatchEvent","player","totaltime","currentTime","ctRenderer","Object","playerReady","replaceProgressBars","percentage","replaceWith","css","renderVideoNav","async","annos","start","length","empty","remove","forEach","render","x","type","renderItemOnVideoNavigation","time","getCurrentTime","init","url","coursemodule","interaction","course","end","coursecontextid","addNotification","msg","add","Number","isNaN","contentTypes","annotations","convertSecondsToHMS","s","dynamic","hours","Math","floor","minutes","seconds","activeid","renderAnnotationItems","removeClass","sort","a","b","timestamp","item","listItem","clone","renderEditItem","xp","filter","map","reduce","text","activeAnno","find","id","postEditCallback","html","M","util","get_string","addClass","getAnnotations","getItems","ajax","cfg","wwwroot","method","dataType","data","action","sesskey","contextid","courseContextId","getContentTypes","when","done","items","contenttypes","JSON","parse","y","name","getRenderers","Promise","resolve","count","require","amdmodule","Type","prop","stringify","then","catch","validateTimestampFormat","fld","existing","test","val","validateTimeStartEnd","checkduration","checkexisting","checkskipsegment","parts","split","message","skip","annotation","title","runInteraction","modal","not","pause","onReady","t","getDuration","min","ratio","posterImage","i","marker","append","onEnded","focus","currentAnnotation","tooltip","setTimeout","onSeek","onPlayingInterval","onPlaying","intervalFunction","thisTime","isPlaying","isEnded","clearInterval","seek","stop","scrollBar","document","getElementById","rect","getBoundingClientRect","left","right","window","innerWidth","scrollIntoView","behavior","block","inline","frequency","setInterval","onPause","VideoPlayer","on","e","detail","updated","originalEvent","push","trigger","status","removeAttr","attr","preventDefault","this","ctype","contenttype","hastimestamp","allowmultiple","addAnnotation","closest","editAnnotation","cloneAnnotation","saveCancel","deleteAnnotation","theAnnotation","play","stopImmediatePropagation","offsetX","width","hide","siblings","initialValue","key","show","console","log","hasClass","field","value","success","toggleClass","$wrapper","appendTimestamp","formattedTime","secondLength","targetAnnotation","draggable","event","ui","position","round","skipduration","abs","resizable","originalPosition","originalSize","size","direction","drag","offset","localStorage","setItem","playerWidth","getItem","$scrollbar","parentOffset","relX","pageX","currentLevel","newLevel","parseInt","timelineElement","scrollWidth","clientWidth","shiftKey","deltaY","draftAnnotations","addEventListener","confirmationMessage","returnValue"],"mappings":"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"}