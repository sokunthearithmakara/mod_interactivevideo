{"version":3,"file":"mod_form.min.js","sources":["../src/mod_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Interactive Video module form\n *\n * @module     mod_interactivevideo/mod_form\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core_form/modalform', 'core/str'], function($, notification, ModalForm, str) {\n    return {\n        /**\n         * Init function on page loads.\n         * @param {Number} id module id\n         * @param {Number} usercontextid user context id\n         * @param {String} videotypes allowed video types\n         */\n        'init': function(id, usercontextid, videotypes) {\n            let totaltime, player;\n            let videowrapper = $('#video-wrapper');\n            let endinput = $('input[name=endtime]');\n            let startinput = $('input[name=starttime]');\n            let startassistinput = $('input[name=startassist]');\n            let endassistinput = $('input[name=endassist]');\n            let totaltimeinput = $('input[name=totaltime]');\n            let videourlinput = $('input[name=videourl]');\n            let sourceinput = $('input[name=source]');\n            let videoinput = $('input[name=video]');\n            let uploadfield = $(\"#fitem_id_upload\");\n            let deletefield = $(\"#fitem_id_delete\");\n            let videofile = $('input[name=videofile]');\n            let videotype = $('input[name=type]');\n            let posterimage = $('input[name=posterimage]');\n\n            /**\n             * Format seconds to HH:MM:SS.\n             * @param {Number} s seconds\n             * @returns\n             */\n            const convertSecondsToHMS = (s) => {\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - (hours * 3600)) / 60);\n                let seconds = s - (hours * 3600) - (minutes * 60);\n                seconds = seconds.toFixed(2);\n                let result = (hours < 10 ? \"0\" + hours : hours);\n                result += \":\" + (minutes < 10 ? \"0\" + minutes : minutes);\n                result += \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n                return result;\n            };\n\n            /**\n             * Scripts to run when the player is ready.\n             */\n            const whenPlayerReady = async function() {\n                if (player.audio) {\n                    videowrapper.addClass('audio');\n                }\n                videowrapper.show();\n                // Recalculate the ratio of the video.\n                let ratio = player.aspectratio;\n                if (ratio < 1) {\n                    ratio = 1;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                if ($(`[name=\"name\"]`).val() == '') {\n                    $(`[name=\"name\"]`).val(player.title);\n                }\n\n                const duration = player.totaltime;\n                totaltime = duration;\n                totaltimeinput.val(totaltime);\n                if (Number(endinput.val()) > 0 && Number(endinput.val()) > totaltime) {\n                    endinput.val(totaltime);\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                }\n\n                if (Number(startinput.val()) > 0 && Number(startinput.val()) > totaltime) {\n                    startinput.val(0);\n                    startassistinput.val('00:00:00.00');\n                }\n\n                if (endassistinput.val() == '00:00:00.00' || endassistinput.val() == '') {\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                    endinput.val(totaltime);\n                }\n                $(\"#videototaltime\").text(\"<= \" + convertSecondsToHMS(totaltime));\n                posterimage.val(player.posterImage);\n            };\n\n            $(document).on('iv:playerReady', function() {\n                whenPlayerReady();\n            });\n\n            $(document).on('iv:playerError', async function() {\n                let strings = await str.get_strings([\n                    {key: 'thereisanissueloadingvideo', component: 'mod_interactivevideo'},\n                ]);\n                videourlinput.addClass('is-invalid');\n                videourlinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                    + strings[0] + '</div>');\n            });\n\n            const checkVideo = (url) => new Promise((resolve) => {\n                // Remove video element if it exists.\n                if (document.querySelector('video')) {\n                    document.querySelector('video').remove();\n                }\n                let video = document.createElement('video');\n                video.src = url;\n                video.addEventListener('canplay', function() {\n                    resolve(true);\n                });\n\n                video.addEventListener('error', function() {\n                    resolve(false);\n                });\n            });\n\n            videourlinput.on('input', async function() {\n                videourlinput.removeClass('is-invalid');\n                videourlinput.next('.form-control-feedback').remove();\n                let currenttype = videotype.val();\n                videotype.val('');\n                if (player) {\n                    player.destroy();\n                }\n                let url = $(this).val().trim();\n                if (url == '') {\n                    videowrapper.hide();\n                    return;\n                }\n\n                // YOUTUBE:: Check if the video is a youtube video.\n                if (videotypes.includes('yt') || currenttype == 'yt') {\n                    let regex = new RegExp(\n                        '(?:https?:\\\\/\\\\/)?' +\n                        '(?:www\\\\.)?' +\n                        '(?:youtube\\\\.com|youtu\\\\.be|youtube-nocookie\\\\.com)' +\n                        '(?:\\\\/embed\\\\/|\\\\/watch\\\\?v=|\\\\/)([^\\\\/]+)',\n                        'g'\n                    );\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        // Show loader while the video is loading.\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('yt');\n                        require(['mod_interactivevideo/player/yt'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true,\n                                'preload': true\n                            });\n                        });\n                        return;\n                    }\n                }\n\n                if (videotypes.includes('vimeo') || currenttype == 'vimeo') {\n                    // VIMEO:: Extract id from the URL.\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:vimeo\\.com)\\/(?:channels\\/[A-Za-z0-9]+\\/|)([^/]+)/g;\n                    let match = regex.exec(url);\n                    let vid = match ? match[1] : null;\n                    if (vid) {\n                        url = 'https://vimeo.com/' + vid;\n                        videourlinput.val(url);\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('vimeo');\n                        require(['mod_interactivevideo/player/vimeo'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true,\n                            });\n                        });\n                        return;\n                    }\n                }\n\n                // DAILYMOTION:: Check if the video is from daily motion.\n                if (videotypes.includes('dailymotion') || currenttype == 'dailymotion') {\n                    let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:dai\\.ly|dailymotion\\.com)\\/(?:embed\\/video\\/|video\\/|)([^/]+)/g;\n                    let match = regex.exec(url);\n                    if (match) {\n                        videowrapper.show();\n                        // Show loader while the video is loading\n                        videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                        videotype.val('dailymotion');\n                        require(['mod_interactivevideo/player/dailymotion'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true,\n                                'preload': true\n                            });\n                        });\n                        return;\n                    }\n                }\n\n                // WISTIA:: Check if the video is from wistia e.g. https://sokunthearithmakara.wistia.com/medias/kojs3bi9bf.\n                if (videotypes.includes('wistia') || currenttype == 'wistia') {\n                    const regexWistia = /(?:https?:\\/\\/)?(?:www\\.)?(?:wistia\\.com)\\/medias\\/([^/]+)/g;\n                    let match = regexWistia.exec(url);\n                    const mediaId = match ? match[1] : null;\n                    if (mediaId) {\n                        videowrapper.show();\n                        videotype.val('wistia');\n                        require(['mod_interactivevideo/player/wistia'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true,\n                            });\n                        });\n                        return;\n                    }\n                }\n\n                // VIDEO URL:: Check if the link is a direct video link and video is \"canplay\".\n                if (videotypes.includes('videolink') || currenttype == 'html5video') {\n                    if (await checkVideo(url)) {\n                        // Show loader while the video is loading.\n                        videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                        videotype.val('html5video');\n                        require(['mod_interactivevideo/player/html5video'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true\n                            });\n                        });\n                        return;\n                    }\n                }\n\n                // Invalid video url.\n                const strings = await str.get_strings([\n                    {key: 'invalidvideourl', component: 'mod_interactivevideo'},\n                    {key: 'error', component: 'core'}\n                ]);\n                notification.alert(strings[1], strings[0]);\n                videourlinput.val('').addClass('is-invalid');\n                videowrapper.hide();\n            });\n\n            startassistinput.on('change blur', async function() {\n                startassistinput.removeClass('is-invalid');\n                startassistinput.next('.form-control-feedback').remove();\n                if (startassistinput.val() == '') {\n                    return;\n                }\n                let strings = await str.get_strings([\n                    {key: 'starttimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'starttimelessthanendtime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = startassistinput.val().split(':');\n                let time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                startinput.val(time.toFixed(2));\n                if (Number(startinput.val()) > totaltime) {\n                    startassistinput.addClass('is-invalid');\n                    startassistinput.next('.form-control-feedback').remove();\n                    startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    startassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(endinput.val()) && Number(endinput.val()) != 0\n                        && Number(startinput.val()) > Number(endinput.val())) {\n                        startassistinput.addClass('is-invalid');\n                        startassistinput.next('.form-control-feedback').remove();\n                        startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        startassistinput.val(convertSecondsToHMS(endinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(0));\n                    }\n                }\n            });\n\n            endassistinput.on('change blur', async function() {\n                endassistinput.removeClass('is-invalid');\n                endassistinput.next('.invalid-feedback').remove();\n                if (endassistinput.val() == '') {\n                    return;\n                }\n                const strings = await str.get_strings([\n                    {key: 'endtimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'endtimegreaterstarttime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = endassistinput.val().split(':');\n                let time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                endinput.val(time.toFixed(2));\n                if (Number(endinput.val()) > totaltime) {\n                    endassistinput.addClass('is-invalid');\n                    endassistinput.next('.invalid-feedback').remove();\n                    endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(startinput.val()) && Number(endinput.val()) < Number(startinput.val())) {\n                        endassistinput.addClass('is-invalid');\n                        endassistinput.next('.invalid-feedback').remove();\n                        endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        endassistinput.val(convertSecondsToHMS(startinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(totaltime));\n                    }\n                }\n            });\n\n            // Upload video to get draft item id.\n            $(document).on('click', '#id_upload', async function() {\n                const data = {\n                    contextid: M.cfg.contextid,\n                    id: id,\n                    usercontextid: usercontextid,\n                };\n\n                let string = await str.get_string('uploadvideo', 'mod_interactivevideo');\n                const form = new ModalForm({\n                    modalConfig: {\n                        title: string,\n                    },\n                    formClass: \"mod_interactivevideo\\\\form\\\\video_upload_form\",\n                    args: data,\n                });\n\n                form.show();\n\n                form.addEventListener(form.events.FORM_SUBMITTED, async(e) => {\n                    const url = e.detail.url;\n                    videofile.val(url);\n                    let name = e.detail.name;\n                    if ($(`[name=\"name\"]`).val() == '') {\n                        $(`[name=\"name\"]`).val(name.split('.').slice(0, -1).join('.'));\n                    }\n                    videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                    require(['mod_interactivevideo/player/html5video'], function(VP) {\n                        player = new VP(url, 0, null, {\n                            'showControls': true\n                        });\n                    });\n                    videoinput.val(e.detail.video);\n                    uploadfield.hide();\n                    deletefield.show();\n                });\n            });\n\n            $(document).on('change', '#id_source', function() {\n                if ($(this).val() == 'file') {\n                    if (videoinput.val() == '' || videoinput.val() == '0') {\n                        uploadfield.show();\n                        deletefield.hide();\n                    } else {\n                        uploadfield.hide();\n                        deletefield.show();\n                    }\n                } else {\n                    uploadfield.hide();\n                    deletefield.hide();\n                }\n            });\n\n            $(document).on('click', '#id_delete', async function() {\n                const strings = await str.get_strings([\n                    {key: 'deletevideo', component: 'mod_interactivevideo'},\n                    {key: 'deletevideoconfirm', component: 'mod_interactivevideo'},\n                    {key: 'delete', component: 'mod_interactivevideo'},\n                ]);\n                try {\n                    notification.deleteCancelPromise(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                    ).then(() => {\n                        videoinput.val('');\n                        videofile.val('');\n                        videowrapper.empty().hide();\n                        uploadfield.show();\n                        deletefield.hide();\n                        return;\n                    }).catch(() => {\n                        return;\n                    });\n                } catch {\n                    notification.saveCancel(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                        function() {\n                            videoinput.val('');\n                            videofile.val('');\n                            videowrapper.empty().hide();\n                            uploadfield.show();\n                            deletefield.hide();\n                        }\n                    );\n                }\n            });\n\n            // DOM ready.\n            $(function() {\n                uploadfield.hide();\n                deletefield.hide();\n                if (videourlinput.val() != '') {\n                    videourlinput.trigger('input');\n                }\n                if (sourceinput.val() != 'url') {\n                    if (videoinput.val() != '' && videoinput.val() != '0') {\n                        uploadfield.hide();\n                        deletefield.show();\n                        const url = videofile.val();\n                        videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                        require(['mod_interactivevideo/player/html5video'], function(VP) {\n                            player = new VP(url, 0, null, {\n                                'showControls': true\n                            });\n                        });\n                    } else {\n                        uploadfield.show();\n                        deletefield.hide();\n                    }\n                }\n                // Display warning message if the completion is not unlocked.\n                if ($('[name=completionunlocked]').val() == '0') {\n                    $('#warning').removeClass('d-none');\n                    $('[name=videourl], [name=startassist], [name=endassist]').prop('readonly', 'true');\n                    $('#fitem_id_source, #fitem_id_delete, #fitem_id_upload').hide();\n                    $('#id_upload').prop('disabled', 'true');\n                    $('#id_delete').prop('disabled', 'true');\n                }\n\n                $('#background-loading').fadeOut(300);\n            });\n\n            startassistinput.val(convertSecondsToHMS(startinput.val()));\n            endassistinput.val(convertSecondsToHMS(endinput.val()));\n\n        }\n    };\n});"],"names":["define","$","notification","ModalForm","str","id","usercontextid","videotypes","totaltime","player","videowrapper","endinput","startinput","startassistinput","endassistinput","totaltimeinput","videourlinput","sourceinput","videoinput","uploadfield","deletefield","videofile","videotype","posterimage","convertSecondsToHMS","s","hours","Math","floor","minutes","seconds","toFixed","result","document","on","async","audio","addClass","show","ratio","aspectratio","css","val","title","duration","Number","text","posterImage","whenPlayerReady","strings","get_strings","key","component","after","removeClass","next","remove","currenttype","destroy","url","this","trim","hide","includes","RegExp","exec","html","require","VP","match","vid","Promise","resolve","querySelector","video","createElement","src","addEventListener","checkVideo","alert","parts","split","time","data","contextid","M","cfg","string","get_string","form","modalConfig","formClass","args","events","FORM_SUBMITTED","e","detail","name","slice","join","deleteCancelPromise","then","empty","catch","saveCancel","trigger","prop","fadeOut"],"mappings":"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"}