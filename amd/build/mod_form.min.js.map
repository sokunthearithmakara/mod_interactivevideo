{"version":3,"file":"mod_form.min.js","sources":["../src/mod_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Interactive Video module form\n *\n * @module     mod_interactivevideo/mod_form\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core_form/modalform', 'core/str'], function($, notification, ModalForm, str) {\n    return {\n        /**\n         * Init function on page loads.\n         * @param {Number} id module id\n         * @param {Number} usercontextid user context id\n         */\n        'init': function(id, usercontextid) {\n            let totaltime, player;\n            let videowrapper = $('#video-wrapper');\n            let endinput = $('input[name=end]');\n            let startinput = $('input[name=start]');\n            let startassistinput = $('input[name=startassist]');\n            let endassistinput = $('input[name=endassist]');\n            let totaltimeinput = $('input[name=totaltime]');\n            let videourlinput = $('input[name=videourl]');\n            let sourceinput = $('input[name=source]');\n            let videoinput = $('input[name=video]');\n            let uploadfield = $(\"#fitem_id_upload\");\n            let deletefield = $(\"#fitem_id_delete\");\n            let videofile = $('input[name=videofile]');\n            let videotype = $('input[name=type]');\n            let posterimage = $('input[name=posterimage]');\n\n            /**\n             * Format seconds to HH:MM:SS.\n             * @param {Number} s seconds\n             * @returns\n             */\n            const convertSecondsToHMS = (s) => {\n                let hours = Math.floor(s / 3600);\n                let minutes = Math.floor((s - (hours * 3600)) / 60);\n                let seconds = s - (hours * 3600) - (minutes * 60);\n                seconds = seconds.toFixed(2);\n                let result = (hours < 10 ? \"0\" + hours : hours);\n                result += \":\" + (minutes < 10 ? \"0\" + minutes : minutes);\n                result += \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n                return result;\n            };\n\n            /**\n             * Scripts to run when the player is ready.\n             */\n            const whenPlayerReady = async function() {\n                videowrapper.show();\n                // Recalculate the ratio of the video.\n                let ratio = player.aspectratio;\n                if (ratio < 1) {\n                    ratio = 1;\n                }\n                $(\"#video-wrapper\").css('padding-bottom', (1 / ratio) * 100 + '%');\n\n                const duration = await player.getDuration();\n                totaltime = Number(duration.toFixed(2));\n                totaltimeinput.val(totaltime);\n                if (Number(endinput.val()) > 0 && Number(endinput.val()) > totaltime) {\n                    endinput.val(totaltime);\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                }\n\n                if (Number(startinput.val()) > 0 && Number(startinput.val()) > totaltime) {\n                    startinput.val(0);\n                    startassistinput.val('00:00:00.00');\n                }\n\n                if (endassistinput.val() == '00:00:00.00' || endassistinput.val() == '') {\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                    endinput.val(totaltime);\n                }\n                $(\"#videototaltime\").text(\"<= \" + convertSecondsToHMS(totaltime));\n                posterimage.val(player.posterImage);\n            };\n\n            $(document).on('iv:playerReady', function() {\n                whenPlayerReady();\n            });\n\n            $(document).on('iv:playerError', async function() {\n                let strings = await str.get_strings([\n                    {key: 'thereisanissueloadingvideo', component: 'mod_interactivevideo'},\n                ]);\n                videourlinput.addClass('is-invalid');\n                videourlinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                    + strings[0] + '</div>');\n            });\n\n            const checkVideo = (url) => new Promise((resolve) => {\n                // Remove video element if it exists.\n                if (document.querySelector('video')) {\n                    document.querySelector('video').remove();\n                }\n                let video = document.createElement('video');\n                video.src = url;\n                video.addEventListener('canplay', function() {\n                    resolve(true);\n                });\n\n                video.addEventListener('error', function() {\n                    resolve(false);\n                });\n            });\n\n            videourlinput.on('input', async function() {\n                videourlinput.removeClass('is-invalid');\n                videourlinput.next('.form-control-feedback').remove();\n                videotype.val('');\n                if (player) {\n                    player.destroy();\n                }\n                let url = $(this).val().trim();\n                if (url == '') {\n                    videowrapper.hide();\n                    return;\n                }\n\n                // YOUTUBE:: Check if the video is a youtube video.\n                let regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube.com|youtu.be)(?:\\/embed\\/|\\/watch\\?v=|\\/)([^/]+)/g;\n                let match = regex.exec(url);\n                if (match) {\n                    videowrapper.show();\n                    // Show loader while the video is loading.\n                    videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                    videotype.val('yt');\n                    require(['mod_interactivevideo/player/yt'], function(VP) {\n                        player = new VP(url, 0, null, true, false, true);\n                    });\n                    return;\n                }\n\n                // VIMEO:: Extract id from the URL.\n                regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:vimeo\\.com)\\/(?:channels\\/[A-Za-z0-9]+\\/|)([^\\/]+)/g;\n                match = regex.exec(url);\n                let vid = match ? match[1] : null;\n                if (vid) {\n                    url = 'https://vimeo.com/' + vid;\n                    videourlinput.val(url);\n                    videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                    videotype.val('vimeo');\n                    require(['mod_interactivevideo/player/vimeo'], function(VP) {\n                        player = new VP(url, 0, null, true);\n                    });\n                    return;\n                }\n\n                // DAILYMOTION:: Check if the video is from daily motion.\n                regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:dai\\.ly|dailymotion\\.com)\\/(?:embed\\/video\\/|video\\/|)([^\\/]+)/g;\n                match = regex.exec(url);\n                if (match) {\n                    videowrapper.show();\n                    // Show loader while the video is loading\n                    videowrapper.html('<div id=\"player\" class=\"w-100\"></div>');\n                    videotype.val('dailymotion');\n                    require(['mod_interactivevideo/player/dailymotion'], function(VP) {\n                        player = new VP(url, 0, null, true);\n                    });\n                    return;\n                }\n\n                // WISTIA:: Check if the video is from wistia e.g. https://sokunthearithmakara.wistia.com/medias/kojs3bi9bf.\n                const regexWistia = /(?:https?:\\/\\/)?(?:www\\.)?(?:wistia\\.com)\\/medias\\/([^/]+)/g;\n                match = regexWistia.exec(url);\n                const mediaId = match ? match[1] : null;\n                if (mediaId) {\n                    videowrapper.show();\n                    videotype.val('wistia');\n                    require(['mod_interactivevideo/player/wistia'], function(VP) {\n                        player = new VP(url, 0, null, true);\n                    });\n                    return;\n                }\n\n                // VIDEO URL:: Check if the link is a direct video link and video is \"canplay\".\n                if (await checkVideo(url)) {\n                    // Show loader while the video is loading.\n                    videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                    videotype.val('html5video');\n                    require(['mod_interactivevideo/player/html5video'], function(VP) {\n                        player = new VP(url, 0, null, true);\n                    });\n                    return;\n                }\n\n                // Invalid video url.\n                const strings = await str.get_strings([\n                    {key: 'invalidvideourl', component: 'mod_interactivevideo'},\n                    {key: 'error', component: 'core'}\n                ]);\n                notification.alert(strings[1], strings[0]);\n                videowrapper.hide();\n            });\n\n            startassistinput.on('change blur', async function() {\n                startassistinput.removeClass('is-invalid');\n                startassistinput.next('.form-control-feedback').remove();\n                if (startassistinput.val() == '') {\n                    return;\n                }\n                let strings = await str.get_strings([\n                    {key: 'starttimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'starttimelessthanendtime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = startassistinput.val().split(':');\n                let time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                startinput.val(time);\n                if (Number(startinput.val()) > totaltime) {\n                    startassistinput.addClass('is-invalid');\n                    startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    startassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(endinput.val()) && Number(endinput.val()) != 0\n                        && Number(startinput.val()) > Number(endinput.val())) {\n                        startassistinput.addClass('is-invalid');\n                        startassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        startassistinput.val(convertSecondsToHMS(endinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(0));\n                    }\n                }\n            });\n\n            endassistinput.on('change blur', async function() {\n                endassistinput.removeClass('is-invalid');\n                endassistinput.next('.form-control-feedback').remove();\n                if (endassistinput.val() == '') {\n                    return;\n                }\n                const strings = await str.get_strings([\n                    {key: 'endtimelesstotaltime', component: 'mod_interactivevideo'},\n                    {key: 'endtimegreaterstarttime', component: 'mod_interactivevideo'},\n                    {key: 'invalidtimestampformat', component: 'mod_interactivevideo'},\n                ]);\n                const parts = endassistinput.val().split(':');\n                const time = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                endinput.val(time);\n                if (Number(endinput.val()) > totaltime) {\n                    endassistinput.addClass('is-invalid');\n                    endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                        + strings[0] + '</div>');\n                    endassistinput.val(convertSecondsToHMS(totaltime));\n                } else {\n                    if (Number(startinput.val()) && Number(endinput.val()) < Number(startinput.val())) {\n                        endassistinput.addClass('is-invalid');\n                        endassistinput.after('<div class=\"form-control-feedback invalid-feedback d-inline\">'\n                            + strings[1] + '</div>');\n                        endassistinput.val(convertSecondsToHMS(startinput.val()));\n                    } else if (Number(startinput.val()) >= Number(endinput.val())) {\n                        endassistinput.val(convertSecondsToHMS(totaltime));\n                    }\n                }\n            });\n\n            // Upload video to get draft item id.\n            $(document).on('click', '#id_upload', async function() {\n                const data = {\n                    contextid: M.cfg.contextid,\n                    id: id,\n                    usercontextid: usercontextid,\n                };\n\n                let string = await str.get_string('uploadvideo', 'mod_interactivevideo');\n                const form = new ModalForm({\n                    modalConfig: {\n                        title: string,\n                    },\n                    formClass: \"mod_interactivevideo\\\\form\\\\video_upload_form\",\n                    args: data,\n                });\n\n                form.show();\n\n                form.addEventListener(form.events.FORM_SUBMITTED, async (e) => {\n                    const url = e.detail.url;\n                    videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                    require(['mod_interactivevideo/player/html5video'], function(VP) {\n                        player = new VP(url, 0, null, true);\n                    });\n                    videoinput.val(e.detail.video);\n                    uploadfield.hide();\n                    deletefield.show();\n                });\n            });\n\n            $(document).on('change', '#id_source', function() {\n                if ($(this).val() == 'file') {\n                    if (videoinput.val() == '' || videoinput.val() == '0') {\n                        uploadfield.show();\n                        deletefield.hide();\n                    } else {\n                        uploadfield.hide();\n                        deletefield.show();\n                    }\n                } else {\n                    uploadfield.hide();\n                    deletefield.hide();\n                }\n            });\n\n            $(document).on('click', '#id_delete', async function() {\n                const strings = await str.get_strings([\n                    {key: 'deletevideo', component: 'mod_interactivevideo'},\n                    {key: 'deletevideoconfirm', component: 'mod_interactivevideo'},\n                    {key: 'delete', component: 'mod_interactivevideo'},\n                ]);\n                try {\n                    notification.deleteCancel(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                        function() {\n                            videoinput.val('');\n                            videofile.val('');\n                            videowrapper.empty().hide();\n                            uploadfield.show();\n                            deletefield.hide();\n                        });\n                } catch {\n                    notification.deleteCancelPromise(\n                        strings[0],\n                        strings[1],\n                        strings[2],\n                    ).then(() => {\n                        videoinput.val('');\n                        videofile.val('');\n                        videowrapper.empty().hide();\n                        uploadfield.show();\n                        deletefield.hide();\n                        return;\n                    }).catch(() => {\n                        return;\n                    });\n                }\n            });\n\n            // DOM ready.\n            $(function() {\n                uploadfield.hide();\n                deletefield.hide();\n                if (videourlinput.val() != '') {\n                    videourlinput.trigger('input');\n                }\n                if (sourceinput.val() != 'url') {\n                    if (videoinput.val() != '' && videoinput.val() != '0') {\n                        uploadfield.hide();\n                        deletefield.show();\n                        const url = videofile.val();\n                        videowrapper.html('<video id=\"player\" class=\"w-100\"></video>');\n                        require(['mod_interactivevideo/player/html5video'], function(VP) {\n                            player = new VP(url, 0, null, true);\n                        });\n                    } else {\n                        uploadfield.show();\n                        deletefield.hide();\n                    }\n                }\n                // Display warning message if the completion is not unlocked.\n                if ($('[name=completionunlocked]').val() == '0') {\n                    $('#warning').removeClass('d-none');\n                    $('[name=videourl], [name=startassist], [name=endassist]').prop('readonly', 'true');\n                    $('#fitem_id_source, #fitem_id_delete, #fitem_id_upload').hide();\n                    $('#id_upload').prop('disabled', 'true');\n                    $('#id_delete').prop('disabled', 'true');\n                }\n            });\n\n            startassistinput.val(convertSecondsToHMS(startinput.val()));\n            endassistinput.val(convertSecondsToHMS(endinput.val()));\n\n        }\n    };\n});"],"names":["define","$","notification","ModalForm","str","id","usercontextid","totaltime","player","videowrapper","endinput","startinput","startassistinput","endassistinput","totaltimeinput","videourlinput","sourceinput","videoinput","uploadfield","deletefield","videofile","videotype","posterimage","convertSecondsToHMS","s","hours","Math","floor","minutes","seconds","toFixed","result","document","on","async","show","ratio","aspectratio","css","duration","getDuration","Number","val","text","posterImage","whenPlayerReady","strings","get_strings","key","component","addClass","after","removeClass","next","remove","destroy","url","this","trim","hide","regex","match","exec","html","require","VP","vid","Promise","resolve","querySelector","video","createElement","src","addEventListener","checkVideo","alert","parts","split","time","data","contextid","M","cfg","string","get_string","form","modalConfig","title","formClass","args","events","FORM_SUBMITTED","e","detail","deleteCancel","empty","deleteCancelPromise","then","catch","trigger","prop"],"mappings":"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"}