{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for the form plugin.\n *\n * @module     ivplugin_form/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport Ajax from 'core/ajax';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'mod_interactivevideo/libraries/jquery-ui';\nimport Templates from 'core/templates';\nimport DynamicForm from 'core_form/dynamicform';\nimport {renderAnnotationLogs} from 'mod_interactivevideo/report';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nimport Notification from 'core/notification';\nexport default class Form extends Base {\n    /**\n     * Do nothing on the interactions page.\n     */\n    postEditCallback() {\n        // Do nothing\n    }\n\n    /**\n     * Render the main container for the form plugin.\n     * @param {Object} annotation annotation object\n     */\n    async renderViewer(annotation) {\n        let self = this;\n        if (this.isEditMode()) {\n            let formfields = [\n                {\n                    'icon': 'bi bi-alphabet-uppercase',\n                    'type': 'header',\n                    'label': M.util.get_string('headerfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-text-paragraph',\n                    'type': 'html',\n                    'label': M.util.get_string('htmlfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-hr',\n                    'type': 'linebreak',\n                    'label': M.util.get_string('linebreakfield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-input-cursor-text',\n                    'type': 'text',\n                    'label': M.util.get_string('textfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-textarea-resize',\n                    'type': 'textarea',\n                    'label': M.util.get_string('textareafield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-card-text',\n                    'type': 'editor',\n                    'label': M.util.get_string('editorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-menu-button-wide',\n                    'type': 'select',\n                    'label': M.util.get_string('selectfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-check2-square',\n                    'type': 'advcheckbox',\n                    'label': M.util.get_string('advcheckboxfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-record-circle',\n                    'type': 'radio',\n                    'label': M.util.get_string('radiofield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-calendar3-event',\n                    'type': 'date',\n                    'label': M.util.get_string('dateselectorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-calendar3-week',\n                    'type': 'week',\n                    'label': M.util.get_string('weekfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-calendar3',\n                    'type': 'month',\n                    'label': M.util.get_string('monthfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-clock',\n                    'type': 'time',\n                    'label': M.util.get_string('timefield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-stopwatch',\n                    'type': 'duration',\n                    'label': M.util.get_string('durationfield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-sliders2',\n                    'type': 'range',\n                    'label': M.util.get_string('rangefield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-file-earmark-arrow-up',\n                    'type': 'filemanager',\n                    'label': M.util.get_string('filemanagerfield', 'ivplugin_form'),\n                }\n            ];\n            const dataForTemplate = {\n                id: annotation.id,\n                items: formfields,\n            };\n            const template = await Templates.render('ivplugin_form/formedit_modal', dataForTemplate);\n            let $modal = $(template);\n            $modal.appendTo('body');\n            $('#form-modal').modal('show');\n\n            $('#form-modal').on('hidden.bs.modal', function() {\n                $(this).remove();\n            });\n\n            $('#form-modal').on('shown.bs.modal', async function() {\n                let content = await self.render(annotation, 'json');\n                self.postContentRender(annotation, formfields, content);\n            });\n\n            $(`#message[data-id='${annotation.id}']`).find('#content')\n                .append(`<div id=\"formjson\" class=\"d-none\"></div>`);\n        } else {\n            await super.renderViewer(annotation);\n            let content = await self.render(annotation, 'json');\n            $(`#message[data-id='${annotation.id}']`).find('#content')\n                .append(`<div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div>\n                    <div id=\"formjson\" class=\"d-none\"></div>`);\n            this.postContentRender(annotation, '', content);\n        }\n    }\n\n    /**\n     * Apply render changes after the form is rendered.\n     */\n    postFormRender() {\n        $('form .fitem [data-type=\"time\"]').attr('type', 'time');\n        $('form .fitem [data-type=\"week\"]').attr('type', 'week');\n        $('form .fitem [data-type=\"month\"]').attr('type', 'month');\n        $('form .fitem [data-type=\"date\"]').attr('type', 'date');\n        $('form .fitem textarea:visible').trigger('input');\n        $('form .fitem [data-type=\"datetime\"]').attr('type', 'datetime-local');\n        $('form .fitem [data-type=\"range\"]').attr('type', 'range').removeClass('form-control').addClass('form-control-range');\n        $(document).off('click', 'form .fitem .filemanager.fm-noitems')\n            .on('click', 'form .fitem .filemanager.fm-noitems', function(e) {\n                e.stopImmediatePropagation();\n                if ($('#wrapper').hasClass('fullscreen')) {\n                    setTimeout(() => {\n                        const uploadModal = $('.moodle-dialogue-base[aria-hidden=\"false\"]');\n                        // Move modal from body to current form.\n                        uploadModal.appendTo('#wrapper');\n                        $('body > .moodle-dialogue-base[aria-hidden=\"false\"]').remove();\n                    }, 300);\n                }\n            });\n    }\n\n    /**\n     * Render the input group lists for repeatable options.\n     * @param {String} node selector for the form container\n     */\n    repeatableValues(node) {\n        $(`${node} form .fitem [data-type=\"keyvalue\"]`).each(function() {\n            let $this = $(this);\n            let dataId = $this.attr('data-id');\n            // Remove the existing repeatable div\n            $(`div#${dataId}-repeatable`).remove();\n\n            let defaultValues = $(`input[type=\"hidden\"][data-type=\"default\"][data-id=${dataId}]`).val().split(\",\");\n            let value = $this.val();\n            let isRadio = $(this).attr('data-radio') == 'true';\n            let rows = value.split(\"\\n\");\n            let html = '';\n            if (value != '' && rows.length > 0) {\n                rows.forEach(function(row, i) {\n                    let rowvalues = row.split('=');\n                    let key = rowvalues[0].trim();\n                    let val = rowvalues[1].trim();\n                    if (key != '' && val != '') {\n                        html += `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\">\n                        <div class=\"input-group-text border-0 rounded-0 pl-0\">\n                            <i class=\"bi bi-grip-vertical mr-2 cursor-move\"></i>\n                            <input type=\"checkbox\" ${defaultValues.includes(key) ? 'checked' : ''}>\n                        </div>\n                        <input type=\"text\" class=\"form-control key\" value=\"${key}\">\n                        <input type=\"text\" value=\"${val}\" class=\"form-control value\">\n                        <div class=\"input-group-append\">\n                        <button class=\"btn add-row btn-secondary\" type=\"button\"><i class=\"bi bi-plus-lg\"></i></button>\n                        <button class=\"btn btn-danger delete-row rounded-0\" ${i == 0 ? 'disabled' : ''} type=\"button\">\n                        <i class=\"bi bi-trash3-fill\"></i></button>\n                        </div></div>`;\n                    }\n                });\n            } else {\n                html = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\">\n                        <div class=\"input-group-text border-0 rounded-0 pl-0\">\n                            <i class=\"bi bi-grip-vertical mr-2 cursor-move\"></i>\n                            <input type=\"checkbox\"/>\n                        </div>\n                        <input type=\"text\" class=\"form-control key\">\n                        <input type=\"text\" class=\"form-control value\">\n                        <div class=\"input-group-append\">\n                        <button class=\"btn add-row btn-secondary\" type=\"button\"><i class=\"bi bi-plus-lg\"></i></button>\n                        <button class=\"btn btn-danger delete-row rounded-0 disabled\" disabled type=\"button\">\n                        <i class=\"bi bi-trash3-fill\"></i></button>\n                        </div></div>`;\n            }\n            $this.after(`<div id=\"${dataId}-repeatable\" data-radio=\"${isRadio}\" data-id=\"${dataId}\"\n                 class=\"w-100 repeatable\">${html}</div>`);\n            $this.addClass('d-none');\n            $(`form .fitem #${dataId}-repeatable`).sortable({\n                placeholder: \"ui-state-highlight\",\n                handle: '.bi-grip-vertical',\n                stop: function() {\n                    // Handle delete buttons. The first one should be disabled.\n                    $(`${node} form .repeatable .delete-row`).removeClass('disabled').removeAttr('disabled');\n                    $(`${node} form .repeatable .delete-row`).first().addClass('disabled').attr('disabled', 'disabled');\n                    $(`${node} form .repeatable input[type=text]`).trigger('input');\n                }\n            });\n        });\n        $(document).off('click', `${node} .repeatable .add-row`).on('click', `${node} .repeatable .add-row`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let $thisrow = $(this);\n            let $parent = $thisrow.closest('.input-group');\n            let $row = $parent.clone();\n            $row.find('input').val('');\n            $row.find('input[type=\"checkbox\"]').prop('checked', false);\n            $row.find('.delete-row').removeClass('disabled').removeAttr('disabled');\n            $parent.after($row);\n        });\n        $(document).off('click', `${node} .repeatable .delete-row`).on('click', `${node} .repeatable .delete-row`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let $thisrow = $(this);\n            let $parent = $thisrow.closest('.input-group');\n            $parent.remove();\n            $(`${node} form .repeatable input[type=text]`).trigger('input');\n        });\n        $(document).on('input change', `${node} form .repeatable input`, function() {\n            let $this = $(this);\n            let $parent = $this.closest('.repeatable');\n            let $inputs = $parent.find('.input-group');\n            let values = {};\n            let defaultValues = [];\n            let isRadio = $parent.attr('data-radio') == 'true';\n            if (isRadio && $this.attr('type') == 'checkbox') {\n                // Make sure only one checkbox is checked.\n                $inputs.find('input[type=\"checkbox\"]').not(this).prop('checked', false);\n\n            }\n            $inputs.each(function() {\n                let $input = $(this);\n                if ($input.find('input.key').val() != '' && $input.find('input.value').val() != '') {\n                    let checkbox = $input.find('input[type=\"checkbox\"]');\n                    if (checkbox.prop('checked')) {\n                        defaultValues.push($input.find('input.key').val().trim());\n                    }\n                    values[$input.find('input.key').val().trim()] = $input.find('input.value').val().trim();\n                }\n\n            });\n            let keys = Object.keys(values);\n            let rows = keys.map((key) => key + '=' + values[key]);\n            $('textarea[data-id=\"' + $parent.attr('data-id') + '\"]').val(rows.join(\"\\n\"));\n            defaultValues = [...new Set(defaultValues)];\n            $('input[type=\"hidden\"][data-type=\"default\"][data-id=\"' + $parent.attr('data-id') + '\"]').val(defaultValues.join(\",\"));\n        });\n    }\n\n    /**\n     * Override the postContentRender method for the form plugin.\n     * @param {Object} annotation annotation object\n     * @param {Array} formfields form fields data\n     * @param {Object} content form content data\n     * @param {Boolean} reportpage report page flag\n     * @return {void}\n     */\n    postContentRender(annotation, formfields, content, reportpage = false) {\n        let self = this;\n        const $message = $(`#message[data-id='${annotation.id}']`);\n        if (annotation.text1 != 0) {\n            $message.find(`#formmeta`)\n                .append(`<div class=\"duedate\">${M.util.get_string('duedate', 'ivplugin_form')}: ${content.duedate}</div>`);\n        }\n\n        /**\n         * Fetch form submission data of the current user.\n         * @returns {Promise} form submission data\n         * @throws {Error} if an error occurs\n         */\n        const fetchData = () => {\n            return new Promise((resolve, reject) => {\n                Ajax.call([{\n                    args: {\n                        userid: this.userid,\n                        cmid: annotation.annotationid,\n                        annotationid: annotation.id,\n                        contextid: annotation.contextid,\n                    },\n                    contextid: annotation.contextid,\n                    methodname: 'ivplugin_form_get_log',\n                }])[0].then((response) => {\n                    resolve(JSON.parse(response.record));\n                }).catch((err) => {\n                    // Do nothing.\n                    reject(err);\n                });\n            });\n        };\n\n        /**\n         * Form fields data.\n         * @type {Array}\n         */\n        let formjson = [];\n\n        /**\n         * Render the list of form fields.\n         * @param {Array} fields form fields data\n         */\n        const renderList = (fields) => {\n            $(`#form-field-list`).empty();\n            if (fields) {\n                fields.forEach((item) => {\n                    let icon = formfields.find((field) => field.type === item.type).icon;\n                    $(`#form-field-list`)\n                        .append(`<li class=\"list-group-item d-flex align-items-start justify-content-between p-0\"\n                         data-id=\"${item.id}\" data-type=\"${item.type}\">\n                                    <div class=\"d-flex align-items-start pt-1\">\n                                    <i class=\"bi bi-grip-vertical px-2 cursor-move\"></i>\n                                    <i class=\"${icon} mr-2\"></i>\n                                    <div class=\"d-inline-block field-label cursor-pointer\">${item.formattedlabel}</div></div>\n                                    <div class=\"ml-auto d-flex\">\n                                        <button class=\"btn btn-sm rounded-0 editfield\"\n                                         title=\"${M.util.get_string('edit', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-pencil-square\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0 copyfield\"\n                                         title=\"${M.util.get_string('clone', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-copy\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0 text-danger deletefield\"\n                                         title=\"${M.util.get_string('delete', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-trash3\"></i></button>\n                                        </div>\n                                </li>`);\n                });\n            }\n            $message.find(`#formjson`).text(JSON.stringify(fields));\n        };\n\n        let tracking = [];\n        let trackingIndex = 0;\n        /**\n         * Update tracking data for redo and undo\n         * @param {Array} fields array of form fields\n         * @param {Array} actives array of active items\n         */\n        const saveTracking = (fields, actives) => {\n            if (trackingIndex < tracking.length - 1) {\n                // Remove all the tracking data after the current index.\n                tracking = tracking.slice(0, trackingIndex + 1);\n            }\n            tracking.push({\n                items: JSON.stringify(fields),\n                actives: actives,\n                at: new Date().getTime(),\n            });\n            tracking.sort((a, b) => a.at - b.at);\n            trackingIndex = tracking.length - 1;\n            $('#save-close #undo').removeAttr('disabled');\n            $('#save-close #redo').attr('disabled', 'disabled');\n            if (tracking.length == 1) {\n                $('#save-close #undo').attr('disabled', 'disabled');\n            }\n            $('#save-close #save').removeAttr('disabled');\n        };\n\n        let previewform = null; // DynamicForm instance.\n\n        /**\n         * Activate the sortable fields.\n         */\n        const activateFieldsSortable = () => {\n            $('#form-preview form').sortable({\n                items: \".fitem.row:not(.femptylabel):not([hidden]), fieldset.collapsible\",\n                connectWith: \"#form-preview form .fcontainer\",\n            });\n\n            $('#form-preview form .fcontainer').sortable({\n                items: \".fitem.row:not(.femptylabel):not([hidden])\",\n                connectWith: \"#form-preview form .fcontainer, #form-preview form\",\n            });\n            $('#form-preview form, #form-preview form .fcontainer').sortable(\"option\", {\n                placeholder: \"ui-state-highlight\",\n                forcePlaceholderSize: true,\n                cursor: 'move',\n                forceHelperSize: true,\n                tolerance: 'pointer',\n            });\n        };\n\n        /**\n         * Preview the form.\n         * @param {Array} data form fields data\n         * @param {Number} id field id\n         * @param {Boolean} updateDraft update draft status\n         */\n        const previewForm = (data, id = null, updateDraft = true) => {\n            $message.find(`#form-preview`).empty();\n            const selector = document.querySelector(`#message[data-id='${annotation.id}'] #form-preview`);\n            previewform = new DynamicForm(selector, 'ivplugin_form\\\\submitform_form');\n            if (data === null || data.length == 0) {\n                $('#form-preview').removeClass('loader');\n                return;\n            }\n            $('#form-preview').addClass('loader');\n            formdata.formjson = JSON.stringify(data);\n            previewform.load(formdata);\n            const checkFormLoaded = () => {\n                if ($message.find(`#form-preview form`).length > 0) {\n                    self.postFormRender();\n                } else {\n                    requestAnimationFrame(checkFormLoaded);\n                }\n            };\n            requestAnimationFrame(checkFormLoaded);\n            if (id) {\n                // Loop until the form element is found and highlight the current field.\n                const highlightField = () => {\n                    let element = document.querySelector('#form-preview form');\n                    if (element) {\n                        $(`#form-preview #fitem_field-${id},\n                             #form-preview fieldset[id^=id_field-${id}],\n                             #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                             #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                        let field = element.querySelector(`#form-preview .field-highlight`);\n                        let isHeader = $('.field-highlight').hasClass(`collapsible`);\n                        if (field) {\n                            field.scrollIntoView({behavior: 'smooth', block: isHeader ? 'start' : 'center'});\n                        }\n                    } else {\n                        requestAnimationFrame(highlightField);\n                    }\n                };\n                requestAnimationFrame(highlightField);\n            }\n            if (updateDraft) {\n                saveTracking(data, id);\n            }\n\n            if (!self.isEditMode() && $message.attr('data-placement') == 'popup') {\n                const checkFormLoaded = () => {\n                    if ($message.find(`#form-preview form`).length > 0) {\n                        // Create the modal footer\n                        let $actionbtns = $message.find(`#form-preview #form-action-btns`);\n                        let $clone = $actionbtns.clone();\n                        $actionbtns.remove();\n                        let footer = `<div class=\"modal-footer\">\n                            ${$clone.html()}\n                            </div>`;\n                        $message.find(`.modal-content .modal-footer`).remove();\n                        $message.find(`.modal-content`).append(footer);\n                    } else {\n                        requestAnimationFrame(checkFormLoaded);\n                    }\n                };\n                requestAnimationFrame(checkFormLoaded);\n            }\n\n            if (this.isEditMode()) {\n                const checkFormLoaded = () => {\n                    if ($('#form-preview form').length > 0) {\n                        activateFieldsSortable();\n                    } else {\n                        requestAnimationFrame(checkFormLoaded);\n                    }\n                };\n                requestAnimationFrame(checkFormLoaded);\n            }\n        };\n\n        if (content && content.fields != '' && content.fields !== null) {\n            formjson = content.fields;\n        }\n\n        let formdata = {};\n        if (reportpage) {\n            formdata = {\n                id: annotation.id,\n                contextid: annotation.contextid,\n                type: 'form',\n                courseid: annotation.courseid,\n                annotationid: 0,\n                editing: 0,\n                formjson: JSON.stringify(formjson),\n            };\n            previewForm(formjson);\n            return;\n        }\n\n        formdata = {\n            id: annotation.id,\n            contextid: annotation.contextid,\n            type: self.prop.name,\n            courseid: self.course,\n            annotationid: self.interaction,\n            completionid: self.completionid,\n            editing: self.isEditMode() ? 1 : 0,\n            formjson: JSON.stringify(formjson),\n        };\n\n        $message.off('click', `#submitform-submit`).on('click', `#submitform-submit`, e => {\n            if ($('body').hasClass('preview-mode')) { // Do not allow form submission in preview mode.\n                self.addNotification(M.util.get_string('formsubmissionisnotsavedinpreviewmode', 'ivplugin_form'), 'danger');\n                return;\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const submitted = () => {\n                let details = {};\n                const completeTime = new Date();\n                details.xp = annotation.xp;\n                details.duration = completeTime.getTime() - $('#video-wrapper').data('timestamp');\n                details.timecompleted = completeTime.getTime();\n                const completiontime = completeTime.toLocaleString();\n                let duration = self.formatTime(details.duration / 1000);\n                details.reportView = `<span data-toggle=\"tooltip\" data-html=\"true\" class=\"cursor-pointer\"\n                 data-title='<span class=\"d-flex flex-column align-items-start\"><span><i class=\"bi bi-calendar mr-2\"></i>\n                 ${completiontime}</span><span><i class=\"bi bi-stopwatch mr-2\"></i>${duration}</span></span>'>\n                 <i class=\"bi bi-list-check text-success\"></i><br><span>${annotation.xp}</span></span>`;\n                self.toggleCompletion(annotation.id, 'mark-done', 'automatic', details);\n                formdata.reviewing = 1;\n                if (annotation.char2 == 1 && (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000)) {\n                    $('#editsubmission').show();\n                }\n            };\n\n            if (self.userid == 1) { // Fake submission for guest user.\n                submitted();\n                return;\n            }\n            const event = previewform.trigger(previewform.events.SUBMIT_BUTTON_PRESSED);\n            if (!event.defaultPrevented) {\n                previewform.submitFormAjax();\n            }\n\n            // On validation error we have to rerender the custom fields.\n            previewform.addEventListener(previewform.events.SERVER_VALIDATION_ERROR, (e) => {\n                e.stopImmediatePropagation();\n                self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                previewform.notifyResetFormChanges();\n                self.postFormRender();\n                $message.find(`#form-preview #form-action-btns`).remove();\n            });\n\n            previewform.addEventListener(previewform.events.CLIENT_VALIDATION_ERROR, (e) => {\n                e.stopImmediatePropagation();\n                self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                previewform.notifyResetFormChanges();\n            });\n\n            previewform.addEventListener(previewform.events.FORM_SUBMITTED, e => {\n                e.preventDefault();\n                e.stopImmediatePropagation(); // Important; otherwise, event will repeat multiple times.\n                submitted();\n            });\n        });\n\n        $message.off('click', `#editsubmission`).on('click', `#editsubmission`, (e) => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            formdata.reviewing = 0;\n            $('#editsubmission').hide();\n            formjson = $message.find(`#formjson`).text();\n            formjson = JSON.parse(formjson);\n            previewForm(formjson);\n        });\n\n        $message.off('click', `#cancel-submit`).on('click', `#cancel-submit`, (e) => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $message.find(`.modal-content .modal-footer`).remove();\n            formdata.reviewing = 1;\n            $('#editsubmission').show();\n            previewForm(formjson);\n        });\n\n        if (!this.isEditMode()) {\n            if (annotation.completed) {\n                fetchData()\n                    .then((log) => {\n                        if (log) {\n                            let submission = JSON.parse(log.text1);\n                            let newformjson = formjson.map((item) => {\n                                item.value = submission['field-' + item.id];\n                                item.default = submission['field-' + item.id];\n                                if (item.type == 'radio') {\n                                    item.othertext = submission['field-' + item.id + '-otheroptiontext'];\n                                }\n                                return item;\n                            });\n                            formdata.reviewing = 1;\n                            formdata.submissionid = submission.id;\n                            $message.find(`#formjson`).text(JSON.stringify(formjson));\n                            previewForm(newformjson);\n                            // Append the edit button if applicable\n                            if (annotation.char2 == 1 && (annotation.text1 == 0\n                                || annotation.text1 > new Date().getTime() / 1000)) {\n                                $('#formmeta').append(`<button class=\"btn btn-primary ml-auto btn-sm\" id=\"editsubmission\">\n                                    <i class=\"bi bi bi-pencil-square mr-2\"></i>${M.util.get_string('edit', 'mod_interactivevideo')}\n                                    </button>`);\n                            }\n                        } else {\n                            if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                                previewForm(formjson);\n                            }\n                        }\n\n                        return;\n                    })\n                    .catch(() => {\n                        // Do nothing.\n                    });\n            } else {\n                if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                    previewForm(formjson);\n                } else {\n                    $('#formmeta').replaceWith(`<div class=\"alert alert-warning\">\n                        ${M.util.get_string('formnolongeravailable', 'ivplugin_form')}</div>`);\n                }\n            }\n        } else {\n            previewForm(formjson, null, true);\n            $message.find(`#formjson`).text(JSON.stringify(formjson));\n            renderList(formjson);\n        }\n\n        if (this.isEditMode()) {\n            if (formjson.length == 0) {\n                $('#form-field-list').append(`<div class=\"alert d-flex align-items-center rounded-0\n                     alert-warning ui-sortable-handle\"><i class=\"bi bi-card-checklist fs-25px mr-3\"></i>\n                    ${M.util.get_string('formempty', 'ivplugin_form')}</div>`);\n            }\n\n            /**\n             * Put form fields in DOM.\n             * @param {Array} ff form fields data\n             */\n            const saveFormJson = (ff) => {\n                $message.find(`#formjson`).text(JSON.stringify(ff));\n            };\n\n            /**\n             * Get the form fields data based on the current order.\n             */\n            const getFormJson = () => {\n                let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                let updatedFormJson = $message.find(`#form-field-list li`).map(function() {\n                    const id = $(this).attr('data-id');\n                    const field = currentFormFields.find((item) => item.id == id);\n                    return field;\n                }).get();\n                saveFormJson(updatedFormJson);\n                formjson = updatedFormJson;\n            };\n\n            $('#form-field-list').sortable({\n                placeholder: \"ui-state-highlight\",\n                cursor: 'move',\n                stop: function(event, ui) {\n                    const id = ui.item.attr('data-id');\n                    getFormJson();\n                    renderList(formjson);\n                    previewForm(formjson, id, true);\n                }\n            });\n\n            // Add the form field.\n            $message.off('click', `button.add-field`).on('click', `button.add-field`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let type = $(this).data('type');\n                let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                let newfieldmodal = `<div class=\"modal fade\" id=\"newfield-modal\" aria-labelledby=\"newfield-modal\"\n                 aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('addformfield', 'ivplugin_form',\n                    typeString)}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <i class=\"bi bi-x-lg fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                        'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"newfield-submit\">${M.util.get_string('save',\n                            'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(newfieldmodal);\n                $('#newfield-modal').modal('show');\n                $('#newfield-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                    $('body').addClass('modal-open');\n                });\n                $('#newfield-modal').on('shown.bs.modal', function() {\n                    let formfieldform = new DynamicForm(document.querySelector('#newfield-modal .modal-body'),\n                        'ivplugin_form\\\\form_fields\\\\' + type);\n                    let fields = [];\n                    if (formjson !== null) {\n                        fields = formjson.map((item) => {\n                            return {\n                                id: item.id,\n                                label: item.label,\n                                type: item.type,\n                            };\n                        });\n                    }\n\n                    formfieldform.load({\n                        contextid: M.cfg.contextid,\n                        type: type,\n                        annotationid: annotation.id,\n                        fields: JSON.stringify(fields),\n                    });\n\n                    document.querySelector('#newfield-submit').addEventListener('click', (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                        if (!event.defaultPrevented) {\n                            formfieldform.submitFormAjax();\n                        }\n                    });\n\n                    formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const response = e.detail;\n                        formjson = JSON.parse($message.find(`#formjson`).text());\n                        const active = $('#form-preview form .fitem.row.field-active');\n                        if (active.length > 0) {\n                            let id = active.attr('id');\n                            id = id.split('field-')[1];\n                            id = id.split('_')[0];\n                            let index = formjson.findIndex((item) => item.id == id);\n                            // Insert the new field after the active field.\n                            formjson.splice(index + 1, 0, response);\n                        } else {\n                            formjson.push(response);\n                        }\n                        renderList(formjson);\n                        previewForm(formjson, response.id, true);\n                        $('#newfield-modal').modal('hide');\n                    });\n\n                    self.setModalDraggable('#newfield-modal .modal-dialog');\n                    const checkFormLoaded = () => {\n                        if ($('#newfield-modal .modal-body').find('form').length > 0) {\n                            self.postFormRender();\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#newfield-modal');\n                            }\n                        } else {\n                            requestAnimationFrame(checkFormLoaded);\n                        }\n                    };\n                    requestAnimationFrame(checkFormLoaded);\n\n                    $(formfieldform).on('core_form_dynamicform_clientvalidationerror core_form_dynamicform_validationerror',\n                        function(e) {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            self.postFormRender();\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#newfield-modal');\n                            }\n                            self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                        });\n                });\n            });\n\n            // Edit the form field\n            $message.off('click', `#form-field-list button.editfield`).on('click', `#form-field-list button.editfield`,\n                function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let type = $(this).closest('li').attr('data-type');\n                    let fieldid = $(this).closest('li').attr('data-id');\n                    formjson = JSON.parse($message.find(`#formjson`).text());\n                    let formfielddata = formjson.find((item) => item.id == fieldid);\n                    let fields = formjson.map((item) => {\n                        return {\n                            id: item.id,\n                            label: item.label,\n                            type: item.type,\n                        };\n                    });\n                    formfielddata.fields = JSON.stringify(fields);\n                    let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                    let editform = `<div class=\"modal fade\" id=\"editfield-modal\"\n                 aria-labelledby=\"editfield-modal\" aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('editformfield',\n                        'ivplugin_form', typeString)}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <i class=\"bi bi-x-lg fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                            'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"editfield-submit\">${M.util.get_string('save',\n                                'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                    $('body').append(editform);\n                    $('#editfield-modal').modal('show');\n                    $('#editfield-modal').on('hidden.bs.modal', function() {\n                        $(this).remove();\n                        $('body').addClass('modal-open');\n                    });\n                    $('#editfield-modal').on('shown.bs.modal', function() {\n                        let formfieldform = new DynamicForm(document.querySelector('#editfield-modal .modal-body'),\n                            'ivplugin_form\\\\form_fields\\\\' + type);\n                        formfieldform.load(formfielddata);\n\n                        document.querySelector('#editfield-submit').addEventListener('click', (e) => {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                            if (!event.defaultPrevented) {\n                                formfieldform.submitFormAjax();\n                            }\n                        });\n\n                        formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            const response = e.detail;\n                            const index = formjson.findIndex((item) => item.id == response.id);\n                            if (index !== -1) {\n                                formjson[index] = response;\n                            }\n                            renderList(formjson);\n                            previewForm(formjson, response.id, true);\n                            $('#editfield-modal').modal('hide');\n                        });\n\n                        self.setModalDraggable('#editfield-modal .modal-dialog');\n                        const checkFormLoaded = () => {\n                            if ($('#editfield-modal .modal-body').find('form').length > 0) {\n                                if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                    self.repeatableValues('#editfield-modal');\n                                }\n                                self.postFormRender();\n                            } else {\n                                requestAnimationFrame(checkFormLoaded);\n                            }\n                        };\n                        requestAnimationFrame(checkFormLoaded);\n\n\n                        $(formfieldform).on('core_form_dynamicform_clientvalidationerror core_form_dynamicform_validationerror',\n                            function(e) {\n                                e.preventDefault();\n                                e.stopImmediatePropagation();\n                                self.postFormRender();\n                                if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                    self.repeatableValues('#editfield-modal');\n                                }\n                                self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                            });\n                    });\n                });\n\n            // Copy the form field\n            $message.off('click', `#form-field-list button.copyfield`).on('click', `#form-field-list button.copyfield`,\n                function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let fieldid = $(this).closest('li').attr('data-id');\n                    formjson = JSON.parse($message.find(`#formjson`).text());\n                    let formfielddata = JSON.parse(JSON.stringify(formjson.find((item) => item.id == fieldid)));\n                    const index = formjson.findIndex((item) => item.id == formfielddata.id);\n                    if (index !== -1) {\n                        formfielddata.id = Math.floor(new Date().getTime() / 1000);\n                        formjson.splice(index + 1, 0, formfielddata);\n                    }\n                    renderList(formjson);\n                    previewForm(formjson, formfielddata.id, true);\n                });\n\n            // Delete the form field\n            $message.off('click', `#form-field-list button.deletefield`).on('click', `#form-field-list button.deletefield`,\n                function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                    const $this = $(this);\n                    Notification.deleteCancel(\n                        M.util.get_string('deletefield', 'ivplugin_form'),\n                        M.util.get_string('deletefieldconfirm', 'ivplugin_form'),\n                        M.util.get_string('delete', 'mod_interactivevideo'),\n                        function() {\n                            let li = $this.closest('li');\n                            let id = li.attr('data-id');\n                            li.remove();\n                            $(`#form-preview #fitem_field-${id},\n                            #form-preview fieldset[id^=id_field-${id}],\n                            #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                            #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                            let isHeader = $('.field-highlight').hasClass(`collapsible`);\n                            let ff = currentFormFields.filter((item) => item.id != id);\n                            renderList(ff);\n                            if (isHeader) {\n                                previewForm(ff, id, true);\n                            } else {\n                                $('.field-highlight').fadeOut(300, 'linear', function() {\n                                    $(this).remove();\n                                });\n                                saveTracking(ff, id);\n                            }\n                        },\n                        null\n                    );\n                });\n\n            // Save the form fields\n            $message.off('click', `button#save`).on('click', `button#save`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                getFormJson();\n                let formJsonCopy = JSON.parse(JSON.stringify(formjson));\n                let json = formJsonCopy.map((item) => {\n                    delete item.annotationid;\n                    delete item.contextid;\n                    delete item.formattedlabel;\n                    return item;\n                });\n                let cleanItems = JSON.stringify(json).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'quickeditfield',\n                        sesskey: M.cfg.sesskey,\n                        id: annotation.id,\n                        field: 'content',\n                        contextid: M.cfg.contextid,\n                        draftitemid: 0,\n                        value: cleanItems,\n                        cmid: self.cmid,\n                        token: self.token,\n                    },\n                    success: function(data) {\n                        let updated = JSON.parse(data);\n                        tracking = [];\n                        tracking.push({\n                            items: JSON.stringify(formJsonCopy),\n                            actives: null,\n                            at: new Date().getTime(),\n                        });\n                        $('#save-close #redo, #save-close #undo').attr('disabled', 'disabled');\n                        $('#save-close #save').attr('disabled', 'disabled');\n                        dispatchEvent('annotationupdated', {\n                            annotation: updated,\n                            action: 'edit',\n                        });\n                    }\n                });\n            });\n\n            // Scroll to the form field on label click\n            $message.off('click', `#form-field-list li .field-label`).on('click', `#form-field-list li .field-label`, function() {\n                let id = $(this).closest('li').attr('data-id');\n                let type = $(this).closest('li').attr('data-type');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                let $collapsible = $('.field-highlight').closest('fieldset.collapsible');\n                if ($collapsible && $collapsible.find('[data-toggle=\"collapse\"]').hasClass('collapsed')) {\n                    $collapsible.find('[data-toggle=\"collapse\"]').trigger('click');\n                }\n                let field = document.querySelector(`#form-preview .field-highlight`);\n                if (field) {\n                    field.scrollIntoView({behavior: 'smooth', block: type == 'header' ? 'start' : 'center'});\n                }\n            });\n\n            $message.on('mouseover', `#form-field-list li`, function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n                const id = $(this).attr('data-id');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n            });\n\n            $message.on('mouseout', `#form-field-list li`, function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n            });\n\n            $message.on('mouseover', `#form-preview .fitem.row`, function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n                let group = $(this).attr('data-groupname');\n                let id;\n                if (group) {\n                    id = group.replace('field-', '');\n                } else {\n                    try {\n                        id = $(this).attr('id').match(/\\d{10}/)[0];\n                    } catch (e) {\n                        id = $(this).closest('[data-groupname]').attr('data-groupname').replace('field-', '');\n                    }\n\n                }\n                $(`#form-field-list li[data-id=${id}]`).addClass('field-highlight');\n            });\n\n            $message.on('mouseout', `#form-preview .fitem.row`, function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n            });\n\n            // Edit the form field from the preview.\n            $message.off('click', `#form-preview i.edit`).on('click', `#form-preview i.edit`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.editfield`).trigger('click');\n            });\n\n            // Delete the form field from the preview.\n            $message.off('click', `#form-preview i.delete`).on('click', `#form-preview i.delete`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.deletefield`).trigger('click');\n            });\n\n            // Copy the form field from the preview.\n            $message.off('click', `#form-preview i.copy`).on('click', `#form-preview i.copy`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.copyfield`).trigger('click');\n            });\n\n            // Undo the form field changes.\n            $message.off('click', `#save-close #undo`).on('click', `#save-close #undo`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (trackingIndex == 0) {\n                    return;\n                }\n                trackingIndex--;\n                const instance = tracking[trackingIndex];\n                formjson = JSON.parse(instance.items);\n                renderList(formjson);\n                previewForm(formjson, instance.actives, false);\n                if (trackingIndex == 0) {\n                    $('#save-close #undo').attr('disabled', 'disabled');\n                    $('#save-close #redo').removeAttr('disabled');\n                } else {\n                    $('#save-close #undo').removeAttr('disabled');\n                    if (trackingIndex == tracking.length - 1) {\n                        $('#save-close #redo').attr('disabled', 'disabled');\n                    } else {\n                        $('#save-close #redo').removeAttr('disabled');\n                    }\n                }\n            });\n\n            // Redo the form field changes.\n            $message.off('click', `#save-close #redo`).on('click', `#save-close #redo`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (trackingIndex == tracking.length - 1) {\n                    return;\n                }\n                trackingIndex++;\n                const instance = tracking[trackingIndex];\n                formjson = JSON.parse(instance.items);\n                renderList(formjson);\n                previewForm(formjson, instance.actives, false);\n                if (trackingIndex == tracking.length - 1) {\n                    $('#save-close #redo').attr('disabled', 'disabled');\n                    $('#save-close #undo').removeAttr('disabled');\n                } else {\n                    $('#save-close #redo').removeAttr('disabled');\n                    if (trackingIndex == 0) {\n                        $('#save-close #undo').attr('disabled', 'disabled');\n                    } else {\n                        $('#save-close #undo').removeAttr('disabled');\n                    }\n                }\n            });\n\n            // Close the form field modal.\n            $message.off('click', `#save-close #close`).on('click', `#save-close #close`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (tracking.length > 1) {\n                    Notification.saveCancel(\n                        M.util.get_string('savechanges', 'ivplugin_form'),\n                        M.util.get_string('savechangesconfirm', 'ivplugin_form'),\n                        M.util.get_string('save', 'mod_interactivevideo'),\n                        function() {\n                            $('#save-close #save').trigger('click');\n                        },\n                        function() {\n                            tracking = [];\n                            $('#save-close #redo, #save-close #undo').attr('disabled', 'disabled');\n                            $('#save-close #save').attr('disabled', 'disabled');\n                            $('#form-modal').modal('hide');\n                        }\n                    );\n                } else {\n                    $('#form-modal').modal('hide');\n                }\n            });\n\n            // Sort the form fields in the preview.\n            $message.on('sortstart', '#form-preview form, #form-preview form .fcontainer', function() {\n                $(this).addClass('no-pointer');\n                $('#form-preview form .fcontainer').addClass('empty-container');\n            });\n\n            // Revert the item if it's a collapsible being dropped into .fcontainer.\n            $message.on('sortreceive', '#form-preview form, #form-preview form .fcontainer', function(event, ui) {\n                if (ui.item.hasClass('collapsible') && ui.item.parent().hasClass('fcontainer')) {\n                    $(ui.sender).sortable('cancel');\n                    self.addNotification(M.util.get_string('sectioninsectionisnotsupported', 'ivplugin_form'), 'danger');\n                }\n            });\n\n            // Update the form fields data on sort stop.\n            $message.on('sortstop', '#form-preview form, #form-preview form .fcontainer', function(event, ui) {\n                let id = ui.item.attr('id');\n                id = id.split('field-')[1];\n                id = id.split('_')[0];\n                ui.item.trigger('click');\n                let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                $(this).removeClass('no-pointer');\n                $('#form-preview form .fcontainer').removeClass('empty-container');\n                let sortables = $message.find(`#form-preview form`)\n                    .find('.row.fitem:not(.femptylabel):not([hidden]), fieldset.collapsible');\n                let fieldsets = $message.find(`#form-preview form`).find('fieldset.collapsible');\n\n                let fields = sortables.map(function() {\n                    let $this = $(this);\n                    let id = $this.attr('id');\n                    return id;\n                }).get();\n                let fieldsetsIds = fieldsets.map(function() {\n                    let $this = $(this);\n                    let id = $this.attr('id');\n                    return id;\n                }).get();\n\n                let newFormJson = [];\n                fields.forEach(x => {\n                    let y = x.split('field-')[1];\n                    try {\n                        y = y.split('_')[0];\n                    } catch (e) {\n                        window.console.log(x);\n                    }\n\n                    let row = currentFormFields.find(f => f.id == y);\n                    if (fieldsetsIds.includes(x)) {\n                        // Get the next sibling after this collapsible section\n                        let $next = $(`#${x}`).next();\n                        let endId = 0;\n                        if ($next && $next.hasClass('fitem') && !$next.hasClass('femptylabel')) {\n                            endId = $next.attr('id');\n                        }\n                        if (endId != 0 && endId) {\n                            endId = endId.split('field-')[1];\n                            endId = endId.split('_')[0];\n                            row.closeat = endId;\n                        } else {\n                            row.closeat = '';\n                        }\n                    }\n                    newFormJson.push(row);\n                });\n                formjson = newFormJson;\n                renderList(formjson);\n                saveTracking(formjson, id);\n            });\n\n            // Add field-highlight class when the field is clicked.\n            $message.off('click', `#form-preview .fitem.row:not([data-groupname=\"buttonar\"])`)\n                .on('click', `#form-preview .fitem.row:not([data-groupname=\"buttonar\"])`, function() {\n                    $(`#form-preview .field-active`).removeClass('field-active');\n                    $(this).addClass('field-active');\n                });\n        } else {\n            if (annotation.completiontracking && annotation.completiontracking != 'manual') {\n                let $message = $(`#message[data-id='${annotation.id}']`);\n\n                // Disable the mark-done and mark-undone buttons\n                $message.find(`#completiontoggle`).prop('disabled', true);\n                if (annotation.completed == true) {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completioncompleted', 'mod_interactivevideo')}`);\n                } else {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completionincomplete', 'mod_interactivevideo')}`);\n                }\n            }\n        }\n    }\n\n    /**\n     * Override the completionCallback method for the form plugin.\n     * @param {Array} annotations annotations data\n     * @param {Object} thisItem annotation object\n     * @param {String} action action type\n     * @param {String} type action type\n     */\n    completionCallback(annotations, thisItem, action, type) {\n        let msg = 'formupdated';\n        if (!thisItem.completed) {\n            msg = 'formsubmitted';\n        }\n        super.completionCallback(annotations, thisItem, action, type);\n        if (type == 'automatic') {\n            this.addNotification(M.util.get_string(msg, 'ivplugin_form'), 'success');\n        }\n        let annotation = annotations.find((item) => item.id == thisItem.id);\n        this.runInteraction(annotation);\n    }\n\n    /**\n     * Render form used on the report page\n     * @param {Object} annotation The annotation object\n     * @param {Array} f Form fields data\n     * @param {Object} response Form submission data\n     * @param {String} node The node to render the form\n     * @returns {void}\n     */\n    renderForm(annotation, f, response, node) {\n        let self = this;\n        const getFormJson = async () => {\n            const content = await self.render(annotation, 'json');\n            return new Promise((resolve) => {\n                let formfields = content.fields;\n                resolve(formfields);\n            });\n        };\n\n        let formdata = {\n            id: annotation.id,\n            contextid: annotation.contextid,\n            type: 'form',\n            courseid: annotation.courseid,\n            annotationid: 0,\n            editing: 0,\n        };\n\n        const render = (ff) => {\n            $(`#message[data-id='${annotation.id}']`).find(`${node} #form-preview`).addClass('loader').empty();\n            let newformjson = ff;\n            if (response !== null) {\n                let submission = JSON.parse(response.text1);\n                newformjson = ff.map((item) => {\n                    item.value = submission['field-' + item.id];\n                    item.default = submission['field-' + item.id];\n                    if (item.type == 'radio') { // Handle other option text for radio buttons.\n                        item.othertext = submission['field-' + item.id + '-otheroptiontext'];\n                    }\n                    return item;\n                });\n                formdata.reviewing = 1;\n                formdata.submissionid = submission.id;\n            }\n\n            formdata.formjson = JSON.stringify(newformjson);\n\n            let previewform = new DynamicForm(document.\n                querySelector(`#message[data-id='${annotation.id}'] ${node} #form-preview`),\n                'ivplugin_form\\\\submitform_form');\n            previewform.load(formdata);\n            const checkFormLoaded = () => {\n                if ($(`#message[data-id='${annotation.id}'] ${node} #form-preview form`).length > 0) {\n                    self.postFormRender();\n                } else {\n                    requestAnimationFrame(checkFormLoaded);\n                }\n            };\n            requestAnimationFrame(checkFormLoaded);\n        };\n\n        if (!f) {\n            getFormJson().then((fields) => {\n                window.console.log(fields);\n                return render(fields);\n            }).catch(() => {\n                // Do nothing.\n            });\n        } else {\n            render(f);\n        }\n\n    }\n\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {void}\n     */\n    runInteraction(annotation) {\n        this.player.pause();\n        let self = this;\n        if (this.isEditMode()) {\n            annotation.editmode = true; // Use editmode to render the draft content (i.e draft.php vs plugin.php).\n        }\n\n        // First render container\n        this.renderViewer(annotation);\n\n        this.enableManualCompletion(annotation);\n        if (annotation.displayoptions == 'popup') {\n            $('#annotation-modal').on('shown.bs.modal', function() {\n                self.setModalDraggable('#annotation-modal .modal-dialog');\n            });\n        }\n    }\n\n    /**\n     * Render annotation view on the report page\n     * @param {Object} annotation The annotation object\n     * @param {Array} tabledata Completion data from the report table\n     * @returns {void}\n     */\n    displayReportView(annotation, tabledata) {\n        let self = this;\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.closest('.modal').addClass('modal-fullscreen');\n        $message.find('#content').html(`<div class=\"tab-content\" id=\"myTabContent\">\n            <div class=\"tab-pane fade\" id=\"formtab\" role=\"tabpanel\">\n            <div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div></div>\n            <div class=\"tab-pane fade show active loading\" id=\"responsetab\" role=\"tabpanel\"></div>\n            </div><div class=\"shadow z-index-1 h-100 bg-white overflow-auto\" id=\"responseview\">\n            <div class=\"modal-header d-flex bg-white align-items-center pr-0 sticky-top\" id=\"title\">\n                <h5 class=\"modal-title text-truncate mb-0\">\n                    <div class=\"d-flex align-items-center p-1\">\n                        <select id=\"submission-list\" class=\"custom-select rounded-sm mr-1\"></select>\n                        <button class=\"btn p-0 previous\"><i class=\"bi bi-chevron-left fa-fw fs-25px\"></i></button>\n                        <button class=\"btn p-0 next\"><i class=\"bi bi-chevron-right fa-fw fs-25px\"></i></button>\n                    </div>\n                </h5>\n                <div class=\"d-flex align-items-center\">\n                    <button class=\"btn mx-2 p-0\" id=\"print\">\n                        <i class=\"bi bi-printer fa-fw fs-25px\"></i>\n                    </button>\n                    <button class=\"btn mx-2 p-0 close\">\n                        <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                    </button>\n                </div>\n            </div>\n            <div id=\"form-preview\"></div>\n            </div>`);\n        $message.find('.btns')\n            .prepend(`<button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#formtab\">\n            <i class=\"bi bi-input-cursor-text fs-25px\"  data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('form', 'ivplugin_form')}\"></i></button>\n            <button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#responsetab\">\n            <i class=\"bi bi-table fs-25px\" data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('responses', 'ivplugin_form')}\"></i>\n            </button>`);\n\n        $(document).off('click', '#print').on('click', '#print', function() {\n            $('#responseview').css('max-width', '100%');\n            $('#responseview #title').toggleClass('d-none d-flex');\n            window.print();\n            $('#responseview').css('max-width', '900px');\n            $('#responseview #title').toggleClass('d-none d-flex');\n        });\n\n        this.render(annotation, 'json').then(async (ct) => {\n            let logs = [];\n            let users = [];\n            const fields = JSON.stringify([...ct.fields]); // Copy the fields object.\n            let formfields = ct.fields;\n            let userids = tabledata.map((item) => item.id);\n            let logdata = await this.getLogs(annotation, userids);\n            logs = logdata;\n            logs.map(x => {\n                const completiondata = tabledata.find(y => y.id == x.userid);\n                x.completiondata = completiondata;\n                return x;\n            });\n\n            // We're going to build the table data.\n            let heading = [\n                {title: M.util.get_string('id', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('timesubmitted', 'mod_interactivevideo'), \"class\": 'exportable time'},\n                {title: M.util.get_string('participant', 'mod_interactivevideo'), \"class\": ''},\n                {title: M.util.get_string('firstname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('lastname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('email', 'mod_interactivevideo'), \"class\": 'exportable'},\n            ];\n\n            let validfields = [];\n\n            formfields.forEach(f => {\n                if (f.type != 'header' && f.type != 'html' && f.type != 'linebreak') {\n                    let head = f.formattedlabel;\n                    if (f.helptext.text && f.helptext.text != '') {\n                        head = `<span>${f.formattedlabel}\n                            <i class=\"ml-2 bi bi-info-circle-fill text-secondary helptext cursor-pointer\" data-fieldid=\"${f.id}\"\n                             data-toggle=\"popover\">\n                            </i></span>`;\n                    }\n                    heading.push({\n                        \"title\": head,\n                        \"class\": 'exportable not-sortable',\n                    });\n                    validfields.push(f);\n                }\n            });\n\n            let rows = [];\n\n            logs.forEach(l => {\n                let submission = JSON.parse(l.text1);\n                let row = [\n                    l.id,\n                    `<a href=\"javascript:void(0)\" class=\"viewsubmission\" data-id=\"${l.id}\">${l.formattedtimecreated}</a>`,\n                    `<span class=\"text-truncate\">${l.completiondata.picture}</span>`,\n                    l.completiondata.firstname,\n                    l.completiondata.lastname,\n                    l.completiondata.email,\n                ];\n\n                validfields.forEach(async f => {\n                    let response = submission['field-' + f.id];\n                    if (response == undefined) {\n                        row.push('');\n                        return;\n                    }\n                    switch (f.type) {\n                        case 'text':\n                        case 'time':\n                        case 'textarea':\n                            // Replace new lines with <br> tags.\n                            row.push(response.replace(/\\n/g, '<br>'));\n                            break;\n                        case 'range':\n                            row.push(response + '/[' + f.minlength + '-' + f.maxlength + ']');\n                            break;\n                        case 'week':\n                            var wvalue = response.split('-');\n                            var week = wvalue[1].replace('W', '');\n                            row.push(`${M.util.get_string('weekvalue', 'ivplugin_form', week)}, ${wvalue[0]}`);\n                            break;\n                        case 'month':\n                            var mvalue = response.split('-');\n                            var month = M.util.get_string('month' + mvalue[1], 'ivplugin_form');\n                            row.push(`${month} ${mvalue[0]}`);\n                            break;\n                        case 'date':\n                            var includeTime = response.includes('T');\n                            var dvalue = new Date(response).toLocaleDateString();\n                            if (includeTime) {\n                                dvalue += ' ' + new Date(response).toLocaleTimeString();\n                            }\n                            row.push(dvalue);\n                            break;\n                        case 'editor':\n                            row.push(response.text);\n                            break;\n                        case 'select':\n                            var res = [];\n                            var options = f.options.split('\\n');\n                            options.forEach((option) => {\n                                option = option.trim();\n                                let choices = option.split('=');\n                                let value = choices[0];\n                                if (response.indexOf(value) > -1) {\n                                    res.push(choices[1]);\n                                }\n                            });\n                            row.push(res.join(', '));\n                            break;\n                        case 'radio':\n                            var ans = '';\n                            var roptions = f.options.split('\\n');\n                            if (response == 'otheroption') {\n                                let othertext = submission['field-' + f.id + '-otheroptiontext'];\n                                row.push(M.util.get_string('otheroption', 'ivplugin_form')\n                                    + (othertext != '' ? ': ' + othertext : ''));\n                                break;\n                            }\n                            roptions.forEach((option) => {\n                                option = option.trim();\n                                let choices = option.split('=');\n                                let value = choices[0];\n                                if (response == value) {\n                                    ans = choices[1];\n                                    return;\n                                }\n                            });\n                            row.push(ans);\n                            break;\n                        case 'advcheckbox':\n                            var ares = [];\n                            var aoptions = f.options.split('\\n');\n                            if (f.allowother == 1) {\n                                aoptions.push(`otheroption=${M.util.get_string('otheroption', 'ivplugin_form')}`);\n                            }\n                            // Convert to object.\n                            var optionObj = {};\n                            aoptions.forEach((option) => {\n                                let opt = option.split('=');\n                                optionObj[opt[0].trim()] = opt[1].trim();\n                            });\n                            var keys = Object.keys(response);\n                            keys = keys.filter((item) => response[item] != '' && response[item] !== undefined);\n                            keys.forEach((key) => {\n                                if (optionObj[key]) {\n                                    let v = response[key];\n                                    // Other: Other Text.\n                                    if (key == 'otheroption') {\n                                        v = M.util.get_string('otheroption', 'ivplugin_form')\n                                            + (response.otheroptiontext != '' ? ': ' + response.otheroptiontext : '');\n                                    }\n                                    ares.push(v);\n                                }\n                            });\n                            row.push(ares.join(', <br>'));\n                            break;\n                        case 'date_selector':\n                            var dsdate = response.year + '-';\n                            if (response.month < 9) {\n                                dsdate += '0' + response.month;\n                            } else {\n                                dsdate += response.month;\n                            }\n                            dsdate += '-';\n                            if (response.day < 9) {\n                                dsdate += '0' + response.day;\n                            } else {\n                                dsdate += response.day;\n                            }\n                            if (response.hour && response.minute) {\n                                dsdate += 'T';\n                                if (response.hour < 9) {\n                                    dsdate += '0' + response.hour;\n                                } else {\n                                    dsdate += response.hour;\n                                }\n                                dsdate += ':';\n                                if (response.minute < 9) {\n                                    dsdate += '0' + response.minute;\n                                } else {\n                                    dsdate += response.minute;\n                                }\n                            }\n                            var inclTime = dsdate.includes('T');\n                            var dsvalue = new Date(dsdate).toLocaleDateString();\n                            if (inclTime) {\n                                dsvalue += ' ' + new Date(dsdate).toLocaleTimeString();\n                            }\n                            row.push(dsvalue);\n                            break;\n                        case 'duration':\n                            if (response) {\n                                row.push(response.number + ' ' + M.util.get_string(response.timeunit, 'ivplugin_form'));\n                            } else {\n                                row.push('');\n                            }\n                            break;\n                        case 'filemanager':\n                            if (response.length > 0) {\n                                const files = response.map((file) => {\n                                    const filename = file.split('/').pop();\n                                    return `<a href=\"${file}\" target=\"_blank\" class=\"text-truncate\">${decodeURIComponent(\n                                        filename.replace('field-' + f.id + '_', ''))}<span class=\"d-none\"><br>\\n[${file}]\n                                        </span></a>`;\n                                });\n                                row.push(files.join(',<br>'));\n                            } else {\n                                row.push('');\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n                rows.push(row);\n\n            });\n\n            users = logs.map((l) => {\n                return {\n                    id: l.id,\n                    fullname: `${l.completiondata.firstname} ${l.completiondata.lastname}`,\n                };\n            });\n\n            users.sort((a, b) => {\n                return a.fullname.localeCompare(b.fullname);\n            });\n\n            users.forEach((user) => {\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list')\n                    .append(`<option value=\"${user.id}\">${user.fullname}</option>`);\n            });\n\n            $(`#message[data-id='${annotation.id}']`).find('#responsetab')\n                .html(`<div id=\"formresponsetable\" class=\"table-responsive\">\n                    <table class=\"table table-bordered table-striped w-100\">\n                    <thead>\n                        <tr>\n                            ${heading.map(h => `<th class=\"${h.class} text-truncate\">${h.title}</th>`).join('')}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                    </table>\n                    </div>`);\n\n            renderAnnotationLogs({\n                heading: heading,\n                rows: rows,\n            }, '#formresponsetable', annotation.formattedtitle);\n\n            $message.find('.btns').off('click', `[data-toggle=\"tab\"]`).on('click', `[data-toggle=\"tab\"]`, function() {\n                $(`[data-toggle=\"tab\"]`).removeClass('active');\n                // Always remove the rendered form.\n                $(`#message[data-id='${annotation.id}']`).find(`#responseview #form-preview, .tab-content #form-preview`).empty();\n                if ($(this).data('target') == '#formtab') {\n                    self.renderForm(annotation, JSON.parse(fields), null, '#formtab');\n                }\n            });\n\n            $(document).off('click', `#message[data-id='${annotation.id}'] table .helptext`)\n                .on('click', `#message[data-id='${annotation.id}'] table .helptext`, async function(e) {\n                    // Dismiss all other popovers.\n                    $('.popover').remove();\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let $this = $(this);\n                    let contentid = $(this).attr('data-fieldid');\n                    let field = formfields.find((field) => field.id == contentid);\n                    let content = field.helptext.text;\n                    $this.popover({\n                        content: '<div class=\"loader\"></div>',\n                        title: `<span class=\"mr-2\">${field.formattedlabel}</span>`\n                            + `<i class=\"bi bi-x-circle-fill ml-auto popover-dismiss cursor-pointer\" style=\"font-size:1.5em;\"></i>`,\n                        placement: 'top',\n                        html: true,\n                        trigger: 'focus',\n                        template: `<div class=\"popover inlineannotation-popover id-${contentid}\"\n                     role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                     <div class=\"popover-body rounded\"></div></div>`,\n                    });\n                    $this.popover('show');\n                    $this.on('shown.bs.popover', async function() {\n                        let $body = $(`.popover.id-${contentid} .popover-body`);\n                        const html = await self.formatContent(content, M.cfg.contextid);\n                        $body.html(html);\n                        notifyFilter($body);\n                        $this.popover('update');\n                    });\n                });\n\n            $(document).off('click', `.popover-dismiss`).on('click', `.popover-dismiss`, function(e) {\n                e.stopImmediatePropagation();\n                $(this).closest('.popover').remove();\n            });\n\n            $(document).off('click', `#message[data-id='${annotation.id}'] .viewsubmission`)\n                .on('click', `#message[data-id='${annotation.id}'] .viewsubmission`, function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let id = $(this).attr('data-id');\n                    $(`#message[data-id='${annotation.id}']`).find('#responseview').addClass('show');\n                    $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(id).trigger('change');\n                });\n\n            $(document).on('change', `#message[data-id='${annotation.id}'] #submission-list`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).val();\n                let log = logs.find((item) => item.id == id);\n                self.renderForm(annotation, formfields, log, '#responseview');\n                let index = users.findIndex((item) => item.id == id);\n                if (index > 0) {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', true);\n                }\n                if (index < users.length - 1) {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', true);\n                }\n            });\n\n            $(document).off('click', `#message[data-id='${annotation.id}'] #responseview .close`)\n                .on('click', `#message[data-id='${annotation.id}'] #responseview .close`, function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    $(`#message[data-id='${annotation.id}']`).find('#responseview').removeClass('show');\n                });\n\n            $(document).off('click', `#message[data-id='${annotation.id}'] #responseview .previous`)\n                .on('click', `#message[data-id='${annotation.id}'] #responseview .previous`, function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                    let index = users.findIndex((item) => item.id == id);\n                    let prev = users[index - 1];\n                    $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(prev.id).trigger('change');\n                });\n\n            $(document).off('click', `#message[data-id='${annotation.id}'] #responseview .next`)\n                .on('click', `#message[data-id='${annotation.id}'] #responseview .next`, function(e) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                    let index = users.findIndex((item) => item.id == id);\n                    let next = users[index + 1];\n                    $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(next.id).trigger('change');\n                });\n            return;\n        }).catch(() => {\n            // Do nothing.\n        });\n    }\n    /**\n     * Data to show when the report viewer clicks on the completion checkmark\n     * @param {Object} annotation the current annotation\n     * @param {Number} userid the user id\n     * @returns {Promise}\n     */\n    async getCompletionData(annotation, userid) {\n        let self = this;\n        let response = await Ajax.call([{\n            args: {\n                userid: userid,\n                cmid: annotation.annotationid,\n                annotationid: annotation.id,\n                contextid: annotation.contextid,\n            },\n            contextid: annotation.contextid,\n            methodname: 'ivplugin_form_get_log',\n        }])[0];\n        response = JSON.parse(response.record);\n        let modal = `<div class=\"modal fade ${$('body').hasClass('iframe') ? 'modal-fullscreen' : ''}\"\n        id=\"annotation-modal\" role=\"dialog\" aria-labelledby=\"annotation-modal\" aria-hidden=\"true\" data-backdrop=\"static\"\n         data-keyboard=\"false\">\n                        <div id=\"message\" data-id=\"${annotation.id}\" data-placement=\"popup\"\n                        class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n                               <div class=\"modal-content rounded-lg\">\n                                   <div class=\"modal-header d-flex align-items-center shadow-sm pr-0\" id=\"title\">\n                                       <button class=\"btn mx-2 p-0 ml-auto\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                        </button>\n                                   </div>\n                                   <div class=\"modal-body\" id=\"form-preview\"></div>\n                                   </div>\n                               </div>\n                               </div>`;\n        $('body').append(modal);\n        $('#annotation-modal').modal('show');\n        $('#annotation-modal').on('shown.bs.modal', function() {\n            self.renderForm(annotation, null, response, '.modal-content');\n        });\n        $('#annotation-modal').on('hidden.bs.modal', function() {\n            $('#annotation-modal').remove();\n        });\n    }\n}"],"names":["Form","Base","postEditCallback","annotation","self","this","isEditMode","formfields","M","util","get_string","dataForTemplate","id","items","template","Templates","render","appendTo","modal","on","remove","async","content","postContentRender","find","append","super","renderViewer","postFormRender","attr","trigger","removeClass","addClass","document","off","e","stopImmediatePropagation","hasClass","setTimeout","repeatableValues","node","each","$this","dataId","defaultValues","val","split","value","isRadio","rows","html","length","forEach","row","i","rowvalues","key","trim","includes","after","sortable","placeholder","handle","stop","removeAttr","first","preventDefault","$parent","closest","$row","clone","prop","$inputs","values","not","$input","push","Object","keys","map","join","Set","reportpage","$message","text1","duedate","fetchData","Promise","resolve","reject","call","args","userid","cmid","annotationid","contextid","methodname","then","response","JSON","parse","record","catch","err","formjson","renderList","fields","empty","item","icon","field","type","formattedlabel","text","stringify","tracking","trackingIndex","saveTracking","actives","slice","at","Date","getTime","sort","a","b","previewform","activateFieldsSortable","connectWith","forcePlaceholderSize","cursor","forceHelperSize","tolerance","previewForm","data","updateDraft","selector","querySelector","DynamicForm","formdata","load","checkFormLoaded","requestAnimationFrame","highlightField","element","isHeader","scrollIntoView","behavior","block","$actionbtns","$clone","footer","_this","courseid","editing","name","course","interaction","completionid","addNotification","submitted","details","completeTime","xp","duration","timecompleted","completiontime","toLocaleString","formatTime","reportView","toggleCompletion","reviewing","char2","show","events","SUBMIT_BUTTON_PRESSED","defaultPrevented","submitFormAjax","addEventListener","SERVER_VALIDATION_ERROR","notifyResetFormChanges","CLIENT_VALIDATION_ERROR","FORM_SUBMITTED","hide","completed","log","submission","newformjson","default","othertext","submissionid","replaceWith","saveFormJson","ff","getFormJson","currentFormFields","updatedFormJson","get","event","ui","typeString","newfieldmodal","formfieldform","label","cfg","detail","active","index","findIndex","splice","setModalDraggable","fieldid","formfielddata","editform","Math","floor","deleteCancel","li","filter","fadeOut","formJsonCopy","json","cleanItems","replace","ajax","url","wwwroot","method","dataType","action","sesskey","draftitemid","token","success","updated","$collapsible","group","match","instance","saveCancel","parent","sender","sortables","fieldsets","fieldsetsIds","newFormJson","x","y","window","console","f","$next","next","endId","closeat","completiontracking","completionCallback","annotations","thisItem","msg","runInteraction","renderForm","player","pause","editmode","enableManualCompletion","displayoptions","displayReportView","tabledata","prepend","css","toggleClass","print","logs","users","ct","userids","logdata","getLogs","completiondata","heading","title","validfields","head","helptext","l","formattedtimecreated","picture","firstname","lastname","email","undefined","minlength","maxlength","wvalue","week","mvalue","month","includeTime","dvalue","toLocaleDateString","toLocaleTimeString","res","options","option","choices","indexOf","ans","roptions","ares","aoptions","allowother","optionObj","opt","v","otheroptiontext","dsdate","year","day","hour","minute","inclTime","dsvalue","number","timeunit","files","file","filename","pop","decodeURIComponent","fullname","localeCompare","user","h","class","formattedtitle","contentid","popover","placement","$body","formatContent","prev","Ajax"],"mappings":"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"}