{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for the form plugin.\n *\n * @module     ivplugin_form/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'mod_interactivevideo/libraries/jquery-ui';\nimport Templates from 'core/templates';\nimport DynamicForm from 'core_form/dynamicform';\nimport {renderAnnotationLogs} from 'mod_interactivevideo/report';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nexport default class Form extends Base {\n    postEditCallback() {\n        // Do nothing\n    }\n\n    renderViewer(annotation) {\n        let self = this;\n        if (this.isEditMode()) {\n            let formfields = [\n                {\n                    'icon': 'bi bi-alphabet-uppercase',\n                    'type': 'header',\n                    'label': M.util.get_string('headerfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-text-paragraph',\n                    'type': 'html',\n                    'label': M.util.get_string('htmlfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-hr',\n                    'type': 'linebreak',\n                    'label': M.util.get_string('linebreakfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-input-cursor-text',\n                    'type': 'text',\n                    'label': M.util.get_string('textfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-textarea-resize',\n                    'type': 'textarea',\n                    'label': M.util.get_string('textareafield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-card-text',\n                    'type': 'editor',\n                    'label': M.util.get_string('editorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-menu-button-wide',\n                    'type': 'select',\n                    'label': M.util.get_string('selectfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-check2-square',\n                    'type': 'advcheckbox',\n                    'label': M.util.get_string('advcheckboxfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-record-circle',\n                    'type': 'radio',\n                    'label': M.util.get_string('radiofield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-calendar',\n                    'type': 'date_selector',\n                    'label': M.util.get_string('dateselectorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-stopwatch',\n                    'type': 'duration',\n                    'label': M.util.get_string('durationfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-file-earmark-arrow-up',\n                    'type': 'filemanager',\n                    'label': M.util.get_string('filemanagerfield', 'ivplugin_form'),\n                }\n            ];\n            const dataForTemplate = {\n                id: annotation.id,\n                items: formfields,\n            };\n            Templates.render('ivplugin_form/formedit_modal', dataForTemplate).then((html) => {\n                let $modal = $(html);\n                $modal.appendTo('body');\n                $('#form-modal').modal('show');\n\n                $('#form-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                });\n\n                $('#form-modal').on('shown.bs.modal', function() {\n                    self.render(annotation, 'json').then((content) => {\n                        self.postContentRender(annotation, formfields, content);\n                    });\n                });\n                return;\n            }).catch(() => {\n                // Do nothing.\n            });\n        } else {\n            super.renderViewer(annotation).then(() => {\n                self.render(annotation, 'json').then((content) => {\n                    $(`#message[data-id='${annotation.id}']`).find('#content')\n                        .append('<div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div>');\n                    return this.postContentRender(annotation, '', content);\n                }).catch(() => {\n                    // Do nothing.\n                });\n            });\n        }\n    }\n\n    postContentRender(annotation, formfields, content, reportpage = false) {\n        if (annotation.text1 != 0) {\n            $(`#message[data-id='${annotation.id}'] #formmeta`)\n                .append(`<div class=\"duedate\">${M.util.get_string('duedate', 'ivplugin_form')}: ${content.duedate}</div>`);\n        }\n\n        const fetchData = () => {\n            return new Promise((resolve, reject) => {\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'get_log',\n                        sesskey: M.cfg.sesskey,\n                        userid: this.userid,\n                        cmid: annotation.annotationid,\n                        annotationid: annotation.id,\n                        contextid: M.cfg.contextid,\n                    },\n                    success: function(data) {\n                        let log = JSON.parse(data);\n                        resolve(log);\n                    },\n                    error: function(error) {\n                        reject(error);\n                    }\n                });\n            });\n        };\n\n        let self = this;\n        let formjson = [];\n        const renderList = (data) => {\n            $(`#form-field-list`).empty();\n            if (data) {\n                data.forEach((item) => {\n                    let icon = formfields.find((field) => field.type === item.type).icon;\n                    $(`#form-field-list`)\n                        .append(`<li class=\"list-group-item d-flex align-items-start justify-content-between p-0\"\n                         data-id=\"${item.id}\" data-properties='${JSON.stringify(item)}' data-type=\"${item.type}\">\n                                    <div class=\"d-flex align-items-start pt-1\">\n                                    <i class=\"bi bi-grip-vertical px-2 cursor-move\"></i>\n                                    <i class=\"${icon} mr-2\"></i>\n                                    <div class=\"d-inline-block field-label\">${item.formattedlabel}</div></div>\n                                    <div class=\"ml-auto d-flex\">\n                                        <button class=\"btn btn-sm rounded-0\"\n                                         id=\"edit\" title=\"${M.util.get_string('edit', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-pencil-square\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0\"\n                                         id=\"copy\" title=\"${M.util.get_string('clone', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-copy\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0 text-danger\"\n                                         id=\"delete\" title=\"${M.util.get_string('delete', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-trash3\"></i></button>\n                                        </div>\n                                </li>`);\n                });\n            }\n        };\n\n        let previewform; // DynamicForm instance.\n        const previewForm = (data, id = null) => {\n            $(`#message[data-id='${annotation.id}']`).find(`#form-preview`).empty();\n            const selector = document.querySelector(`#message[data-id='${annotation.id}'] #form-preview`);\n            previewform = new DynamicForm(selector, 'ivplugin_form\\\\submitform_form');\n            if (data === null || data.length == 0) {\n                $('#form-preview').removeClass('loader');\n                return;\n            }\n            $('#form-preview').addClass('loader');\n            formdata.formjson = JSON.stringify(data);\n            previewform.load(formdata);\n            if (id) {\n                // Loop until the form element is found and highlight the current field.\n                let interval = setInterval(() => {\n                    let element = document.querySelector('#form-preview form');\n                    if (element) {\n                        clearInterval(interval);\n                        $(`#form-preview #fitem_field-${id},\n                             #form-preview fieldset[id^=id_field-${id}],\n                             #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                             #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                        let field = element.querySelector(`#form-preview .field-highlight`);\n                        field.scrollIntoView({behavior: 'smooth', block: 'center'});\n                    }\n                }, 100);\n            }\n        };\n\n        if (content && content.fields != '' && content.fields !== null) {\n            formjson = content.fields;\n        }\n\n        let formdata = {};\n        if (reportpage) {\n            formdata = {\n                id: annotation.id,\n                contextid: M.cfg.contextid,\n                type: 'form',\n                courseid: M.cfg.courseId,\n                annotationid: 0,\n                editing: 0,\n                formjson: JSON.stringify(formjson),\n            };\n            previewForm(formjson);\n            return;\n        }\n\n        formdata = {\n            id: annotation.id,\n            contextid: M.cfg.contextid,\n            type: self.prop.name,\n            courseid: self.course,\n            annotationid: self.interaction,\n            editing: self.isEditMode() ? 1 : 0,\n            formjson: JSON.stringify(formjson),\n        };\n\n        if (this.isEditMode()) {\n            renderList(formjson);\n        }\n\n        if (!this.isEditMode()) {\n            if (annotation.completed) {\n                fetchData()\n                    .then((log) => {\n                        if (log) {\n                            const submission = JSON.parse(log.text1);\n                            const newformjson = formjson.map((item) => {\n                                item.value = submission['field-' + item.id];\n                                item.default = submission['field-' + item.id];\n                                return item;\n                            });\n                            formdata.reviewing = 1;\n                            formdata.submissionid = submission.id;\n                            previewForm(newformjson);\n                            // Append the edit button if applicable\n                            if (annotation.char2 == 1 && (annotation.text1 == 0\n                                || annotation.text1 > new Date().getTime() / 1000)) {\n                                $('#formmeta').append(`<button class=\"btn btn-primary ml-auto btn-sm\" id=\"editsubmission\">\n                                    <i class=\"bi bi bi-pencil-square mr-2\"></i>${M.util.get_string('edit', 'mod_interactivevideo')}\n                                    </button>`);\n                            }\n                        } else {\n                            if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                                previewForm(formjson);\n                            }\n                        }\n                        return;\n                    })\n                    .catch(() => {\n                        // Do nothing.\n                    });\n            } else {\n                if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                    previewForm(formjson);\n                } else {\n                    $('#formmeta').replaceWith(`<div class=\"alert alert-warning\">\n                        ${M.util.get_string('formnolongeravailable', 'ivplugin_form')}</div>`);\n                }\n            }\n        } else {\n            previewForm(formjson);\n        }\n\n        if (this.isEditMode()) {\n            const getFormJson = () => {\n                formjson = $('#form-field-list').find('li').map(function() {\n                    return JSON.parse($(this).attr('data-properties'));\n                }).get();\n            };\n            $('#form-field-list').sortable({\n                handle: '.bi-grip-vertical',\n                placeholder: \"ui-state-highlight\",\n                stop: function() {\n                    getFormJson();\n                    renderList(formjson);\n                    previewForm(formjson);\n                }\n            });\n            // Add the form field.\n            $(document).on('click', 'button.add-field', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let type = $(this).data('type');\n                let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                let newfieldmodal = `<div class=\"modal fade\" id=\"newfield-modal\" aria-labelledby=\"newfield-modal\"\n                 aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('addformfield', 'ivplugin_form',\n                    typeString.toLowerCase())}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                        'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"newfield-submit\">${M.util.get_string('save',\n                            'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(newfieldmodal);\n                $('#newfield-modal').modal('show');\n                $('#newfield-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                    $('body').addClass('modal-open');\n                });\n                $('#newfield-modal').on('shown.bs.modal', function() {\n                    let formfieldform = new DynamicForm(document.querySelector('#newfield-modal .modal-body'),\n                        'ivplugin_form\\\\form_fields\\\\' + type);\n                    let fields = [];\n                    if (formjson !== null) {\n                        fields = formjson.map((item) => {\n                            return {\n                                id: item.id,\n                                label: item.label,\n                                type: item.type,\n                            };\n                        });\n                    }\n\n                    formfieldform.load({\n                        contextid: M.cfg.contextid,\n                        type: type,\n                        annotationid: annotation.id,\n                        fields: JSON.stringify(fields),\n                    });\n\n                    document.querySelector('#newfield-submit').addEventListener('click', (e) => {\n                        e.preventDefault();\n                        const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                        if (!event.defaultPrevented) {\n                            formfieldform.submitFormAjax();\n                        }\n                    });\n\n                    formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                        e.preventDefault();\n                        const response = e.detail;\n                        formjson.push(response);\n                        renderList(formjson);\n                        previewForm(formjson, response.id);\n                        $('#newfield-modal').modal('hide');\n                    });\n\n                    self.setModalDraggable('#newfield-modal .modal-dialog');\n\n                });\n            });\n\n            $(document).on('click', '#form-field-list button#edit', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let type = $(this).closest('li').attr('data-type');\n                let formfielddata = JSON.parse($(this).closest('li').attr('data-properties'));\n                let fields = formjson.map((item) => {\n                    return {\n                        id: item.id,\n                        label: item.label,\n                        type: item.type,\n                    };\n                });\n                formfielddata.fields = JSON.stringify(fields);\n                let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                let editform = `<div class=\"modal fade\" id=\"editfield-modal\"\n                 aria-labelledby=\"editfield-modal\" aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('editformfield',\n                    'ivplugin_form', typeString.toLowerCase())}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                        'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"editfield-submit\">${M.util.get_string('save',\n                            'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(editform);\n                $('#editfield-modal').modal('show');\n                $('#editfield-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                    $('body').addClass('modal-open');\n                });\n                $('#editfield-modal').on('shown.bs.modal', function() {\n                    let formfieldform = new DynamicForm(document.querySelector('#editfield-modal .modal-body'),\n                        'ivplugin_form\\\\form_fields\\\\' + type);\n                    formfieldform.load(formfielddata);\n\n                    document.querySelector('#editfield-submit').addEventListener('click', (e) => {\n                        e.preventDefault();\n                        const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                        if (!event.defaultPrevented) {\n                            formfieldform.submitFormAjax();\n                        }\n                    });\n\n                    formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                        e.preventDefault();\n                        const response = e.detail;\n                        const index = formjson.findIndex((item) => item.id == response.id);\n                        if (index !== -1) {\n                            formjson[index] = response;\n                        }\n                        renderList(formjson);\n                        previewForm(formjson, response.id);\n                        $('#editfield-modal').modal('hide');\n                    });\n\n                    self.setModalDraggable('#editfield-modal .modal-dialog');\n                });\n            });\n\n            $(document).on('click', '#form-field-list button#copy', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let formfielddata = JSON.parse($(this).closest('li').attr('data-properties'));\n                const index = formjson.findIndex((item) => item.id == formfielddata.id);\n                if (index !== -1) {\n                    formfielddata.id = Math.floor(new Date().getTime() / 1000);\n                    formjson.splice(index + 1, 0, formfielddata);\n                }\n                renderList(formjson);\n                previewForm(formjson, formfielddata.id);\n            });\n\n            $(document).on('click', '#form-field-list button#delete', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).closest('li').attr('data-id');\n                formjson = formjson.filter((item) => item.id != id);\n                renderList(formjson);\n                previewForm(formjson);\n            });\n\n            $(document).on('click', 'button#save', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                getFormJson();\n                let json = formjson.map((item) => {\n                    delete item.annotationid;\n                    delete item.contextid;\n                    delete item.formattedlabel;\n                    return item;\n                });\n                let cleanItems = JSON.stringify(json).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'quickeditfield',\n                        sesskey: M.cfg.sesskey,\n                        id: annotation.id,\n                        field: 'content',\n                        contextid: M.cfg.contextid,\n                        draftitemid: 0,\n                        value: cleanItems,\n                    },\n                    success: function(data) {\n                        let updated = JSON.parse(data);\n                        dispatchEvent('annotationupdated', {\n                            annotation: updated,\n                            action: 'edit',\n                        });\n                    }\n                });\n            });\n\n            $(document).on('click', '#form-field-list li .field-label', function() {\n                let id = $(this).closest('li').attr('data-id');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                let $collapsible = $('.field-highlight').closest('fieldset.collapsible');\n                if ($collapsible && $collapsible.find('[data-toggle=\"collapse\"]').hasClass('collapsed')) {\n                    $collapsible.find('[data-toggle=\"collapse\"]').trigger('click');\n                }\n                let field = document.querySelector(`#form-preview .field-highlight`);\n                field.scrollIntoView({behavior: 'smooth', block: 'center'});\n            });\n\n            $(document).on('mouseover', '#form-field-list li', function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n                const id = $(this).attr('data-id');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n            });\n\n            $(document).on('mouseout', '#form-field-list li', function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n            });\n\n            $(document).on('mouseover', '#form-preview .fitem', function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n                let group = $(this).attr('data-groupname');\n                let id;\n                if (group) {\n                    id = group.replace('field-', '');\n                } else {\n                    try {\n                        id = $(this).attr('id').match(/\\d{10}/)[0];\n                    } catch (e) {\n                        id = $(this).closest('[data-groupname]').attr('data-groupname').replace('field-', '');\n                    }\n\n                }\n                $(`#form-field-list li[data-id=${id}]`).addClass('field-highlight');\n            });\n\n            $(document).on('mouseout', '#form-preview .fitem', function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n            });\n\n            $(document).on('click', '#form-preview i#edit', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button#edit`).trigger('click');\n            });\n\n            $(document).on('click', '#form-preview i#delete', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button#delete`).trigger('click');\n            });\n\n            $(document).on('click', '#form-preview i#copy', function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button#copy`).trigger('click');\n            });\n        } else {\n            if (annotation.completiontracking && annotation.completiontracking != 'manual') {\n                let $message = $(`#message[data-id='${annotation.id}']`);\n\n                // Disable the mark-done and mark-undone buttons\n                $message.find(`#completiontoggle`).prop('disabled', true);\n                if (annotation.completed == true) {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completioncompleted', 'mod_interactivevideo')}`);\n                } else {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completionincomplete', 'mod_interactivevideo')}`);\n                }\n            }\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #submitform-submit`, async(e) => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                const event = previewform.trigger(previewform.events.SUBMIT_BUTTON_PRESSED);\n                if (!event.defaultPrevented) {\n                    previewform.submitFormAjax();\n                }\n                previewform.addEventListener(previewform.events.FORM_SUBMITTED, () => {\n                    self.toggleCompletion(annotation.id, 'mark-done', 'automatic');\n                    formdata.reviewing = 1;\n                    if (annotation.char2 == 1 && (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000)) {\n                        $('#editsubmission').show();\n                    }\n                    previewForm(formjson);\n                });\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #editsubmission`, (e) => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                formdata.reviewing = 0;\n                $('#editsubmission').hide();\n                previewForm(formjson);\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #cancel-submit`, (e) => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                formdata.reviewing = 1;\n                $('#editsubmission').show();\n                previewForm(formjson);\n            });\n        }\n    }\n\n    completionCallback(annotations, thisItem, action, type) {\n        let msg = 'formupdated';\n        if (!thisItem.completed) {\n            msg = 'formsubmitted';\n        }\n        super.completionCallback(annotations, thisItem, action, type);\n        if (type == 'automatic') {\n            this.addNotification(M.util.get_string(msg, 'ivplugin_form'), 'success');\n        }\n    }\n\n    renderForm(annotation, f, response, node) {\n        let self = this;\n        const getFormJson = () => {\n            self.render(annotation, 'json').then((content) => {\n                return new Promise((resolve) => {\n                    let formfields = content.fields;\n                    resolve(formfields);\n                });\n            }).catch(() => {\n                // Do nothing.\n            });\n        };\n\n        let formdata = {\n            id: annotation.id,\n            contextid: M.cfg.contextid,\n            type: 'form',\n            courseid: M.cfg.courseId,\n            annotationid: 0,\n            editing: 0,\n        };\n\n        const render = (ff) => {\n            $(`#message[data-id='${annotation.id}']`).find(`${node} #form-preview`).addClass('loader').empty();\n            let newformjson = ff;\n            if (response !== null) {\n                const submission = JSON.parse(response.text1);\n                newformjson = ff.map((item) => {\n                    item.value = submission['field-' + item.id];\n                    item.default = submission['field-' + item.id];\n                    return item;\n                });\n                formdata.reviewing = 1;\n                formdata.submissionid = submission.id;\n            }\n\n            formdata.formjson = JSON.stringify(newformjson);\n\n            const previewform = new DynamicForm(document.\n                querySelector(`#message[data-id='${annotation.id}'] ${node} #form-preview`),\n                'ivplugin_form\\\\submitform_form');\n            previewform.load(formdata);\n        };\n\n        if (!f) {\n            getFormJson().then((fields) => {\n                return render(fields);\n            }).catch(() => {\n                // Do nothing.\n            });\n        } else {\n            render(f);\n        }\n\n    }\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {void}\n     */\n    runInteraction(annotation) {\n        let self = this;\n        if (this.isEditMode()) {\n            annotation.editmode = true; // Use editmode to render the draft content (i.e draft.php vs plugin.php).\n        }\n\n        // First render container\n        this.renderViewer(annotation);\n\n        this.enableManualCompletion();\n        if (annotation.displayoptions == 'popup') {\n            $('#annotation-modal').on('shown.bs.modal', function() {\n                self.setModalDraggable('#annotation-modal .modal-dialog');\n            });\n        }\n    }\n\n    /**\n     * Render annotation view on the report page\n     * @param {Object} annotation The annotation object\n     * @param {Array} tabledata Completion data from the report table\n     * @returns {void}\n     */\n    displayReportView(annotation, tabledata) {\n        let self = this;\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.closest('.modal').addClass('modal-fullscreen');\n        $message.find('#content').html(`<div class=\"tab-content\" id=\"myTabContent\">\n            <div class=\"tab-pane fade\" id=\"formtab\" role=\"tabpanel\">\n            <div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div></div>\n            <div class=\"tab-pane fade show active\" id=\"responsetab\" role=\"tabpanel\"></div>\n            </div><div class=\"shadow z-index-1 h-100 bg-white overflow-auto\" id=\"responseview\">\n            <div class=\"modal-header d-flex bg-white align-items-center pr-0 sticky-top\" id=\"title\">\n                                            <h5 class=\"modal-title text-truncate mb-0\"><div class=\"d-flex align-items-center p-1\">\n                                                <select id=\"submission-list\"\n                                                class=\"custom-select rounded-sm mr-1\"></select>\n                                                <button class=\"btn p-0 previous\">\n                                                <i class=\"bi bi-chevron-left fa-fw fs-25px\"></i>\n                                                </button>\n                                                <button class=\"btn p-0 next\">\n                                                <i class=\"bi bi-chevron-right fa-fw fs-25px\"></i>\n                                                </button>\n                                            </div></h5>\n                                            <div class=\"d-flex align-items-center\">\n                                                <button class=\"btn mx-2 p-0 close\">\n                                                <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                                                </button>\n                                            </div>\n                                        </div>\n            <div id=\"form-preview\"></div>\n            </div>`);\n        $message.find('.btns')\n            .prepend(`<button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#formtab\">\n            <i class=\"bi bi-input-cursor-text fs-25px\"  data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('form', 'ivplugin_form')}\"></i></button>\n            <button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#responsetab\">\n            <i class=\"bi bi-table fs-25px\" data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('responses', 'ivplugin_form')}\"></i>\n            </button>`);\n\n        this.render(annotation, 'json').then((ct) => {\n            let logs = [];\n            let users = [];\n            const fields = JSON.stringify([...ct.fields]); // Copy the fields object.\n            let formfields = ct.fields;\n            let userids = tabledata.map((item) => item.id);\n            this.getLogs(annotation, userids).then((res) => {\n                logs = res;\n                logs.map(x => {\n                    const completiondata = tabledata.find(y => y.id == x.userid);\n                    x.completiondata = completiondata;\n                    return x;\n                });\n\n                // We're going to build the table data.\n                let heading = [\n                    {title: M.util.get_string('id', 'mod_interactivevideo'), \"class\": 'exportable'},\n                    {title: M.util.get_string('timesubmitted', 'mod_interactivevideo'), \"class\": 'exportable time'},\n                    {title: M.util.get_string('participant', 'mod_interactivevideo'), \"class\": ''},\n                    {title: M.util.get_string('firstname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                    {title: M.util.get_string('lastname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                    {title: M.util.get_string('email', 'mod_interactivevideo'), \"class\": 'exportable'},\n                ];\n\n                let validfields = [];\n\n                formfields.forEach(f => {\n                    if (f.type != 'header' && f.type != 'html' && f.type != 'linebreak') {\n                        let head = f.formattedlabel;\n                        if (f.helptext.text && f.helptext.text != '') {\n                            head = `<span>${f.formattedlabel}\n                            <i class=\"ml-2 bi bi-info-circle-fill text-secondary helptext\" data-fieldid=\"${f.id}\"\n                             data-toggle=\"popover\">\n                            </i></span>`;\n                        }\n                        heading.push({\n                            title: head,\n                            \"class\": 'exportable not-sortable',\n                        });\n                        validfields.push(f);\n                    }\n                });\n\n                let rows = [];\n\n                logs.forEach(l => {\n                    let submission = JSON.parse(l.text1);\n                    let row = [\n                        l.id,\n                        `<a href=\"javascript:void(0)\" class=\"viewsubmission\" data-id=\"${l.id}\">${l.formattedtimecreated}</a>`,\n                        `<span class=\"text-truncate\">${l.completiondata.picture}</span>`,\n                        l.completiondata.firstname,\n                        l.completiondata.lastname,\n                        l.completiondata.email,\n                    ];\n\n                    validfields.forEach(async f => {\n                        let response = submission['field-' + f.id];\n                        if (response == undefined) {\n                            row.push('');\n                            return;\n                        }\n                        switch (f.type) {\n                            case 'text':\n                            case 'textarea':\n                                row.push(response);\n                                break;\n                            case 'editor':\n                                row.push(response.text);\n                                break;\n                            case 'select':\n                                var res = [];\n                                var options = f.options.split('\\n');\n                                options.forEach((option) => {\n                                    option = option.trim();\n                                    let choices = option.split('=');\n                                    let value = choices[0];\n                                    if (response.indexOf(value) > -1) {\n                                        res.push(choices[1]);\n                                    }\n                                });\n                                row.push(res.join(', '));\n                                break;\n                            case 'radio':\n                                var options = f.options.split('\\n');\n                                options.forEach((option) => {\n                                    option = option.trim();\n                                    let choices = option.split('=');\n                                    let value = choices[0];\n                                    if (response == value) {\n                                        row.push(choices[1]);\n                                        return;\n                                    }\n                                });\n                                break;\n                            case 'advcheckbox':\n                                var res = [];\n                                var options = f.options.split('\\n');\n                                var selected = Object.values(response);\n                                selected = selected.filter((item) => item != '');\n                                options.forEach((option) => {\n                                    option = option.trim();\n                                    let choices = option.split('=');\n                                    let value = choices[0];\n                                    if (selected.indexOf(value) > -1) {\n                                        res.push(choices[1]);\n                                    }\n                                });\n                                row.push(res.join(', '));\n                                break;\n                            case 'date_selector':\n                                var date;\n                                if (response.day < 9) {\n                                    date += '0' + response.day;\n                                } else {\n                                    date += response.day;\n                                }\n                                date += '/';\n                                if (response.month < 9) {\n                                    date += '0' + response.month;\n                                } else {\n                                    date += response.month;\n                                }\n                                date += '/';\n                                date += response.year;\n                                if (response.hour && response.minute) {\n                                    date += ' ';\n                                    if (response.hour < 9) {\n                                        date += '0' + response.hour;\n                                    } else {\n                                        date += response.hour;\n                                    }\n                                    date += ':';\n                                    if (response.minute < 9) {\n                                        date += '0' + response.minute;\n                                    } else {\n                                        date += response.minute;\n                                    }\n                                }\n                                row.push(date);\n                                break;\n                            case 'duration':\n                                if (response) {\n                                    row.push(response.number + ' ' + M.util.get_string(response.timeunit, 'ivplugin_form'));\n                                } else {\n                                    row.push('');\n                                }\n                                break;\n                            case 'filemanager':\n                                if (response.length > 0) {\n                                    const files = response.map((file) => {\n                                        const filename = file.split('/').pop();\n                                        return `<a href=\"${file}\" target=\"_blank\"\n                                         class=\"text-truncate\">${decodeURIComponent(filename.replace('field-' + f.id + '_', ''))}\n                                         <span class=\"d-none\">[${file}]</span></a>`;\n                                    });\n                                    row.push(files.join(', '));\n                                } else {\n                                    row.push('');\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    });\n\n                    rows.push(row);\n\n                });\n\n                users = logs.map((l) => {\n                    return {\n                        id: l.id,\n                        fullname: `${l.completiondata.firstname} ${l.completiondata.lastname}`,\n                    };\n                });\n\n                users.sort((a, b) => {\n                    return a.fullname.localeCompare(b.fullname);\n                });\n\n                users.forEach((user) => {\n                    $(`#message[data-id='${annotation.id}']`).find('#submission-list')\n                        .append(`<option value=\"${user.id}\">${user.fullname}</option>`);\n                });\n\n                $(`#message[data-id='${annotation.id}']`).find('#responsetab')\n                    .html(`<div id=\"formresponsetable\" class=\"table-responsive\">\n                    <table class=\"table table-bordered table-striped w-100\">\n                    <thead>\n                        <tr>\n                            ${heading.map(h => `<th class=\"${h.class} text-truncate\">${h.title}</th>`).join('')}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                    </table>\n                    </div>`);\n\n                renderAnnotationLogs({\n                    heading: heading,\n                    rows: rows,\n                }, '#formresponsetable');\n            });\n\n            $message.find('.btns').on('click', `[data-toggle=\"tab\"]`, function() {\n                $(`[data-toggle=\"tab\"]`).removeClass('active');\n                // Always remove the rendered form.\n                $(`#message[data-id='${annotation.id}']`).find(`#responseview #form-preview, .tab-content #form-preview`).empty();\n                if ($(this).data('target') == '#formtab') {\n                    self.renderForm(annotation, JSON.parse(fields), null, '#formtab');\n                }\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] table .helptext`, async function(e) {\n                // Dismiss all other popovers.\n                $('.popover').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let $this = $(this);\n                let contentid = $(this).attr('data-fieldid');\n                let field = formfields.find((field) => field.id == contentid);\n                let content = field.helptext.text;\n                $this.popover({\n                    content: '<div class=\"loader\"></div>',\n                    title: `<span class=\"mr-2\">${field.formattedlabel}</span>`\n                        + `<i class=\"bi bi-x-circle-fill ml-auto popover-dismiss cursor-pointer\" style=\"font-size:1.5em;\"></i>`,\n                    placement: 'top',\n                    html: true,\n                    trigger: 'focus',\n                    template: `<div class=\"popover inlineannotation-popover id-${contentid}\"\n                     role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                     <div class=\"popover-body rounded\"></div></div>`,\n                });\n                $this.popover('show');\n                $this.on('shown.bs.popover', function() {\n                    let $body = $(`.popover.id-${contentid} .popover-body`);\n                    self.formatContent(content, M.cfg.contextid).then((html) => {\n                        $body.html(html);\n                        notifyFilter($body);\n                        $this.popover('update');\n                        return;\n                    }).catch(() => {\n                        // Do nothing.\n                    });\n                });\n            });\n\n            $(document).on('click', `.popover-dismiss`, function(e) {\n                e.stopImmediatePropagation();\n                $(this).closest('.popover').remove();\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] .viewsubmission`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).attr('data-id');\n                $(`#message[data-id='${annotation.id}']`).find('#responseview').addClass('show');\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(id).trigger('change');\n            });\n\n            $(document).on('change', `#message[data-id='${annotation.id}'] #submission-list`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).val();\n                let log = logs.find((item) => item.id == id);\n                self.renderForm(annotation, formfields, log, '#responseview');\n                let index = users.findIndex((item) => item.id == id);\n                if (index > 0) {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', true);\n                }\n                if (index < users.length - 1) {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', true);\n                }\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .close`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                $(`#message[data-id='${annotation.id}']`).find('#responseview').removeClass('show');\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .previous`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                let index = users.findIndex((item) => item.id == id);\n                let prev = users[index - 1];\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(prev.id).trigger('change');\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .next`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                let index = users.findIndex((item) => item.id == id);\n                let next = users[index + 1];\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(next.id).trigger('change');\n            });\n            return;\n        }).catch(() => {\n            // Do nothing.\n        });\n    }\n}"],"names":["Form","Base","postEditCallback","renderViewer","annotation","self","this","isEditMode","formfields","M","util","get_string","dataForTemplate","id","items","render","then","html","appendTo","modal","on","remove","content","postContentRender","catch","find","append","reportpage","text1","duedate","fetchData","Promise","resolve","reject","ajax","url","cfg","wwwroot","method","dataType","data","action","sesskey","userid","cmid","annotationid","contextid","success","log","JSON","parse","error","formjson","renderList","empty","forEach","item","icon","field","type","stringify","formattedlabel","previewform","previewForm","selector","document","querySelector","DynamicForm","length","addClass","formdata","load","interval","setInterval","element","clearInterval","scrollIntoView","behavior","block","removeClass","fields","courseid","courseId","editing","prop","name","course","interaction","completed","submission","newformjson","map","value","default","reviewing","submissionid","char2","Date","getTime","replaceWith","getFormJson","attr","get","sortable","handle","placeholder","stop","e","preventDefault","stopImmediatePropagation","typeString","newfieldmodal","toLowerCase","formfieldform","label","addEventListener","trigger","events","SUBMIT_BUTTON_PRESSED","defaultPrevented","submitFormAjax","FORM_SUBMITTED","response","detail","push","setModalDraggable","closest","formfielddata","editform","index","findIndex","Math","floor","splice","filter","json","cleanItems","replace","draftitemid","updated","$collapsible","hasClass","group","match","completiontracking","$message","text","async","toggleCompletion","show","hide","completionCallback","annotations","thisItem","msg","addNotification","renderForm","f","node","ff","runInteraction","editmode","enableManualCompletion","displayoptions","displayReportView","tabledata","prepend","ct","logs","users","userids","getLogs","res","x","completiondata","y","heading","title","validfields","head","helptext","rows","l","row","formattedtimecreated","picture","firstname","lastname","email","undefined","options","split","option","choices","trim","indexOf","join","selected","Object","values","date","day","month","year","hour","minute","number","timeunit","files","file","filename","pop","decodeURIComponent","fullname","sort","a","b","localeCompare","user","h","class","$this","contentid","popover","placement","template","$body","formatContent","val","prev","next"],"mappings":"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"}