{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["/* eslint-disable complexity */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for the form plugin.\n *\n * @module     ivplugin_form/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport Ajax from 'core/ajax';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport 'mod_interactivevideo/libraries/jquery-ui';\nimport Templates from 'core/templates';\nimport DynamicForm from 'core_form/dynamicform';\nimport {renderAnnotationLogs} from 'mod_interactivevideo/report';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nimport Notification from 'core/notification';\nexport default class Form extends Base {\n    /**\n     * Do nothing on the interactions page.\n     */\n    postEditCallback() {\n        // Do nothing\n    }\n\n    /**\n     * Render the main container for the form plugin.\n     * @param {Object} annotation annotation object\n     */\n    async renderViewer(annotation) {\n        let self = this;\n        if (this.isEditMode()) {\n            let formfields = [\n                {\n                    'icon': 'bi bi-alphabet-uppercase',\n                    'type': 'header',\n                    'label': M.util.get_string('headerfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-text-paragraph',\n                    'type': 'html',\n                    'label': M.util.get_string('htmlfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-hr',\n                    'type': 'linebreak',\n                    'label': M.util.get_string('linebreakfield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-input-cursor-text',\n                    'type': 'text',\n                    'label': M.util.get_string('textfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-textarea-resize',\n                    'type': 'textarea',\n                    'label': M.util.get_string('textareafield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-card-text',\n                    'type': 'editor',\n                    'label': M.util.get_string('editorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-menu-button-wide',\n                    'type': 'select',\n                    'label': M.util.get_string('selectfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-check2-square',\n                    'type': 'advcheckbox',\n                    'label': M.util.get_string('advcheckboxfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-record-circle',\n                    'type': 'radio',\n                    'label': M.util.get_string('radiofield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-calendar3-event',\n                    'type': 'date',\n                    'label': M.util.get_string('dateselectorfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-calendar3-week',\n                    'type': 'week',\n                    'label': M.util.get_string('weekfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-calendar3',\n                    'type': 'month',\n                    'label': M.util.get_string('monthfield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-clock',\n                    'type': 'time',\n                    'label': M.util.get_string('timefield', 'ivplugin_form'),\n                },\n                {\n                    'icon': 'bi bi-stopwatch',\n                    'type': 'duration',\n                    'label': M.util.get_string('durationfield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-sliders2',\n                    'type': 'range',\n                    'label': M.util.get_string('rangefield', 'ivplugin_form'),\n                },\n                {\n                },\n                {\n                    'icon': 'bi bi-file-earmark-arrow-up',\n                    'type': 'filemanager',\n                    'label': M.util.get_string('filemanagerfield', 'ivplugin_form'),\n                }\n            ];\n            const dataForTemplate = {\n                id: annotation.id,\n                items: formfields,\n            };\n            const template = await Templates.render('ivplugin_form/formedit_modal', dataForTemplate);\n            let $modal = $(template);\n            $modal.appendTo('body');\n            $('#form-modal').modal('show');\n\n            $('#form-modal').on('hidden.bs.modal', function() {\n                $(this).remove();\n            });\n\n            $('#form-modal').on('shown.bs.modal', async function() {\n                let content = await self.render(annotation, 'json');\n                self.postContentRender(annotation, formfields, content);\n            });\n\n            $(`#message[data-id='${annotation.id}']`).find('#content')\n                .append(`<div id=\"formjson\" class=\"d-none\"></div>`);\n        } else {\n            await super.renderViewer(annotation);\n            let content = await self.render(annotation, 'json');\n            $(`#message[data-id='${annotation.id}']`).find('#content')\n                .append(`<div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div>\n                    <div id=\"formjson\" class=\"d-none\"></div>`);\n            this.postContentRender(annotation, '', content);\n        }\n    }\n\n    /**\n     * Apply render changes after the form is rendered.\n     */\n    postFormRender() {\n        $('form .fitem [data-type=\"time\"]').attr('type', 'time');\n        $('form .fitem [data-type=\"week\"]').attr('type', 'week');\n        $('form .fitem [data-type=\"month\"]').attr('type', 'month');\n        $('form .fitem [data-type=\"date\"]').attr('type', 'date');\n        $('form .fitem textarea:visible').trigger('input');\n        $('form .fitem [data-type=\"datetime\"]').attr('type', 'datetime-local');\n        $('form .fitem [data-type=\"range\"]').attr('type', 'range').removeClass('form-control').addClass('form-control-range');\n    }\n\n    /**\n     * Render the input group lists for repeatable options.\n     * @param {String} node selector for the form container\n     */\n    repeatableValues(node) {\n        $(`${node} form .fitem [data-type=\"keyvalue\"]`).each(function() {\n            let $this = $(this);\n            let dataId = $this.attr('data-id');\n            // Remove the existing repeatable div\n            $(`div#${dataId}-repeatable`).remove();\n\n            let defaultValues = $(`input[type=\"hidden\"][data-type=\"default\"][data-id=${dataId}]`).val().split(\",\");\n            let value = $this.val();\n            let isRadio = $(this).attr('data-radio') == 'true';\n            let rows = value.split(\"\\n\");\n            let html = '';\n            if (value != '' && rows.length > 0) {\n                rows.forEach(function(row, i) {\n                    let rowvalues = row.split('=');\n                    let key = rowvalues[0].trim();\n                    let val = rowvalues[1].trim();\n                    if (key != '' && val != '') {\n                        html += `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\">\n                        <div class=\"input-group-text border-0 rounded-0 pl-0\">\n                            <i class=\"bi bi-grip-vertical mr-2 cursor-move\"></i>\n                            <input type=\"checkbox\" ${defaultValues.includes(key) ? 'checked' : ''}>\n                        </div>\n                        <input type=\"text\" class=\"form-control key\" value=\"${key}\">\n                        <input type=\"text\" value=\"${val}\" class=\"form-control value\">\n                        <div class=\"input-group-append\">\n                        <button class=\"btn add-row btn-secondary\" type=\"button\"><i class=\"bi bi-plus-lg\"></i></button>\n                        <button class=\"btn btn-danger delete-row rounded-0\" ${i == 0 ? 'disabled' : ''} type=\"button\">\n                        <i class=\"bi bi-trash3-fill\"></i></button>\n                        </div></div>`;\n                    }\n                });\n            } else {\n                html = `<div class=\"input-group mb-1 w-100 flex-nowrap align-items-center\">\n                        <div class=\"input-group-text border-0 rounded-0 pl-0\">\n                            <i class=\"bi bi-grip-vertical mr-2 cursor-move\"></i>\n                            <input type=\"checkbox\"/>\n                        </div>\n                        <input type=\"text\" class=\"form-control key\">\n                        <input type=\"text\" class=\"form-control value\">\n                        <div class=\"input-group-append\">\n                        <button class=\"btn add-row btn-secondary\" type=\"button\"><i class=\"bi bi-plus-lg\"></i></button>\n                        <button class=\"btn btn-danger delete-row rounded-0 disabled\" disabled type=\"button\">\n                        <i class=\"bi bi-trash3-fill\"></i></button>\n                        </div></div>`;\n            }\n            $this.after(`<div id=\"${dataId}-repeatable\" data-radio=\"${isRadio}\" data-id=\"${dataId}\"\n                 class=\"w-100 repeatable\">${html}</div>`);\n            $this.addClass('d-none');\n            $(`form .fitem #${dataId}-repeatable`).sortable({\n                placeholder: \"ui-state-highlight\",\n                handle: '.bi-grip-vertical',\n                stop: function() {\n                    // Handle delete buttons. The first one should be disabled.\n                    $(`${node} form .repeatable .delete-row`).removeClass('disabled').removeAttr('disabled');\n                    $(`${node} form .repeatable .delete-row`).first().addClass('disabled').attr('disabled', 'disabled');\n                    $(`${node} form .repeatable input[type=text]`).trigger('input');\n                }\n            });\n        });\n        $(document).on('click', `${node} .repeatable .add-row`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let $thisrow = $(this);\n            let $parent = $thisrow.closest('.input-group');\n            let $row = $parent.clone();\n            $row.find('input').val('');\n            $row.find('input[type=\"checkbox\"]').prop('checked', false);\n            $row.find('.delete-row').removeClass('disabled').removeAttr('disabled');\n            $parent.after($row);\n        });\n        $(document).on('click', `${node} .repeatable .delete-row`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let $thisrow = $(this);\n            let $parent = $thisrow.closest('.input-group');\n            $parent.remove();\n            $(`${node} form .repeatable input[type=text]`).trigger('input');\n        });\n        $(document).on('input change', `${node} form .repeatable input`, function() {\n            let $this = $(this);\n            let $parent = $this.closest('.repeatable');\n            let $inputs = $parent.find('.input-group');\n            let values = {};\n            let defaultValues = [];\n            let isRadio = $parent.attr('data-radio') == 'true';\n            if (isRadio && $this.attr('type') == 'checkbox') {\n                // Make sure only one checkbox is checked.\n                $inputs.find('input[type=\"checkbox\"]').not(this).prop('checked', false);\n\n            }\n            $inputs.each(function() {\n                let $input = $(this);\n                if ($input.find('input.key').val() != '' && $input.find('input.value').val() != '') {\n                    let checkbox = $input.find('input[type=\"checkbox\"]');\n                    if (checkbox.prop('checked')) {\n                        defaultValues.push($input.find('input.key').val().trim());\n                    }\n                    values[$input.find('input.key').val().trim()] = $input.find('input.value').val().trim();\n                }\n\n            });\n            let keys = Object.keys(values);\n            let rows = keys.map((key) => key + '=' + values[key]);\n            $('textarea[data-id=\"' + $parent.attr('data-id') + '\"]').val(rows.join(\"\\n\"));\n            defaultValues = [...new Set(defaultValues)];\n            $('input[type=\"hidden\"][data-type=\"default\"][data-id=\"' + $parent.attr('data-id') + '\"]').val(defaultValues.join(\",\"));\n        });\n    }\n\n    /**\n     * Override the postContentRender method for the form plugin.\n     * @param {Object} annotation annotation object\n     * @param {Array} formfields form fields data\n     * @param {Object} content form content data\n     * @param {Boolean} reportpage report page flag\n     * @return {void}\n     */\n    postContentRender(annotation, formfields, content, reportpage = false) {\n        let self = this;\n        const $message = $(`#message[data-id='${annotation.id}']`);\n        if (annotation.text1 != 0) {\n            $message.find(`#formmeta`)\n                .append(`<div class=\"duedate\">${M.util.get_string('duedate', 'ivplugin_form')}: ${content.duedate}</div>`);\n        }\n\n        /**\n         * Fetch form submission data of the current user.\n         * @returns {Promise} form submission data\n         * @throws {Error} if an error occurs\n         */\n        const fetchData = () => {\n            return new Promise((resolve, reject) => {\n                Ajax.call([{\n                    args: {\n                        userid: this.userid,\n                        cmid: annotation.annotationid,\n                        annotationid: annotation.id,\n                        contextid: M.cfg.contextid,\n                    },\n                    contextid: M.cfg.contextid,\n                    methodname: 'ivplugin_form_get_log',\n                }])[0].then((response) => {\n                    resolve(JSON.parse(response.record));\n                }).catch((err) => {\n                    // Do nothing.\n                    reject(err);\n                });\n            });\n        };\n\n        /**\n         * Form fields data.\n         * @type {Array}\n         */\n        let formjson = [];\n\n        /**\n         * Render the list of form fields.\n         * @param {Array} fields form fields data\n         */\n        const renderList = (fields) => {\n            $(`#form-field-list`).empty();\n            if (fields) {\n                fields.forEach((item) => {\n                    let icon = formfields.find((field) => field.type === item.type).icon;\n                    $(`#form-field-list`)\n                        .append(`<li class=\"list-group-item d-flex align-items-start justify-content-between p-0\"\n                         data-id=\"${item.id}\" data-type=\"${item.type}\">\n                                    <div class=\"d-flex align-items-start pt-1\">\n                                    <i class=\"bi bi-grip-vertical px-2 cursor-move\"></i>\n                                    <i class=\"${icon} mr-2\"></i>\n                                    <div class=\"d-inline-block field-label cursor-pointer\">${item.formattedlabel}</div></div>\n                                    <div class=\"ml-auto d-flex\">\n                                        <button class=\"btn btn-sm rounded-0 editfield\"\n                                         title=\"${M.util.get_string('edit', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-pencil-square\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0 copyfield\"\n                                         title=\"${M.util.get_string('clone', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-copy\"></i></button>\n                                        <button class=\"btn btn-sm rounded-0 text-danger deletefield\"\n                                         title=\"${M.util.get_string('delete', 'mod_interactivevideo')}\">\n                                         <i class=\"bi bi-trash3\"></i></button>\n                                        </div>\n                                </li>`);\n                });\n            }\n            $message.find(`#formjson`).text(JSON.stringify(fields));\n        };\n\n        let tracking = [];\n        let trackingIndex = 0;\n        /**\n         * Update tracking data for redo and undo\n         * @param {Array} fields array of form fields\n         * @param {Array} actives array of active items\n         */\n        const saveTracking = (fields, actives) => {\n            if (trackingIndex < tracking.length - 1) {\n                // Remove all the tracking data after the current index.\n                tracking = tracking.slice(0, trackingIndex + 1);\n            }\n            tracking.push({\n                items: JSON.stringify(fields),\n                actives: actives,\n                at: new Date().getTime(),\n            });\n            tracking.sort((a, b) => a.at - b.at);\n            trackingIndex = tracking.length - 1;\n            $('#save-close #undo').removeAttr('disabled');\n            $('#save-close #redo').attr('disabled', 'disabled');\n            if (tracking.length == 1) {\n                $('#save-close #undo').attr('disabled', 'disabled');\n            }\n            $('#save-close #save').removeAttr('disabled');\n        };\n\n        let previewform = null; // DynamicForm instance.\n\n        /**\n         * Activate the sortable fields.\n         */\n        const activateFieldsSortable = () => {\n            $('#form-preview form').sortable({\n                items: \".fitem.row:not(.femptylabel):not([hidden]), fieldset.collapsible\",\n                connectWith: \"#form-preview form .fcontainer\",\n            });\n\n            $('#form-preview form .fcontainer').sortable({\n                items: \".fitem.row:not(.femptylabel):not([hidden])\",\n                connectWith: \"#form-preview form .fcontainer, #form-preview form\",\n            });\n            $('#form-preview form, #form-preview form .fcontainer').sortable(\"option\", {\n                placeholder: \"ui-state-highlight\",\n                forcePlaceholderSize: true,\n                cursor: 'move',\n                forceHelperSize: true,\n                tolerance: 'pointer',\n            });\n        };\n\n        /**\n         * Preview the form.\n         * @param {Array} data form fields data\n         * @param {Number} id field id\n         * @param {Boolean} updateDraft update draft status\n         */\n        const previewForm = (data, id = null, updateDraft = true) => {\n            $message.find(`#form-preview`).empty();\n            const selector = document.querySelector(`#message[data-id='${annotation.id}'] #form-preview`);\n            previewform = new DynamicForm(selector, 'ivplugin_form\\\\submitform_form');\n            if (data === null || data.length == 0) {\n                $('#form-preview').removeClass('loader');\n                return;\n            }\n            $('#form-preview').addClass('loader');\n            formdata.formjson = JSON.stringify(data);\n            previewform.load(formdata);\n            let interval = setInterval(() => {\n                if ($message.find(`#form-preview form`).length > 0) {\n                    clearInterval(interval);\n                    self.postFormRender();\n                }\n            }, 100);\n            if (id) {\n                // Loop until the form element is found and highlight the current field.\n                let interval = setInterval(() => {\n                    let element = document.querySelector('#form-preview form');\n                    if (element) {\n                        clearInterval(interval);\n                        $(`#form-preview #fitem_field-${id},\n                             #form-preview fieldset[id^=id_field-${id}],\n                             #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                             #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                        let field = element.querySelector(`#form-preview .field-highlight`);\n                        let isHeader = $('.field-highlight').hasClass(`collapsible`);\n                        if (field) {\n                            field.scrollIntoView({behavior: 'smooth', block: isHeader ? 'start' : 'center'});\n                        }\n                    }\n                }, 100);\n            }\n            if (updateDraft) {\n                saveTracking(data, id);\n            }\n\n            if (!self.isEditMode() && $message.attr('data-placement') == 'popup') {\n                const interval = setInterval(() => {\n                    if ($message.find(`#form-preview form`).length > 0) {\n                        clearInterval(interval);\n                        // Create the modal footer\n                        let $actionbtns = $message.find(`#form-preview #form-action-btns`);\n                        let $clone = $actionbtns.clone();\n                        $actionbtns.remove();\n                        let footer = `<div class=\"modal-footer\">\n                            ${$clone.html()}\n                            </div>`;\n                        $message.find(`.modal-content .modal-footer`).remove();\n                        $message.find(`.modal-content`).append(footer);\n                    }\n                }, 100);\n            }\n\n            if (this.isEditMode()) {\n                let interval = setInterval(() => {\n                    if ($('#form-preview form').length > 0) {\n                        clearInterval(interval);\n                        activateFieldsSortable();\n                    }\n                }, 100);\n            }\n        };\n\n        if (content && content.fields != '' && content.fields !== null) {\n            formjson = content.fields;\n        }\n\n        let formdata = {};\n        if (reportpage) {\n            formdata = {\n                id: annotation.id,\n                contextid: M.cfg.contextid,\n                type: 'form',\n                courseid: M.cfg.courseId,\n                annotationid: 0,\n                editing: 0,\n                formjson: JSON.stringify(formjson),\n            };\n            previewForm(formjson);\n            return;\n        }\n\n        formdata = {\n            id: annotation.id,\n            contextid: M.cfg.contextid,\n            type: self.prop.name,\n            courseid: self.course,\n            annotationid: self.interaction,\n            editing: self.isEditMode() ? 1 : 0,\n            formjson: JSON.stringify(formjson),\n        };\n\n        $message.on('click', `#submitform-submit`, e => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            const event = previewform.trigger(previewform.events.SUBMIT_BUTTON_PRESSED);\n            if (!event.defaultPrevented) {\n                previewform.submitFormAjax();\n            }\n\n            // On validation error we have to rerender the custom fields.\n            previewform.addEventListener(previewform.events.SERVER_VALIDATION_ERROR, (e) => {\n                e.stopImmediatePropagation();\n                self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                previewform.notifyResetFormChanges();\n                self.postFormRender();\n            });\n\n            previewform.addEventListener(previewform.events.CLIENT_VALIDATION_ERROR, (e) => {\n                e.stopImmediatePropagation();\n                self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                previewform.notifyResetFormChanges();\n            });\n\n            previewform.addEventListener(previewform.events.FORM_SUBMITTED, e => {\n                e.preventDefault();\n                e.stopImmediatePropagation(); // Important; otherwise, event will repeat multiple times.\n                self.toggleCompletion(annotation.id, 'mark-done', 'automatic');\n                formdata.reviewing = 1;\n                if (annotation.char2 == 1 && (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000)) {\n                    $('#editsubmission').show();\n                }\n            });\n        });\n\n        $message.on('click', `#editsubmission`, (e) => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            formdata.reviewing = 0;\n            $('#editsubmission').hide();\n            formjson = $message.find(`#formjson`).text();\n            formjson = JSON.parse(formjson);\n            previewForm(formjson);\n        });\n\n        $message.on('click', `#cancel-submit`, (e) => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $message.find(`.modal-content .modal-footer`).remove();\n            formdata.reviewing = 1;\n            $('#editsubmission').show();\n            previewForm(formjson);\n        });\n\n        if (!this.isEditMode()) {\n            if (annotation.completed) {\n                fetchData()\n                    .then((log) => {\n                        if (log) {\n                            let submission = JSON.parse(log.text1);\n                            let newformjson = formjson.map((item) => {\n                                item.value = submission['field-' + item.id];\n                                item.default = submission['field-' + item.id];\n                                if (item.type == 'radio') {\n                                    item.othertext = submission['field-' + item.id + '-otheroptiontext'];\n                                }\n                                return item;\n                            });\n                            formdata.reviewing = 1;\n                            formdata.submissionid = submission.id;\n                            $message.find(`#formjson`).text(JSON.stringify(formjson));\n                            previewForm(newformjson);\n                            // Append the edit button if applicable\n                            if (annotation.char2 == 1 && (annotation.text1 == 0\n                                || annotation.text1 > new Date().getTime() / 1000)) {\n                                $('#formmeta').append(`<button class=\"btn btn-primary ml-auto btn-sm\" id=\"editsubmission\">\n                                    <i class=\"bi bi bi-pencil-square mr-2\"></i>${M.util.get_string('edit', 'mod_interactivevideo')}\n                                    </button>`);\n                            }\n                        } else {\n                            if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                                previewForm(formjson);\n                            }\n                        }\n                        return;\n                    })\n                    .catch(() => {\n                        // Do nothing.\n                    });\n            } else {\n                if (annotation.text1 == 0 || annotation.text1 > new Date().getTime() / 1000) {\n                    previewForm(formjson);\n                } else {\n                    $('#formmeta').replaceWith(`<div class=\"alert alert-warning\">\n                        ${M.util.get_string('formnolongeravailable', 'ivplugin_form')}</div>`);\n                }\n            }\n        } else {\n            previewForm(formjson, null, true);\n            $message.find(`#formjson`).text(JSON.stringify(formjson));\n            renderList(formjson);\n        }\n\n        if (this.isEditMode()) {\n\n            /**\n             * Put form fields in DOM.\n             * @param {Array} ff form fields data\n             */\n            const saveFormJson = (ff) => {\n                $message.find(`#formjson`).text(JSON.stringify(ff));\n            };\n\n            /**\n             * Get the form fields data based on the current order.\n             */\n            const getFormJson = () => {\n                let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                let updatedFormJson = $message.find(`#form-field-list li`).map(function() {\n                    const id = $(this).attr('data-id');\n                    const field = currentFormFields.find((item) => item.id == id);\n                    return field;\n                }).get();\n                saveFormJson(updatedFormJson);\n                formjson = updatedFormJson;\n            };\n\n            $('#form-field-list').sortable({\n                placeholder: \"ui-state-highlight\",\n                cursor: 'move',\n                stop: function(event, ui) {\n                    const id = ui.item.attr('data-id');\n                    getFormJson();\n                    renderList(formjson);\n                    previewForm(formjson, id, true);\n                }\n            });\n\n            // Add the form field.\n            $message.on('click', `button.add-field`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let type = $(this).data('type');\n                let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                let newfieldmodal = `<div class=\"modal fade\" id=\"newfield-modal\" aria-labelledby=\"newfield-modal\"\n                 aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('addformfield', 'ivplugin_form',\n                    typeString)}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <i class=\"bi bi-x-lg fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                        'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"newfield-submit\">${M.util.get_string('save',\n                            'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(newfieldmodal);\n                $('#newfield-modal').modal('show');\n                $('#newfield-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                    $('body').addClass('modal-open');\n                });\n                $('#newfield-modal').on('shown.bs.modal', function() {\n                    let formfieldform = new DynamicForm(document.querySelector('#newfield-modal .modal-body'),\n                        'ivplugin_form\\\\form_fields\\\\' + type);\n                    let fields = [];\n                    if (formjson !== null) {\n                        fields = formjson.map((item) => {\n                            return {\n                                id: item.id,\n                                label: item.label,\n                                type: item.type,\n                            };\n                        });\n                    }\n\n                    formfieldform.load({\n                        contextid: M.cfg.contextid,\n                        type: type,\n                        annotationid: annotation.id,\n                        fields: JSON.stringify(fields),\n                    });\n\n                    document.querySelector('#newfield-submit').addEventListener('click', (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                        if (!event.defaultPrevented) {\n                            formfieldform.submitFormAjax();\n                        }\n                    });\n\n                    formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const response = e.detail;\n                        formjson = JSON.parse($message.find(`#formjson`).text());\n                        const active = $('#form-preview form .fitem.row.field-active');\n                        if (active.length > 0) {\n                            let id = active.attr('id');\n                            id = id.split('field-')[1];\n                            id = id.split('_')[0];\n                            let index = formjson.findIndex((item) => item.id == id);\n                            // Insert the new field after the active field.\n                            formjson.splice(index + 1, 0, response);\n                        } else {\n                            formjson.push(response);\n                        }\n                        renderList(formjson);\n                        previewForm(formjson, response.id, true);\n                        $('#newfield-modal').modal('hide');\n                    });\n\n                    self.setModalDraggable('#newfield-modal .modal-dialog');\n                    let formInterval = setInterval(() => {\n                        if ($('#newfield-modal .modal-body').find('form').length > 0) {\n                            clearInterval(formInterval);\n                            self.postFormRender();\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#newfield-modal');\n                            }\n                        }\n                    }, 100);\n\n                    $(formfieldform).on('core_form_dynamicform_clientvalidationerror core_form_dynamicform_validationerror',\n                        function(e) {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            self.postFormRender();\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#newfield-modal');\n                            }\n                            self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                        });\n                });\n            });\n\n            // Edit the form field\n            $message.on('click', `#form-field-list button.editfield`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let type = $(this).closest('li').attr('data-type');\n                let fieldid = $(this).closest('li').attr('data-id');\n                formjson = JSON.parse($message.find(`#formjson`).text());\n                let formfielddata = formjson.find((item) => item.id == fieldid);\n                let fields = formjson.map((item) => {\n                    return {\n                        id: item.id,\n                        label: item.label,\n                        type: item.type,\n                    };\n                });\n                formfielddata.fields = JSON.stringify(fields);\n                let typeString = M.util.get_string(type + 'field', 'ivplugin_form');\n                let editform = `<div class=\"modal fade\" id=\"editfield-modal\"\n                 aria-labelledby=\"editfield-modal\" aria-hidden=\"true\" style=\"background: rgba(0,0,0,0.5);\">\n                    <div class=\"modal-dialog modal-lg modal-dialog-centered modal-dialog-scrollable\">\n                        <div class=\"modal-content\">\n                            <div class=\"modal-header\">\n                                <h5 class=\"modal-title\">${M.util.get_string('editformfield',\n                    'ivplugin_form', typeString)}</h5>\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <i class=\"bi bi-x-lg fs-25px\"></i>\n                                </button>\n                            </div>\n                            <div class=\"modal-body loader\">\n                            </div>\n                            <div class=\"modal-footer\">\n                                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">${M.util.get_string('close',\n                        'mod_interactivevideo')}</button>\n                                <button type=\"button\" class=\"btn btn-primary\" id=\"editfield-submit\">${M.util.get_string('save',\n                            'mod_interactivevideo')}</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>`;\n                $('body').append(editform);\n                $('#editfield-modal').modal('show');\n                $('#editfield-modal').on('hidden.bs.modal', function() {\n                    $(this).remove();\n                    $('body').addClass('modal-open');\n                });\n                $('#editfield-modal').on('shown.bs.modal', function() {\n                    let formfieldform = new DynamicForm(document.querySelector('#editfield-modal .modal-body'),\n                        'ivplugin_form\\\\form_fields\\\\' + type);\n                    formfieldform.load(formfielddata);\n\n                    document.querySelector('#editfield-submit').addEventListener('click', (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const event = formfieldform.trigger(formfieldform.events.SUBMIT_BUTTON_PRESSED);\n                        if (!event.defaultPrevented) {\n                            formfieldform.submitFormAjax();\n                        }\n                    });\n\n                    formfieldform.addEventListener(formfieldform.events.FORM_SUBMITTED, (e) => {\n                        e.preventDefault();\n                        e.stopImmediatePropagation();\n                        const response = e.detail;\n                        const index = formjson.findIndex((item) => item.id == response.id);\n                        if (index !== -1) {\n                            formjson[index] = response;\n                        }\n                        renderList(formjson);\n                        previewForm(formjson, response.id, true);\n                        $('#editfield-modal').modal('hide');\n                    });\n\n                    self.setModalDraggable('#editfield-modal .modal-dialog');\n                    let formInterval = setInterval(() => {\n                        if ($('#editfield-modal .modal-body').find('form').length > 0) {\n                            clearInterval(formInterval);\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#editfield-modal');\n                            }\n                            self.postFormRender();\n                        }\n                    }, 100);\n\n                    $(formfieldform).on('core_form_dynamicform_clientvalidationerror core_form_dynamicform_validationerror',\n                        function(e) {\n                            e.preventDefault();\n                            e.stopImmediatePropagation();\n                            self.postFormRender();\n                            if (type == 'advcheckbox' || type == 'radio' || type == 'select') {\n                                self.repeatableValues('#editfield-modal');\n                            }\n                            self.addNotification(M.util.get_string('formvalidationerror', 'ivplugin_form'), 'danger');\n                        });\n                });\n            });\n\n            // Copy the form field\n            $message.on('click', `#form-field-list button.copyfield`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let fieldid = $(this).closest('li').attr('data-id');\n                formjson = JSON.parse($message.find(`#formjson`).text());\n                let formfielddata = JSON.parse(JSON.stringify(formjson.find((item) => item.id == fieldid)));\n                const index = formjson.findIndex((item) => item.id == formfielddata.id);\n                if (index !== -1) {\n                    formfielddata.id = Math.floor(new Date().getTime() / 1000);\n                    formjson.splice(index + 1, 0, formfielddata);\n                }\n                renderList(formjson);\n                previewForm(formjson, formfielddata.id, true);\n            });\n\n            // Delete the form field\n            $message.on('click', `#form-field-list button.deletefield`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                const $this = $(this);\n                Notification.saveCancel(\n                    M.util.get_string('deletefield', 'ivplugin_form'),\n                    M.util.get_string('deletefieldconfirm', 'ivplugin_form'),\n                    M.util.get_string('delete', 'mod_interactivevideo'),\n                    function() {\n                        let li = $this.closest('li');\n                        let id = li.attr('data-id');\n                        li.remove();\n                        $(`#form-preview #fitem_field-${id},\n                            #form-preview fieldset[id^=id_field-${id}],\n                            #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                            #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                        let isHeader = $('.field-highlight').hasClass(`collapsible`);\n                        let ff = currentFormFields.filter((item) => item.id != id);\n                        renderList(ff);\n                        if (isHeader) {\n                            previewForm(ff, id, true);\n                        } else {\n                            $('.field-highlight').fadeOut(300, 'linear', function() {\n                                $(this).remove();\n                            });\n                            saveTracking(ff, id);\n                        }\n                    },\n                    null\n                );\n            });\n\n            // Save the form fields\n            $message.on('click', `button#save`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                getFormJson();\n                let formJsonCopy = JSON.parse(JSON.stringify(formjson));\n                let json = formJsonCopy.map((item) => {\n                    delete item.annotationid;\n                    delete item.contextid;\n                    delete item.formattedlabel;\n                    return item;\n                });\n                let cleanItems = JSON.stringify(json).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n                $.ajax({\n                    url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                    method: \"POST\",\n                    dataType: \"text\",\n                    data: {\n                        action: 'quickeditfield',\n                        sesskey: M.cfg.sesskey,\n                        id: annotation.id,\n                        field: 'content',\n                        contextid: M.cfg.contextid,\n                        draftitemid: 0,\n                        value: cleanItems,\n                        cmid: self.cmid,\n                        token: self.token,\n                    },\n                    success: function(data) {\n                        let updated = JSON.parse(data);\n                        tracking = [];\n                        tracking.push({\n                            items: JSON.stringify(formJsonCopy),\n                            actives: null,\n                            at: new Date().getTime(),\n                        });\n                        $('#save-close #redo, #save-close #undo').attr('disabled', 'disabled');\n                        $('#save-close #save').attr('disabled', 'disabled');\n                        dispatchEvent('annotationupdated', {\n                            annotation: updated,\n                            action: 'edit',\n                        });\n                    }\n                });\n            });\n\n            // Scroll to the form field on label click\n            $message.on('click', `#form-field-list li .field-label`, function() {\n                let id = $(this).closest('li').attr('data-id');\n                let type = $(this).closest('li').attr('data-type');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n                let $collapsible = $('.field-highlight').closest('fieldset.collapsible');\n                if ($collapsible && $collapsible.find('[data-toggle=\"collapse\"]').hasClass('collapsed')) {\n                    $collapsible.find('[data-toggle=\"collapse\"]').trigger('click');\n                }\n                let field = document.querySelector(`#form-preview .field-highlight`);\n                if (field) {\n                    field.scrollIntoView({behavior: 'smooth', block: type == 'header' ? 'start' : 'center'});\n                }\n            });\n\n            $message.on('mouseover', `#form-field-list li`, function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n                const id = $(this).attr('data-id');\n                $(`#form-preview #fitem_field-${id}, #form-preview fieldset[id^=id_field-${id}],\n                     #form-preview div#field-${id}, #form-preview [data-groupname=field-${id}],\n                      #form-preview [id^=fitem_id_field-${id}]`).addClass('field-highlight');\n            });\n\n            $message.on('mouseout', `#form-field-list li`, function() {\n                $(`#form-preview .field-highlight`).removeClass('field-highlight');\n            });\n\n            $message.on('mouseover', `#form-preview .fitem`, function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n                let group = $(this).attr('data-groupname');\n                let id;\n                if (group) {\n                    id = group.replace('field-', '');\n                } else {\n                    try {\n                        id = $(this).attr('id').match(/\\d{10}/)[0];\n                    } catch (e) {\n                        id = $(this).closest('[data-groupname]').attr('data-groupname').replace('field-', '');\n                    }\n\n                }\n                $(`#form-field-list li[data-id=${id}]`).addClass('field-highlight');\n            });\n\n            $message.on('mouseout', `#form-preview .fitem`, function() {\n                $(`#form-field-list li`).removeClass('field-highlight');\n            });\n\n            // Edit the form field from the preview.\n            $message.on('click', `#form-preview i.edit`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.editfield`).trigger('click');\n            });\n\n            // Delete the form field from the preview.\n            $message.on('click', `#form-preview i.delete`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.deletefield`).trigger('click');\n            });\n\n            // Copy the form field from the preview.\n            $message.on('click', `#form-preview i.copy`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).data('id');\n                $(`#form-field-list li[data-id=${id}] button.copyfield`).trigger('click');\n            });\n\n            // Undo the form field changes.\n            $message.on('click', `#save-close #undo`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (trackingIndex == 0) {\n                    return;\n                }\n                trackingIndex--;\n                const instance = tracking[trackingIndex];\n                formjson = JSON.parse(instance.items);\n                renderList(formjson);\n                previewForm(formjson, instance.actives, false);\n                if (trackingIndex == 0) {\n                    $('#save-close #undo').attr('disabled', 'disabled');\n                    $('#save-close #redo').removeAttr('disabled');\n                } else {\n                    $('#save-close #undo').removeAttr('disabled');\n                    if (trackingIndex == tracking.length - 1) {\n                        $('#save-close #redo').attr('disabled', 'disabled');\n                    } else {\n                        $('#save-close #redo').removeAttr('disabled');\n                    }\n                }\n            });\n\n            // Redo the form field changes.\n            $message.on('click', `#save-close #redo`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (trackingIndex == tracking.length - 1) {\n                    return;\n                }\n                trackingIndex++;\n                const instance = tracking[trackingIndex];\n                formjson = JSON.parse(instance.items);\n                renderList(formjson);\n                previewForm(formjson, instance.actives, false);\n                if (trackingIndex == tracking.length - 1) {\n                    $('#save-close #redo').attr('disabled', 'disabled');\n                    $('#save-close #undo').removeAttr('disabled');\n                } else {\n                    $('#save-close #redo').removeAttr('disabled');\n                    if (trackingIndex == 0) {\n                        $('#save-close #undo').attr('disabled', 'disabled');\n                    } else {\n                        $('#save-close #undo').removeAttr('disabled');\n                    }\n                }\n            });\n\n            // Close the form field modal.\n            $message.on('click', `#save-close #close`, async function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                if (tracking.length > 1) {\n                    Notification.saveCancel(\n                        M.util.get_string('savechanges', 'mod_interactivevideo'),\n                        M.util.get_string('savechangesconfirm', 'mod_interactivevideo'),\n                        M.util.get_string('save', 'mod_interactivevideo'),\n                        function() {\n                            $('#save-close #save').trigger('click');\n                        },\n                        function() {\n                            tracking = [];\n                            $('#save-close #redo, #save-close #undo').attr('disabled', 'disabled');\n                            $('#save-close #save').attr('disabled', 'disabled');\n                            $('#form-modal').modal('hide');\n                        }\n                    );\n                } else {\n                    $('#form-modal').modal('hide');\n                }\n            });\n\n            // Sort the form fields in the preview.\n            $message.on('sortstart', '#form-preview form, #form-preview form .fcontainer', function() {\n                $(this).addClass('no-pointer');\n                $('#form-preview form .fcontainer').addClass('empty-container');\n            });\n\n            // Revert the item if it's a collapsible being dropped into .fcontainer.\n            $message.on('sortreceive', '#form-preview form, #form-preview form .fcontainer', function(event, ui) {\n                if (ui.item.hasClass('collapsible') && ui.item.parent().hasClass('fcontainer')) {\n                    $(ui.sender).sortable('cancel');\n                    self.addNotification(M.util.get_string('sectioninsectionisnotsupported', 'ivplugin_form'), 'danger');\n                }\n            });\n\n            // Update the form fields data on sort stop.\n            $message.on('sortstop', '#form-preview form, #form-preview form .fcontainer', function(event, ui) {\n                let id = ui.item.attr('id');\n                id = id.split('field-')[1];\n                id = id.split('_')[0];\n                ui.item.trigger('click');\n                let currentFormFields = JSON.parse($message.find(`#formjson`).text());\n                $(this).removeClass('no-pointer');\n                $('#form-preview form .fcontainer').removeClass('empty-container');\n                let sortables = $message.find(`#form-preview form`)\n                    .find('.fitem:not(.femptylabel):not([hidden]), fieldset.collapsible');\n                let fieldsets = $message.find(`#form-preview form`).find('fieldset.collapsible');\n\n                let fields = sortables.map(function() {\n                    let $this = $(this);\n                    let id = $this.attr('id');\n                    return id;\n                }).get();\n                let fieldsetsIds = fieldsets.map(function() {\n                    let $this = $(this);\n                    let id = $this.attr('id');\n                    return id;\n                }).get();\n\n                let newFormJson = [];\n                fields.forEach(x => {\n                    let y = x.split('field-')[1];\n                    y = y.split('_')[0];\n                    let row = currentFormFields.find(f => f.id == y);\n                    if (fieldsetsIds.includes(x)) {\n                        // Get the next sibling after this collapsible section\n                        let $next = $(`#${x}`).next();\n                        let endId = 0;\n                        if ($next && $next.hasClass('fitem') && !$next.hasClass('femptylabel')) {\n                            endId = $next.attr('id');\n                        }\n                        if (endId != 0 && endId) {\n                            endId = endId.split('field-')[1];\n                            endId = endId.split('_')[0];\n                            row.closeat = endId;\n                        } else {\n                            row.closeat = '';\n                        }\n                    }\n                    newFormJson.push(row);\n                });\n                formjson = newFormJson;\n                renderList(formjson);\n                saveTracking(formjson, id);\n            });\n\n            // Add field-highlight class when the field is clicked.\n            $message.on('click', `#form-preview .fitem.row`, function() {\n                $(`#form-preview .field-active`).removeClass('field-active');\n                $(this).addClass('field-active');\n            });\n        } else {\n            if (annotation.completiontracking && annotation.completiontracking != 'manual') {\n                let $message = $(`#message[data-id='${annotation.id}']`);\n\n                // Disable the mark-done and mark-undone buttons\n                $message.find(`#completiontoggle`).prop('disabled', true);\n                if (annotation.completed == true) {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completioncompleted', 'mod_interactivevideo')}`);\n                } else {\n                    $message.find(`#completiontoggle span`)\n                        .text(`${M.util.get_string('completionincomplete', 'mod_interactivevideo')}`);\n                }\n            }\n        }\n    }\n\n    /**\n     * Override the completionCallback method for the form plugin.\n     * @param {Array} annotations annotations data\n     * @param {Object} thisItem annotation object\n     * @param {String} action action type\n     * @param {String} type action type\n     */\n    completionCallback(annotations, thisItem, action, type) {\n        let msg = 'formupdated';\n        if (!thisItem.completed) {\n            msg = 'formsubmitted';\n        }\n        super.completionCallback(annotations, thisItem, action, type);\n        if (type == 'automatic') {\n            this.addNotification(M.util.get_string(msg, 'ivplugin_form'), 'success');\n        }\n        let annotation = annotations.find((item) => item.id == thisItem.id);\n        this.runInteraction(annotation);\n    }\n\n    /**\n     * Render form used on the report page\n     * @param {Object} annotation The annotation object\n     * @param {Array} f Form fields data\n     * @param {Object} response Form submission data\n     * @param {String} node The node to render the form\n     * @returns {void}\n     */\n    renderForm(annotation, f, response, node) {\n        let self = this;\n        const getFormJson = () => {\n            self.render(annotation, 'json').then((content) => {\n                return new Promise((resolve) => {\n                    let formfields = content.fields;\n                    resolve(formfields);\n                });\n            }).catch(() => {\n                // Do nothing.\n            });\n        };\n\n        let formdata = {\n            id: annotation.id,\n            contextid: M.cfg.contextid,\n            type: 'form',\n            courseid: M.cfg.courseId,\n            annotationid: 0,\n            editing: 0,\n        };\n\n        const render = (ff) => {\n            $(`#message[data-id='${annotation.id}']`).find(`${node} #form-preview`).addClass('loader').empty();\n            let newformjson = ff;\n            if (response !== null) {\n                let submission = JSON.parse(response.text1);\n                newformjson = ff.map((item) => {\n                    item.value = submission['field-' + item.id];\n                    item.default = submission['field-' + item.id];\n                    return item;\n                });\n                formdata.reviewing = 1;\n                formdata.submissionid = submission.id;\n            }\n\n            formdata.formjson = JSON.stringify(newformjson);\n\n            let previewform = new DynamicForm(document.\n                querySelector(`#message[data-id='${annotation.id}'] ${node} #form-preview`),\n                'ivplugin_form\\\\submitform_form');\n            previewform.load(formdata);\n            let interval = setInterval(() => {\n                if ($(`#message[data-id='${annotation.id}'] ${node} #form-preview form`).length > 0) {\n                    clearInterval(interval);\n                    self.postFormRender();\n                }\n            }, 100);\n        };\n\n        if (!f) {\n            getFormJson().then((fields) => {\n                return render(fields);\n            }).catch(() => {\n                // Do nothing.\n            });\n        } else {\n            render(f);\n        }\n\n    }\n\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {void}\n     */\n    runInteraction(annotation) {\n        this.player.pause();\n        let self = this;\n        if (this.isEditMode()) {\n            annotation.editmode = true; // Use editmode to render the draft content (i.e draft.php vs plugin.php).\n        }\n\n        // First render container\n        this.renderViewer(annotation);\n\n        this.enableManualCompletion(annotation);\n        if (annotation.displayoptions == 'popup') {\n            $('#annotation-modal').on('shown.bs.modal', function() {\n                self.setModalDraggable('#annotation-modal .modal-dialog');\n            });\n        }\n    }\n\n    /**\n     * Render annotation view on the report page\n     * @param {Object} annotation The annotation object\n     * @param {Array} tabledata Completion data from the report table\n     * @returns {void}\n     */\n    displayReportView(annotation, tabledata) {\n        let self = this;\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.closest('.modal').addClass('modal-fullscreen');\n        $message.find('#content').html(`<div class=\"tab-content\" id=\"myTabContent\">\n            <div class=\"tab-pane fade\" id=\"formtab\" role=\"tabpanel\">\n            <div id=\"formmeta\" class=\"mb-3 d-flex\"></div><div id=\"form-preview\"></div></div>\n            <div class=\"tab-pane fade show active loading\" id=\"responsetab\" role=\"tabpanel\"></div>\n            </div><div class=\"shadow z-index-1 h-100 bg-white overflow-auto\" id=\"responseview\">\n            <div class=\"modal-header d-flex bg-white align-items-center pr-0 sticky-top\" id=\"title\">\n                <h5 class=\"modal-title text-truncate mb-0\">\n                    <div class=\"d-flex align-items-center p-1\">\n                        <select id=\"submission-list\" class=\"custom-select rounded-sm mr-1\"></select>\n                        <button class=\"btn p-0 previous\"><i class=\"bi bi-chevron-left fa-fw fs-25px\"></i></button>\n                        <button class=\"btn p-0 next\"><i class=\"bi bi-chevron-right fa-fw fs-25px\"></i></button>\n                    </div>\n                </h5>\n                <div class=\"d-flex align-items-center\">\n                    <button class=\"btn mx-2 p-0\" id=\"print\">\n                        <i class=\"bi bi-printer fa-fw fs-25px\"></i>\n                    </button>\n                    <button class=\"btn mx-2 p-0 close\">\n                        <i class=\"bi bi-x-lg fa-fw fs-25px\"></i>\n                    </button>\n                </div>\n            </div>\n            <div id=\"form-preview\"></div>\n            </div>`);\n        $message.find('.btns')\n            .prepend(`<button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#formtab\">\n            <i class=\"bi bi-input-cursor-text fs-25px\"  data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('form', 'ivplugin_form')}\"></i></button>\n            <button class=\"rotatey-180 btn btn-sm mr-2 border-0\" data-toggle=\"tab\" data-target=\"#responsetab\">\n            <i class=\"bi bi-table fs-25px\" data-toggle=\"tooltip\"\n             title=\"${M.util.get_string('responses', 'ivplugin_form')}\"></i>\n            </button>`);\n\n        $(document).on('click', '#print', function() {\n            var divContents = document.querySelector('#responseview #form-preview').innerHTML;\n            var originalContents = document.body.innerHTML;\n\n            document.body.innerHTML = divContents;\n            window.print();\n            document.body.innerHTML = originalContents;\n        });\n\n        this.render(annotation, 'json').then(async (ct) => {\n            let logs = [];\n            let users = [];\n            const fields = JSON.stringify([...ct.fields]); // Copy the fields object.\n            let formfields = ct.fields;\n            let userids = tabledata.map((item) => item.id);\n            let logdata = await this.getLogs(annotation, userids);\n            logs = logdata;\n            logs.map(x => {\n                const completiondata = tabledata.find(y => y.id == x.userid);\n                x.completiondata = completiondata;\n                return x;\n            });\n\n            // We're going to build the table data.\n            let heading = [\n                {title: M.util.get_string('id', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('timesubmitted', 'mod_interactivevideo'), \"class\": 'exportable time'},\n                {title: M.util.get_string('participant', 'mod_interactivevideo'), \"class\": ''},\n                {title: M.util.get_string('firstname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('lastname', 'mod_interactivevideo'), \"class\": 'exportable'},\n                {title: M.util.get_string('email', 'mod_interactivevideo'), \"class\": 'exportable'},\n            ];\n\n            let validfields = [];\n\n            formfields.forEach(f => {\n                if (f.type != 'header' && f.type != 'html' && f.type != 'linebreak') {\n                    let head = f.formattedlabel;\n                    if (f.helptext.text && f.helptext.text != '') {\n                        head = `<span>${f.formattedlabel}\n                            <i class=\"ml-2 bi bi-info-circle-fill text-secondary helptext cursor-pointer\" data-fieldid=\"${f.id}\"\n                             data-toggle=\"popover\">\n                            </i></span>`;\n                    }\n                    heading.push({\n                        \"title\": head,\n                        \"class\": 'exportable not-sortable',\n                    });\n                    validfields.push(f);\n                }\n            });\n\n            let rows = [];\n\n            logs.forEach(l => {\n                let submission = JSON.parse(l.text1);\n                let row = [\n                    l.id,\n                    `<a href=\"javascript:void(0)\" class=\"viewsubmission\" data-id=\"${l.id}\">${l.formattedtimecreated}</a>`,\n                    `<span class=\"text-truncate\">${l.completiondata.picture}</span>`,\n                    l.completiondata.firstname,\n                    l.completiondata.lastname,\n                    l.completiondata.email,\n                ];\n\n                validfields.forEach(async f => {\n                    let response = submission['field-' + f.id];\n                    if (response == undefined) {\n                        row.push('');\n                        return;\n                    }\n                    switch (f.type) {\n                        case 'text':\n                        case 'time':\n                        case 'textarea':\n                            row.push(response);\n                            break;\n                        case 'range':\n                            row.push(response + '/[' + f.minlength + '-' + f.maxlength + ']');\n                            break;\n                        case 'week':\n                            var wvalue = response.split('-');\n                            var week = wvalue[1].replace('W', '');\n                            row.push(`${M.util.get_string('weekvalue', 'ivplugin_form', week)}, ${wvalue[0]}`);\n                            break;\n                        case 'month':\n                            var mvalue = response.split('-');\n                            var month = M.util.get_string('month' + mvalue[1], 'ivplugin_form');\n                            row.push(`${month} ${mvalue[0]}`);\n                            break;\n                        case 'date':\n                            var includeTime = response.includes('T');\n                            var dvalue = new Date(response).toLocaleDateString();\n                            if (includeTime) {\n                                dvalue += ' ' + new Date(response).toLocaleTimeString();\n                            }\n                            row.push(dvalue);\n                            break;\n                        case 'editor':\n                            row.push(response.text);\n                            break;\n                        case 'select':\n                            var res = [];\n                            var options = f.options.split('\\n');\n                            options.forEach((option) => {\n                                option = option.trim();\n                                let choices = option.split('=');\n                                let value = choices[0];\n                                if (response.indexOf(value) > -1) {\n                                    res.push(choices[1]);\n                                }\n                            });\n                            row.push(res.join(', '));\n                            break;\n                        case 'radio':\n                            var ans = '';\n                            var roptions = f.options.split('\\n');\n                            if (response == 'otheroption') {\n                                let othertext = submission['field-' + f.id + '-otheroptiontext'];\n                                row.push(M.util.get_string('otheroption', 'ivplugin_form')\n                                    + (othertext != '' ? ': ' + othertext : ''));\n                                break;\n                            }\n                            roptions.forEach((option) => {\n                                option = option.trim();\n                                let choices = option.split('=');\n                                let value = choices[0];\n                                if (response == value) {\n                                    ans = choices[1];\n                                    return;\n                                }\n                            });\n                            row.push(ans);\n                            break;\n                        case 'advcheckbox':\n                            var ares = [];\n                            var aoptions = f.options.split('\\n');\n                            if (f.allowother == 1) {\n                                aoptions.push(`otheroption=${M.util.get_string('otheroption', 'ivplugin_form')}`);\n                            }\n                            // Convert to object.\n                            var optionObj = {};\n                            aoptions.forEach((option) => {\n                                let opt = option.split('=');\n                                optionObj[opt[0].trim()] = opt[1].trim();\n                            });\n                            var keys = Object.keys(response);\n                            keys = keys.filter((item) => response[item] != '' && response[item] !== undefined);\n                            keys.forEach((key) => {\n                                if (optionObj[key]) {\n                                    let v = response[key];\n                                    // Other: Other Text.\n                                    if (key == 'otheroption') {\n                                        v = M.util.get_string('otheroption', 'ivplugin_form')\n                                            + (response['otheroptiontext'] != '' ? ': ' + response['otheroptiontext'] : '');\n                                    }\n                                    ares.push(v);\n                                }\n                            });\n                            row.push(ares.join(', <br>'));\n                            break;\n                        case 'date_selector':\n                            var dsdate = response.year + '-';\n                            if (response.month < 9) {\n                                dsdate += '0' + response.month;\n                            } else {\n                                dsdate += response.month;\n                            }\n                            dsdate += '-';\n                            if (response.day < 9) {\n                                dsdate += '0' + response.day;\n                            } else {\n                                dsdate += response.day;\n                            }\n                            if (response.hour && response.minute) {\n                                dsdate += 'T';\n                                if (response.hour < 9) {\n                                    dsdate += '0' + response.hour;\n                                } else {\n                                    dsdate += response.hour;\n                                }\n                                dsdate += ':';\n                                if (response.minute < 9) {\n                                    dsdate += '0' + response.minute;\n                                } else {\n                                    dsdate += response.minute;\n                                }\n                            }\n                            var inclTime = dsdate.includes('T');\n                            var dsvalue = new Date(dsdate).toLocaleDateString();\n                            if (inclTime) {\n                                dsvalue += ' ' + new Date(dsdate).toLocaleTimeString();\n                            }\n                            row.push(dsvalue);\n                            break;\n                        case 'duration':\n                            if (response) {\n                                row.push(response.number + ' ' + M.util.get_string(response.timeunit, 'ivplugin_form'));\n                            } else {\n                                row.push('');\n                            }\n                            break;\n                        case 'filemanager':\n                            if (response.length > 0) {\n                                const files = response.map((file) => {\n                                    const filename = file.split('/').pop();\n                                    return `<a href=\"${file}\" target=\"_blank\" class=\"text-truncate\">${decodeURIComponent(\n                                        filename.replace('field-' + f.id + '_', ''))}<span class=\"d-none\"><br>\\n[${file}]\n                                        </span></a>`;\n                                });\n                                row.push(files.join(',<br>'));\n                            } else {\n                                row.push('');\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                });\n\n                rows.push(row);\n\n            });\n\n            users = logs.map((l) => {\n                return {\n                    id: l.id,\n                    fullname: `${l.completiondata.firstname} ${l.completiondata.lastname}`,\n                };\n            });\n\n            users.sort((a, b) => {\n                return a.fullname.localeCompare(b.fullname);\n            });\n\n            users.forEach((user) => {\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list')\n                    .append(`<option value=\"${user.id}\">${user.fullname}</option>`);\n            });\n\n            $(`#message[data-id='${annotation.id}']`).find('#responsetab')\n                .html(`<div id=\"formresponsetable\" class=\"table-responsive\">\n                    <table class=\"table table-bordered table-striped w-100\">\n                    <thead>\n                        <tr>\n                            ${heading.map(h => `<th class=\"${h.class} text-truncate\">${h.title}</th>`).join('')}\n                        </tr>\n                    </thead>\n                    <tbody>\n                    </tbody>\n                    </table>\n                    </div>`);\n\n            renderAnnotationLogs({\n                heading: heading,\n                rows: rows,\n            }, '#formresponsetable', annotation.formattedtitle);\n\n            $message.find('.btns').on('click', `[data-toggle=\"tab\"]`, function() {\n                $(`[data-toggle=\"tab\"]`).removeClass('active');\n                // Always remove the rendered form.\n                $(`#message[data-id='${annotation.id}']`).find(`#responseview #form-preview, .tab-content #form-preview`).empty();\n                if ($(this).data('target') == '#formtab') {\n                    self.renderForm(annotation, JSON.parse(fields), null, '#formtab');\n                }\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] table .helptext`, async function(e) {\n                // Dismiss all other popovers.\n                $('.popover').remove();\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let $this = $(this);\n                let contentid = $(this).attr('data-fieldid');\n                let field = formfields.find((field) => field.id == contentid);\n                let content = field.helptext.text;\n                $this.popover({\n                    content: '<div class=\"loader\"></div>',\n                    title: `<span class=\"mr-2\">${field.formattedlabel}</span>`\n                        + `<i class=\"bi bi-x-circle-fill ml-auto popover-dismiss cursor-pointer\" style=\"font-size:1.5em;\"></i>`,\n                    placement: 'top',\n                    html: true,\n                    trigger: 'focus',\n                    template: `<div class=\"popover inlineannotation-popover id-${contentid}\"\n                     role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                     <div class=\"popover-body rounded\"></div></div>`,\n                });\n                $this.popover('show');\n                $this.on('shown.bs.popover', async function() {\n                    let $body = $(`.popover.id-${contentid} .popover-body`);\n                    const html = await self.formatContent(content, M.cfg.contextid);\n                    $body.html(html);\n                    notifyFilter($body);\n                    $this.popover('update');\n                });\n            });\n\n            $(document).on('click', `.popover-dismiss`, function(e) {\n                e.stopImmediatePropagation();\n                $(this).closest('.popover').remove();\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] .viewsubmission`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).attr('data-id');\n                $(`#message[data-id='${annotation.id}']`).find('#responseview').addClass('show');\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(id).trigger('change');\n            });\n\n            $(document).on('change', `#message[data-id='${annotation.id}'] #submission-list`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(this).val();\n                let log = logs.find((item) => item.id == id);\n                self.renderForm(annotation, formfields, log, '#responseview');\n                let index = users.findIndex((item) => item.id == id);\n                if (index > 0) {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.previous').prop('disabled', true);\n                }\n                if (index < users.length - 1) {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', false);\n                } else {\n                    $(`#message[data-id='${annotation.id}']`).find('.next').prop('disabled', true);\n                }\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .close`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                $(`#message[data-id='${annotation.id}']`).find('#responseview').removeClass('show');\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .previous`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                let index = users.findIndex((item) => item.id == id);\n                let prev = users[index - 1];\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(prev.id).trigger('change');\n            });\n\n            $(document).on('click', `#message[data-id='${annotation.id}'] #responseview .next`, function(e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                let id = $(`#message[data-id='${annotation.id}']`).find('#submission-list').val();\n                let index = users.findIndex((item) => item.id == id);\n                let next = users[index + 1];\n                $(`#message[data-id='${annotation.id}']`).find('#submission-list').val(next.id).trigger('change');\n            });\n            return;\n        }).catch(() => {\n            // Do nothing.\n        });\n    }\n}"],"names":["Form","Base","postEditCallback","annotation","self","this","isEditMode","formfields","M","util","get_string","dataForTemplate","id","items","template","Templates","render","appendTo","modal","on","remove","async","content","postContentRender","find","append","super","renderViewer","postFormRender","attr","trigger","removeClass","addClass","repeatableValues","node","each","$this","dataId","defaultValues","val","split","value","isRadio","rows","html","length","forEach","row","i","rowvalues","key","trim","includes","after","sortable","placeholder","handle","stop","removeAttr","first","document","e","preventDefault","stopImmediatePropagation","$parent","closest","$row","clone","prop","$inputs","values","not","$input","push","Object","keys","map","join","Set","reportpage","$message","text1","duedate","fetchData","Promise","resolve","reject","call","args","userid","cmid","annotationid","contextid","cfg","methodname","then","response","JSON","parse","record","catch","err","formjson","renderList","fields","empty","item","icon","field","type","formattedlabel","text","stringify","tracking","trackingIndex","saveTracking","actives","slice","at","Date","getTime","sort","a","b","previewform","activateFieldsSortable","connectWith","forcePlaceholderSize","cursor","forceHelperSize","tolerance","previewForm","data","updateDraft","selector","querySelector","DynamicForm","formdata","load","interval","setInterval","clearInterval","element","isHeader","hasClass","scrollIntoView","behavior","block","$actionbtns","$clone","footer","_this","courseid","courseId","editing","name","course","interaction","events","SUBMIT_BUTTON_PRESSED","defaultPrevented","submitFormAjax","addEventListener","SERVER_VALIDATION_ERROR","addNotification","notifyResetFormChanges","CLIENT_VALIDATION_ERROR","FORM_SUBMITTED","toggleCompletion","reviewing","char2","show","hide","completed","log","submission","newformjson","default","othertext","submissionid","replaceWith","saveFormJson","ff","getFormJson","currentFormFields","updatedFormJson","get","event","ui","typeString","newfieldmodal","formfieldform","label","detail","active","index","findIndex","splice","setModalDraggable","formInterval","fieldid","formfielddata","editform","Math","floor","saveCancel","li","filter","fadeOut","formJsonCopy","json","cleanItems","replace","ajax","url","wwwroot","method","dataType","action","sesskey","draftitemid","token","success","updated","$collapsible","group","match","instance","parent","sender","sortables","fieldsets","fieldsetsIds","newFormJson","x","y","f","$next","next","endId","closeat","completiontracking","completionCallback","annotations","thisItem","msg","runInteraction","renderForm","player","pause","editmode","enableManualCompletion","displayoptions","displayReportView","tabledata","prepend","divContents","innerHTML","originalContents","body","window","print","logs","users","ct","userids","logdata","getLogs","completiondata","heading","title","validfields","head","helptext","l","formattedtimecreated","picture","firstname","lastname","email","undefined","minlength","maxlength","wvalue","week","mvalue","month","includeTime","dvalue","toLocaleDateString","toLocaleTimeString","res","options","option","choices","indexOf","ans","roptions","ares","aoptions","allowother","optionObj","opt","v","dsdate","year","day","hour","minute","inclTime","dsvalue","number","timeunit","files","file","filename","pop","decodeURIComponent","fullname","localeCompare","user","h","class","formattedtitle","contentid","popover","placement","$body","formatContent","prev"],"mappings":"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"}