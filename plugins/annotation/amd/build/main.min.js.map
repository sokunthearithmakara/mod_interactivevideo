{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main script for the annotation plugin\n *\n * @module     ivplugin_annotation/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport ModalForm from 'core_form/modalform';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nimport Notification from 'core/notification';\n\nexport default class Annotation extends Base {\n    /**\n     * Round a number to two decimal places\n     * @param {Number} num Number\n     * @returns {Number} rounded number\n     */\n    roundToTwo(num) {\n        return +(Math.round(num + 'e+2') + 'e-2');\n    }\n\n    /**\n     * Initialize the annotation type\n     * @returns {void}\n     */\n    async init() {\n        const videoWrapper = $('#video-wrapper');\n        let item = this.annotations.find((annotation) => annotation.type == 'annotation');\n        if (!this.isEditMode()) {\n            if (!item || item.content == '') {\n                return;\n            }\n            const updateAspectRatio = async (video, reset) => {\n                let elem = video ? $('#player') : $(`#annotation-canvas[data-id='${item.id}']`);\n                if ($(\"#wrapper\").hasClass('fullscreen')) {\n                    let ratio = 16 / 9;\n                    if (!this.displayoptions.usefixedratio || this.displayoptions.usefixedratio == 0) {\n                        ratio = this.player.aspectratio;\n                    }\n                    let videowrapperaspect = videoWrapper.width() / videoWrapper.height();\n                    let gap = '- 55px';\n                    if ($(\"#wrapper\").hasClass('no-videonav')) {\n                        gap = '';\n                    }\n                    if (videowrapperaspect > ratio) {\n                        elem.css('height', `calc(100dvh ${gap})`);\n                        elem.css('width', `calc((100dvh ${gap}) * ${ratio})`);\n                        elem.css('top', '0');\n                        elem.css('left', `calc((100dvw - (100dvh ${gap}) * ${ratio}) / 2)`);\n                    } else if (videowrapperaspect < ratio) {\n                        elem.css('width', '100dvw');\n                        elem.css('height', `${100 / ratio}dvw`);\n                        elem.css('top', `calc((100dvh ${gap} - 100dvw / ${ratio}) / 2)`);\n                        elem.css('left', '0');\n                    }\n                } else {\n                    elem.css('width', '100%');\n                    elem.css('height', '100%');\n                    elem.css('top', '0');\n                    elem.css('left', '0');\n                }\n                if (reset) {\n                    elem.css('width', '100%');\n                    elem.css('height', '100%');\n                    elem.css('top', '0');\n                    elem.css('left', '0');\n                }\n            };\n\n            updateAspectRatio();\n            updateAspectRatio(true);\n\n            let vwrapper = document.querySelector('#video-wrapper');\n            let resizeObserver = new ResizeObserver(() => {\n                updateAspectRatio();\n                updateAspectRatio(true);\n            });\n\n            resizeObserver.observe(vwrapper);\n\n            $(document).on('timeupdate', function(e) {\n                updateAspectRatio(true, true);\n                const t = e.originalEvent.detail.time;\n                let annos = $('#annotation-canvas .annotation-wrapper');\n                annos.each(function() {\n                    let start = Number($(this).data('start'));\n                    let end = Number($(this).data('end'));\n                    if (t >= start && t <= end) {\n                        $(this).css('visibility', 'visible');\n                    } else {\n                        $(this).css('visibility', 'hidden');\n                    }\n                });\n            });\n\n            $('#annotation-canvas').attr('data-id', item.id);\n            let content = await this.render(item, 'json');\n            this.postContentRender(item, content);\n        } else {\n            $(document).on('timeupdate', function(e) {\n                const t = e.originalEvent.detail.time;\n                let annos = $('#annotation-canvas .annotation-wrapper');\n                annos.each(function() {\n                    let start = Number($(this).data('start'));\n                    let end = Number($(this).data('end'));\n                    if (t >= start && t <= end) {\n                        $(this).css('visibility', 'visible');\n                    } else {\n                        $(this).css('visibility', 'hidden');\n                    }\n                });\n            });\n            if (item) {\n                $('#annotation-canvas').attr('data-id', item.id);\n                item.editmode = true;\n                let content = await this.render(item, 'json');\n                this.postContentRender(item, content);\n            }\n        }\n    }\n\n    /**\n     * Render the annotation toolbar\n     * @param {Object} annotation annotation object\n     * @returns {void}\n     */\n    async renderAnnotationToolbar(annotation) {\n        $('#annotation-btns').remove();\n        let annotationitems = [\n            {\n                'icon': 'bi bi-image',\n                'type': 'media',\n                'mediatype': 'image',\n                'label': M.util.get_string('image', 'ivplugin_annotation'),\n            },\n            {\n                'icon': 'bi bi-alphabet-uppercase',\n                'type': 'textblock',\n                'mediatype': 'textblock',\n                'label': M.util.get_string('text', 'ivplugin_annotation'),\n            },\n            {\n                'icon': 'bi bi-circle-square',\n                'type': 'shape',\n                'mediatype': 'shape',\n                'label': M.util.get_string('shape', 'ivplugin_annotation'),\n            },\n            {\n                'icon': 'bi bi-file-earmark-arrow-down',\n                'type': 'media',\n                'mediatype': 'file',\n                'label': M.util.get_string('inlinefile', 'ivplugin_annotation'),\n            },\n            {\n                'icon': 'bi bi-sign-turn-right',\n                'type': 'navigation',\n                'mediatype': 'navigation',\n                'label': M.util.get_string('navigation', 'ivplugin_annotation')\n            },\n            {\n                'icon': 'bi bi-plus-circle',\n                'type': 'hotspot',\n                'mediatype': 'hotspot',\n                'label': M.util.get_string('hotspot', 'ivplugin_annotation'),\n            }\n        ];\n        const dataForTemplate = {\n            id: annotation.id,\n            items: annotationitems,\n        };\n\n        let html = await Templates.render('ivplugin_annotation/toolbar', dataForTemplate);\n        $(\"#wrapper\").append(html);\n\n        this.enableColorPicker();\n    }\n\n    /**\n     * Callback after the content is retrieved\n     * @param {Object} annotation annotation object\n     * @param {Object} data data processed through the main php file\n     */\n    postContentRender(annotation, data) {\n        let self = this;\n        var $videoWrapper = $('#annotation-canvas');\n\n        // Put a background so that when an annotation is selected, user is prevented from clicking on the video.\n        if (self.isEditMode()) {\n            $videoWrapper.append(`<div id=\"background\" class=\"position-absolute w-100 h-100 bg-transparent d-none\"></div>`);\n        }\n        var $playerWrapper = $('#wrapper');\n        let draftStatus = null;\n\n        /**\n         * Format seconds to HH:MM:SS\n         * @param {Number} seconds seconds\n         * @param {Boolean} rounded if the seconds should be rounded\n         * @returns formatted time\n         */\n        const convertSecondsToMMSS = (seconds, rounded = false) => {\n            let hours = Math.floor(seconds / 3600);\n            let minutes = Math.floor((seconds - hours * 3600) / 60);\n            let sec = seconds - hours * 3600 - minutes * 60;\n            let formattedTime = '';\n            if (hours > 0) {\n                formattedTime += hours + ':';\n            }\n            if (minutes < 10) {\n                formattedTime += '0';\n            }\n            formattedTime += minutes + ':';\n            if (sec < 10) {\n                formattedTime += '0';\n            }\n            if (rounded) {\n                formattedTime += Math.round(sec);\n            } else {\n                formattedTime += self.roundToTwo(sec);\n            }\n            return formattedTime;\n        };\n\n        /**\n         * Update position information of the active element on the toolbar.\n         * @param {Object} elem jQuery element\n         */\n        const updatePositionInfo = (elem) => {\n            let w = elem.outerWidth();\n            let hw = elem.outerHeight();\n            let t = elem.position().top < 0 ? 0 : elem.position().top;\n            let l = elem.position().left < 0 ? 0 : elem.position().left;\n            let z = elem.css('z-index');\n            let s = elem.data('start');\n            let e = elem.data('end');\n            $(`#annotation-btns #position #x-position`).text(Math.round(l));\n            $(`#annotation-btns #position #y-position`).text(Math.round(t));\n            $(`#annotation-btns #position #z-position`).text(z - 5);\n            $(`#annotation-btns #position #w-position`).text(Math.round(w));\n            $(`#annotation-btns #position #h-position`).text(Math.round(hw));\n            $(`#annotation-btns #position #s-position`).text(convertSecondsToMMSS(s));\n            $(`#annotation-btns #position #e-position`).text(convertSecondsToMMSS(e));\n        };\n\n        /**\n         * Recalculate the size of the element.\n         * @param {Object} elem jQuery element\n         * @return {Object} position of the element\n         */\n        const recalculatingSize = (elem) => {\n            let message = $('#annotation-canvas');\n            let w = self.roundToTwo(elem.outerWidth()) / message.width() * 100;\n            let h = self.roundToTwo(elem.outerHeight()) / message.height() * 100;\n            let t = self.roundToTwo(elem.position().top) / message.height() * 100;\n            t = t < 0 ? 0 : t;\n            let l = self.roundToTwo(elem.position().left) / message.width() * 100;\n            l = l < 0 ? 0 : l;\n            let z = elem.css('z-index');\n            let g = elem.data('group');\n            let position = {\n                'width': w + '%',\n                'height': h + '%',\n                'left': l + '%',\n                'top': t + '%',\n                'z-index': z,\n            };\n            position.group = g;\n            elem.css(position);\n            updatePositionInfo(elem);\n            return position;\n        };\n\n        /**\n         * Calculate the text size for text and file type.\n         * @param {Object} elem jQuery element\n         * @param {Boolean} button if it is a button\n         * @param {Boolean} multiline if it is a multiline text\n         */\n        const recalculatingTextSize = (elem, button, multiline = false) => {\n            let fontSize = elem.outerHeight();\n            let padding = 0;\n            let rowCount = 1;\n            if (multiline) {\n                let rows = elem.find('.text-row');\n                rowCount = rows.length;\n                if (rowCount > 1) {\n                    let rowHeight = elem.outerHeight() / rowCount;\n                    padding = rowHeight * 0.3;\n                    fontSize = (elem.outerHeight() - padding * 2) / rowCount;\n                }\n            }\n            let style = {\n                'font-size': (button ? fontSize * 0.7 : fontSize * 0.9) + 'px',\n                'line-height': fontSize + 'px',\n                'padding-left': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n                'padding-right': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n            };\n            if (multiline && rowCount > 1) {\n                style.padding = padding + 'px';\n            }\n            elem.find('.annotation-content').css(style);\n            elem.css('width', 'auto');\n        };\n\n        /**\n         * Render timeline items.\n         * @param {Array} elements array of elements to render\n         * @param {Number} activeids array of ids of active elements\n         */\n        const renderTimelineItems = async (elements, activeids) => {\n            const currentTime = self.roundToTwo(await self.player.getCurrentTime());\n            if (activeids === null) {\n                activeids = [];\n            } else {\n                activeids = activeids.map(id => parseInt(id));\n            }\n            let timeline = $('#timeline #annotation-timeline');\n            timeline.empty();\n            elements.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            let count = 0;\n            elements.forEach((item, i) => {\n                let prop = item.properties;\n                let type = item.type;\n                let id = parseInt(item.id);\n                let left = (prop.start - self.start) / (self.end - self.start) * 100;\n                let width = (prop.end - prop.start) / (self.end - self.start) * 100;\n                timeline.append(`<div class=\"annotation-timeline-item position-absolute ${activeids.includes(id) ? 'active' : ''}\"\n                     data-item=\"${id}\" data-type=\"${type}\" data-end=\"${prop.end}\" data-start=\"${prop.start}\"\n                         style=\"z-index: 5; left: ${left}%; top: ${(i + 1) * 10}px; width: ${width}%\"></div>`);\n                count++;\n                if (count == elements.length) {\n                    // Initialize the draggable and resizable for each item on the timeline.\n                    $('.annotation-timeline-item').draggable({\n                        'axis': 'x',\n                        'containment': '#annotation-timeline',\n                        'cursor': 'move',\n                        'grid': [1, 0],\n                        'start': function() {\n                            // Get all the selected elements\n                            if (!$(this).hasClass('active')) {\n                                $(this).trigger('click');\n                            }\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.addClass('no-pointer-events');\n                            $selected.each(function() {\n                                $(this).data('startPosition', $(this).position());\n                            });\n                            timestampScrollbar($(this).data('start'));\n                            $('#timeline-items').addClass('no-pointer-events');\n                        },\n                        'drag': async function(e, ui) {\n                            let timestamp = (ui.position.left) / $('#annotation-timeline').width() * self.totaltime\n                                + self.start;\n                            let duration = $(this).data('end') - $(this).data('start');\n                            $('#s-position').text(convertSecondsToMMSS(timestamp));\n                            $('#e-position').text(convertSecondsToMMSS(timestamp + duration));\n\n                            // Hide or show these element\n                            let now = await self.player.getCurrentTime();\n                            let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$(this).data('item')}\"]`);\n                            if (timestamp <= now && timestamp + duration >= now) {\n                                $annowrapper.css('visibility', 'visible');\n                            } else {\n                                $annowrapper.css('visibility', 'hidden');\n                            }\n                            let left = (timestamp - self.start) / self.totaltime * 100;\n                            $('#cursorbar').css('left', `calc(${left}% + 5px)`);\n                            $('#position-marker').css('left', `${left}%`);\n                            $('#vseek #bar #position').text(convertSecondsToMMSS(timestamp));\n\n                            var $selected = $('.annotation-timeline-item.active');\n                            var distance = ui.originalPosition.left - ui.position.left;\n                            $selected.not(this).each(function() {\n                                var $this = $(this);\n                                var position = $this.data('startPosition');\n                                $this.css({\n                                    left: ((position.left - distance) / $('#annotation-timeline').width()) * 100 + '%',\n                                });\n                                let timestamp = ($this.position().left / $('#annotation-timeline').width()) * self.totaltime\n                                    + self.start;\n                                let duration = $this.data('end') - $this.data('start');\n                                let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$this.data('item')}\"]`);\n                                if (timestamp <= now && timestamp + duration >= now) {\n                                    $annowrapper.css('visibility', 'visible');\n                                } else {\n                                    $annowrapper.css('visibility', 'hidden');\n                                }\n                            });\n                        },\n                        'stop': function() {\n                            setTimeout(function() {\n                                $('#cursorbar, #position-marker').remove();\n                                $('#timeline-items').removeClass('no-pointer-events');\n                                $(this).removeClass('no-pointer-events');\n                            }, 200);\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.each(function() {\n                                let $this = $(this);\n                                let elementid = $this.data('item');\n                                let itemIndex = items.findIndex(x => x.id == elementid);\n                                let item = items[itemIndex];\n                                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                                let prop = item.properties;\n                                let duration = prop.end - prop.start;\n                                prop.start = (($this.position().left) / $('#annotation-timeline').width() * self.totaltime)\n                                    + self.start;\n                                prop.start = self.roundToTwo(prop.start);\n                                prop.end = prop.start + duration;\n                                elem.attr('data-start', prop.start);\n                                elem.attr('data-end', prop.end);\n                                $this.attr('data-start', prop.start);\n                                $this.attr('data-end', prop.end);\n                                item.properties = prop;\n                                items[itemIndex] = item;\n                            });\n                            $selected = $selected.map(function() {\n                                return $(this).data('item');\n                            }).get();\n                            saveTracking($selected);\n                            renderItems(items, $selected, false);\n                        },\n                    });\n\n                    $('.annotation-timeline-item').resizable({\n                        'handles': 'e, w',\n                        'containment': 'parent',\n                        'grid': [1, 0],\n                        'start': async function() {\n                            // Get all the selected elements\n                            if (!$(this).hasClass('active')) {\n                                $(this).trigger('click');\n                            }\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.addClass('no-pointer-events');\n                            $selected.each(function() {\n                                $(this).data('originalStart', $(this).data('start'));\n                                $(this).data('originalEnd', $(this).data('end'));\n                            });\n                            timestampScrollbar($(this).data('start'));\n                            $('#timeline-items').addClass('no-pointer-events');\n                        },\n                        'resize': async function(e, ui) {\n                            let timestamp = 0;\n                            if (ui.originalPosition.left != ui.position.left || ui.originalSize.width == ui.size.width) {\n                                if (ui.position.left < 0) {\n                                    ui.position.left = 0;\n                                }\n                                timestamp = ((ui.position.left)\n                                    / $('#annotation-timeline').width()) * self.totaltime + self.start;\n                            } else {\n                                timestamp = ((ui.position.left + ui.size.width)\n                                    / $('#annotation-timeline').width()) * self.totaltime + self.start;\n                            }\n\n                            let left = (timestamp - self.start) / self.totaltime * 100;\n                            $('#cursorbar').css('left', `calc(${left}% + 5px)`);\n                            $('#position-marker').css('left', `${left}%`);\n                            $('#vseek #bar #position').text(convertSecondsToMMSS(timestamp));\n\n                            var newStart = ((ui.position.left) / $('#annotation-timeline').width()) * self.totaltime\n                                + self.start;\n                            var newEnd = ((ui.position.left + ui.size.width) / $('#annotation-timeline').width())\n                                * self.totaltime + self.start;\n                            $('#s-position').text(convertSecondsToMMSS(newStart));\n                            $('#e-position').text(convertSecondsToMMSS(newEnd));\n\n                            // Hide or show this element\n                            let now = await self.player.getCurrentTime();\n                            let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$(this).data('item')}\"]`);\n                            if (newStart <= now && newEnd >= now) {\n                                $annowrapper.css('visibility', 'visible');\n                            } else {\n                                $annowrapper.css('visibility', 'hidden');\n                            }\n\n                            // Handle other selected elements: same position and width\n                            let leftPercentage = ui.position.left / $('#annotation-timeline').width() * 100;\n                            let newWidth = ui.size.width / $('#annotation-timeline').width() * 100;\n                            var $selected = $('.annotation-timeline-item.active').not(this);\n                            $selected.each(function() {\n                                let $this = $(this);\n                                $this.css({\n                                    'left': leftPercentage + '%',\n                                    'width': newWidth + '%'\n                                });\n\n                                $this.attr('data-start', newStart);\n                                $this.attr('data-end', newEnd);\n                                let $annowrapper = $videoWrapper.find(`.annotation-wrapper[data-item=\"${$this.data('item')}\"]`);\n                                if (newStart <= now && newEnd >= now) {\n                                    $annowrapper.css('visibility', 'visible');\n                                } else {\n                                    $annowrapper.css('visibility', 'hidden');\n                                }\n                            });\n                        },\n                        'stop': async function(e, ui) {\n                            setTimeout(function() {\n                                $('#cursorbar, #position-marker').remove();\n                                $('#timeline-items').removeClass('no-pointer-events');\n                            }, 200);\n                            var newStart = ((ui.position.left) / $('#annotation-timeline').width()) * self.totaltime\n                                + self.start;\n                            var newEnd = ((ui.position.left + ui.size.width) / $('#annotation-timeline').width())\n                                * self.totaltime + self.start;\n                            let $selected = $('.annotation-timeline-item.active');\n                            $selected.each(function() {\n                                let $this = $(this);\n                                let elementid = $this.data('item');\n                                let itemIndex = items.findIndex(x => x.id == elementid);\n                                let item = items[itemIndex];\n                                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                                let prop = item.properties;\n                                prop.start = self.roundToTwo(newStart);\n                                prop.end = self.roundToTwo(newEnd);\n                                elem.attr('data-start', prop.start);\n                                elem.attr('data-end', prop.end);\n                                $this.attr('data-start', prop.start);\n                                $this.attr('data-end', prop.end);\n                                item.properties = prop;\n                                items[itemIndex] = item;\n                            });\n                            $selected = $selected.map(function() {\n                                return $(this).data('item');\n                            }).get();\n                            saveTracking($selected);\n                            renderItems(items, $selected, false);\n                        }\n                    });\n\n                    dispatchEvent('timeupdate', {time: currentTime});\n                    return true;\n                }\n            });\n        };\n\n        /**\n         * Append timestamp to the scrollbar.\n         * @param {Number} seconds\n         * @returns void\n         */\n        const timestampScrollbar = (seconds) => {\n            var formattedTime = convertSecondsToMMSS(seconds);\n            var $scrollbar = $('#scrollbar').clone();\n            $scrollbar.attr('id', 'cursorbar');\n            $scrollbar.find('#scrollhead').remove();\n            $('#timeline-items').append($scrollbar);\n            $('#vseek #bar').append(`<div id=\"position-marker\" class=\"border-0\">\n                <div id=\"position\" class=\"py-0 px-1\" style=\"top:-10px;\">\n                ${formattedTime}</div></div>`);\n        };\n\n        const renderImage = (wrapper, item, prop, id, position) => {\n            var parts = prop.timestamp.split(':');\n            var timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><img src=\"${prop.url}\" id=\"${id}\"\n                         class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\"\n                         ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/></a>`);\n            } else {\n                wrapper.append(`<img src=\"${prop.url}\" id=\"${id}\"\n                             ${timestamp > 0 ? ' data-timestamp=\"' + timestamp + '\"' : ''}\n                              class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\n                              ${timestamp > 0 ? 'cursor-pointer' : ''}\"\n                               ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/>`);\n            }\n            if (!self.isEditMode()) {\n                if (prop.gotourl == '' && timestamp == 0) {\n                    wrapper.removeClass('resizable');\n                    wrapper.addClass('no-pointer');\n                } else {\n                    wrapper.addClass('clickable');\n                }\n            }\n            wrapper.css(position);\n            wrapper.css('height', 'auto');\n            $videoWrapper.append(wrapper);\n        };\n\n        const renderFile = (wrapper, item, prop, id, position) => {\n            var wrapperhtml = ``;\n            wrapperhtml = `<a id=\"${id}\"\n                    class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'rounded-0'}\n                    annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''} rotatey-180\" href=\"${prop.url}\"\n                     target=\"_blank\"><i class=\"bi bi-paperclip fs-unset\"></i>${prop.formattedlabel != \"\" ?\n                    `<span style=\"margin-left:0.25em;\">${prop.formattedlabel}` : ''}</a>`;\n            wrapper.append(`<div class=\"d-flex h-100\">${wrapperhtml}</div>`);\n            position.width = 0;\n            wrapper.css(position);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderNavigation = (wrapper, item, prop, id, position) => {\n            var parts = prop.timestamp.split(':');\n            var timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n\n            wrapper.append(`<div class=\"d-flex h-100\"><span id=\"${id}\" tabindex=\"0\"\n                         class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'rounded-0'}\n                          annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''}\"\n                           data-timestamp=\"${timestamp}\">${prop.formattedlabel}</span></div>`);\n\n            position.width = 0;\n\n            wrapper.css(position);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderText = (wrapper, item, prop, id, position) => {\n            if (prop.url != undefined && prop.url != '') {\n                wrapper.append(`<a id=\"${id}\"\n                     class=\"annotation-content text-nowrap ${prop.shadow == '1' ? 'text-shadow' : ''} d-block\"\n                      href=\"${prop.url}\" target=\"_blank\">${prop.formattedlabel}</a>`);\n            } else {\n                if (!self.isEditMode() || !$('#content-region').hasClass('no-pointer-events')) {\n                    wrapper.addClass('no-pointer');\n                }\n                wrapper.append(`<div id=\"${id}\"\n                     class=\"annotation-content text-nowrap ${prop.shadow == '1' ? 'text-shadow' : ''}\n                     \">${prop.formattedlabel}</div>`);\n            }\n            wrapper.position.width = 0;\n            wrapper.css(position);\n            var style = {\n                'font-weight': prop.bold == '1' ? 'bold' : 'normal',\n                'font-style': prop.italic == '1' ? 'italic' : 'normal',\n                'text-decoration': prop.underline == '1' ? 'underline' : 'none',\n                'color': prop.textcolor,\n                'background': prop.bgcolor,\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n                'font-family': prop.textfont != '' ? prop.textfont : 'inherit',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper);\n        };\n\n        const renderTextBlock = (wrapper, item, prop, id, position) => {\n            var textparts = prop.formattedlabel.split('\\r\\n');\n            var textblock = '<div class=\"d-flex flex-column\">';\n            textparts.forEach((part) => {\n                if (part.trim() == '') {\n                    return;\n                }\n                textblock += `<span class=\"text-row text-nowrap text-${prop.alignment}\"\n                         style=\"font-family: ${prop.textfont != '' ? prop.textfont : 'inherit'}\">${part}</span>`;\n            });\n            textblock += '</div>';\n            if (prop.url != undefined && prop.url != '') {\n                wrapper.append(`<a id=\"${id}\"\n                             class=\"annotation-content d-block ${prop.shadow == '1' ? 'text-shadow' : ''}\"\n                              href=\"${prop.url}\" target=\"_blank\">${textblock}</a>`);\n                wrapper.addClass('clickable');\n            } else {\n                if (!self.isEditMode() || !$('#content-region').hasClass('no-pointer-events')) {\n                    wrapper.addClass('no-pointer');\n                }\n                wrapper.append(`<div id=\"${id}\"\n                             class=\"annotation-content ${prop.shadow == '1' ? 'text-shadow' : ''}\n                             \">${textblock}</div>`);\n            }\n            wrapper.position.width = 0;\n            wrapper.css(position);\n            var style = {\n                'font-size': item.position.fontSize,\n                'line-height': item.position.lineHeight,\n                'font-weight': prop.bold == '1' ? 'bold' : 'normal',\n                'font-style': prop.italic == '1' ? 'italic' : 'normal',\n                'text-decoration': prop.underline == '1' ? 'underline' : 'none',\n                'color': prop.textcolor,\n                'background': prop.bgcolor,\n                'border-radius': prop.rounded == '1' ? '0.3em' : '0',\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n            recalculatingTextSize(wrapper, false, true);\n        };\n\n        const renderShape = (wrapper, item, prop, id, position) => {\n            var parts = prop.timestamp.split(':');\n            var timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><div id=\"${id}\"\n                         class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\"\n                          style=\"width: 100%; height: 100%;\"></div></a>`);\n                wrapper.addClass('clickable');\n            } else {\n                if (!self.isEditMode()) {\n                    if (timestamp == 0) {\n                        wrapper.addClass('no-pointer');\n                    } else {\n                        wrapper.addClass('clickable');\n                    }\n                }\n                wrapper.append(`<div id=\"${id}\" class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\n                             ${timestamp > 0 ? 'cursor-pointer' : ''}\"\n                         ${timestamp > 0 ? 'data-timestamp=\"' + timestamp + '\"' : ''}\n                         style=\"width: 100%; height: 100%;\"></div>`);\n            }\n            wrapper.css(position);\n            var style = {\n                'background': prop.bgcolor,\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n                'opacity': prop.opacity / 100,\n            };\n            if (prop.shape == 'circle') {\n                style['border-radius'] = '50%';\n            } else if (prop.shape == 'rectangle') {\n                style['border-radius'] = prop.rounded == '1' ? '1em' : '0';\n            }\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n        };\n\n        const renderHotspot = (wrapper, item, prop, id, position) => {\n            wrapper.append(`<div id=\"${id}\" class=\"annotation-content shadow-sm pulse\" role=\"button\"></div>`);\n            position['aspect-ratio'] = '1';\n            wrapper.css(position);\n            var style = {\n                'background-color': prop.color,\n                'opacity': prop.opacity / 100,\n                'border-radius': '50%',\n                'aspect-ratio': '1',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.append(wrapper);\n\n            if (!self.isEditMode()) {\n                if (prop.usemodal == '1') {\n                    wrapper.attr({\n                        'data-toggle': 'modal',\n                    });\n                } else {\n                    wrapper.attr({\n                        'tabindex': -1,\n                        'data-trigger': 'manual',\n                        'data-boundary': 'viewport',\n                        'data-placement': 'auto',\n                        'data-html': 'true',\n                        'data-content': '<div class=\"loader\"></div>',\n                        'data-title': prop.formattedtitle\n                            + `<i class=\"bi bi-x-circle-fill ml-auto popover-dismiss cursor-pointer\"\n                                     style=\"font-size:1.5em;\"></i>`,\n                    });\n\n                    wrapper.popover({\n                        container: '#wrapper',\n                        html: true,\n                        template: `<div class=\"popover inlineannotation-popover id-${id}\"\n                                 role=\"tooltip\"><div class=\"arrow\"></div>\n                                 <h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                                 <div class=\"popover-body rounded\"></div>${prop.url != '' ?\n                                `<div class=\"popup-footer bg-light p-2 rounded-bottom\"><a href=\"${prop.url}\"\n                                      class=\"d-block w-100 text-right rotatex-360\" target=\"_blank\">\n                                      <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}</div>`,\n                    });\n\n                    wrapper.on('shown.bs.popover', async function() {\n                        let $body = $(`.popover.id-${id} .popover-body`);\n                        const html = await self.formatContent(prop.content.text, M.cfg.contextid);\n                        $body.html(html);\n                        notifyFilter($body);\n                        wrapper.popover('update');\n                    });\n                    if (prop.openbydefault == '1') {\n                        wrapper.popover('show');\n                    }\n                }\n            }\n        };\n\n        /**\n         * Render items on the annotation canvas.\n         * @param {Array} elements array of elements to render\n         * @param {Array} actives ids of active element\n         * @param {Boolean} update first render or updating items\n         */\n        const renderItems = async (elements, actives, update) => {\n            const currentTime = await self.player.getCurrentTime();\n            if (!update) { // Clear the annotation-canvas if it is a new start.\n                $videoWrapper.find(`.annotation-wrapper`).remove();\n                $('#timeline #annotation-timeline').empty();\n            }\n\n            if (elements.length == 0) {\n                if (actives) {\n                    actives.forEach((active) => {\n                        $videoWrapper.find(`.annotation-wrapper[data-item=\"${active}\"]`).addClass('active');\n                    });\n                }\n            } else {\n                // Sort element by z-index\n                elements.sort((a, b) => Number(b.position['z-index']) - Number(a.position['z-index']));\n                elements = elements.filter(item => item.properties.start <= self.end && item.properties.end >= self.start);\n                elements.map(item => {\n                    let start = item.properties.start;\n                    let end = item.properties.end;\n                    if (start < self.start) {\n                        start = self.start;\n                    }\n                    if (end > self.end) {\n                        end = self.end;\n                    }\n\n                    item.properties.start = start;\n                    item.properties.end = end;\n\n                    return item;\n                });\n\n\n\n                let count = 0;\n                elements.forEach(async (item) => {\n                    let prop = item.properties;\n                    let type = item.type;\n                    let id = item.id;\n                    let position = item.position;\n                    let wrapper = $(`<div class=\"annotation-wrapper\" data-group=\"${position.group}\" data-start=\"${prop.start}\"\n                     data-end=\"${prop.end}\"  data-anno=\"${annotation.id}\" data-item=\"${id}\" data-type=\"${type}\"></div>`);\n                    if (prop.resizable == '1' || self.isEditMode()) {\n                        wrapper.addClass('resizable');\n                        wrapper.attr('tabindex', 0);\n                    }\n                    switch (type) {\n                        case 'image':\n                            renderImage(wrapper, item, prop, id, position);\n                            break;\n                        case 'file':\n                            renderFile(wrapper, item, prop, id, position);\n                            break;\n                        case 'navigation':\n                            renderNavigation(wrapper, item, prop, id, position);\n                            break;\n                        case 'text':\n                            renderText(wrapper, item, prop, id, position);\n                            break;\n                        case 'textblock':\n                            renderTextBlock(wrapper, item, prop, id, position);\n                            break;\n                        case 'shape':\n                            renderShape(wrapper, item, prop, id, position);\n                            break;\n                        case 'hotspot':\n                            renderHotspot(wrapper, item, prop, id, position);\n                            break;\n                    }\n\n                    if (type != 'shape') {\n                        wrapper.on('mouseover', function() {\n                            if (!$(this).hasClass('resizable')) {\n                                return;\n                            }\n\n                            let aspectRatio =\n                                $(this).find('.annotation-content').width() / $(this).find('.annotation-content').height();\n                            if (wrapper.width() / wrapper.height() != aspectRatio && (type == 'image')) {\n                                $(this).height((wrapper.width() / aspectRatio));\n                            }\n                            $(this).resizable('option', 'aspectRatio', $(this).find('.annotation-content').outerWidth() /\n                                $(this).find('.annotation-content').outerHeight());\n                        });\n                    }\n\n                    count++;\n\n                    if (count == elements.length) {\n                        // Always trigger the timeupdate event after all items are rendered.\n                        dispatchEvent('timeupdate', {time: self.roundToTwo(currentTime)});\n\n                        if (self.isEditMode()) {\n                            if ($('#annotation-btns').is(\":visible\") == false) {\n                                $videoWrapper.find('.annotation-wrapper').addClass('no-pointer');\n                            }\n                            // Initialize the draggable and resizable for each item.\n                            $videoWrapper.find('.annotation-wrapper').draggable({\n                                containment: \"#annotation-canvas\",\n                                cursor: \"move\",\n                                grid: [1, 1],\n                                handle: '.annotation-content',\n                                start: function() {\n                                    getItems(false);\n                                    // Get all the selected elements\n                                    if (!$(this).hasClass('active')) {\n                                        $(this).trigger('click');\n                                    }\n                                    let $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    $selected.addClass('no-pointer');\n                                    $selected.each(function() {\n                                        $(this).data('startPosition', $(this).position());\n                                    });\n                                },\n                                drag: function(event, ui) {\n                                    var $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    var left = ui.originalPosition.left - ui.position.left;\n                                    var top = ui.originalPosition.top - ui.position.top;\n                                    var positions = $selected.map(function() {\n                                        return {\n                                            id: $(this).data('item'),\n                                            left: $(this).position().left,\n                                            top: $(this).position().top,\n                                            bottom: $(this).position().top + $(this).height(),\n                                            right: $(this).position().left + $(this).width(),\n                                        };\n                                    }).get();\n\n                                    if (positions.find(x => x.left < 0)) {\n                                        // Sort the elements by left position to get the leftmost element\n                                        positions.sort((a, b) => a.left - b.left);\n                                        let onLeft = positions.find(x => x.left < 0);\n                                        let id = onLeft.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', 0);\n                                        let distance = target.data('startPosition').left;\n                                        ui.position.left = ui.originalPosition.left - distance;\n                                        left = ui.originalPosition.left - ui.position.left;\n                                    }\n\n                                    if (positions.find(x => x.top < 0)) {\n                                        positions.sort((a, b) => a.top - b.top);\n                                        let onTop = positions.find(x => x.top < 0);\n                                        let id = onTop.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', 0);\n                                        let distance = target.data('startPosition').top;\n                                        ui.position.top = ui.originalPosition.top - distance;\n                                        top = ui.originalPosition.top - ui.position.top;\n                                    }\n\n                                    if (positions.find(x => x.right > $('#annotation-canvas').width())) {\n                                        positions.sort((a, b) => a.right - b.right);\n                                        let onRight = positions.find(x => x.right > $('#annotation-canvas').width());\n                                        let id = onRight.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', ($('#annotation-canvas').width() - target.width() - 1) + 'px');\n                                        let distance = target.data('startPosition').left - target.position().left;\n                                        ui.position.left = ui.originalPosition.left - distance;\n                                        left = ui.originalPosition.left - ui.position.left;\n                                    }\n\n                                    if (positions.find(x => x.bottom > $('#annotation-canvas').height())) {\n                                        positions.sort((a, b) => a.bottom - b.bottom);\n                                        let onBottom = positions.find(x => x.bottom > $('#annotation-canvas').height());\n                                        let id = onBottom.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', ($('#annotation-canvas').height() - target.height() - 1) + 'px');\n                                        let distance = target.data('startPosition').top - target.position().top;\n                                        ui.position.top = ui.originalPosition.top - distance;\n                                        top = ui.originalPosition.top - ui.position.top;\n                                    }\n\n                                    $selected.not(this).each(function() {\n                                        var $this = $(this);\n                                        var position = $this.data('startPosition');\n                                        $this.css({\n                                            left: (position.left - left) + 'px',\n                                            top: (position.top - top) + 'px',\n                                        });\n                                    });\n                                    updatePositionInfo($(this));\n                                },\n                                stop: function() {\n                                    let $selected = $videoWrapper.find('.annotation-wrapper.active');\n                                    var positions = $selected.map(function() {\n                                        return {\n                                            id: $(this).data('item'),\n                                            left: $(this).position().left,\n                                            top: $(this).position().top,\n                                            bottom: $(this).position().top + $(this).height(),\n                                            right: $(this).position().left + $(this).width(),\n                                        };\n                                    }).get();\n\n                                    if (positions.find(x => x.left < 0)) {\n                                        positions.sort((a, b) => a.left - b.left);\n                                        let onLeft = positions.find(x => x.left < 0);\n                                        let id = onLeft.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', 0);\n                                        let distance = target.data('startPosition').left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.top < 0)) {\n                                        positions.sort((a, b) => a.top - b.top);\n                                        let onTop = positions.find(x => x.top < 0);\n                                        let id = onTop.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', 0);\n                                        let distance = target.data('startPosition').top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.right > $('#annotation-canvas').width())) {\n                                        positions.sort((a, b) => a.right - b.right);\n                                        let onRight = positions.find(x => x.right > $('#annotation-canvas').width());\n                                        let id = onRight.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', ($('#annotation-canvas').width() - target.width() - 1) + 'px');\n                                        let distance = target.data('startPosition').left - target.position().left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.bottom > $('#annotation-canvas').height())) {\n                                        positions.sort((a, b) => a.bottom - b.bottom);\n                                        let onBottom = positions.find(x => x.bottom > $('#annotation-canvas').height());\n                                        let id = onBottom.id;\n                                        let target = $videoWrapper.find(`.annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', ($('#annotation-canvas').height() - target.height() - 1) + 'px');\n                                        let distance = target.data('startPosition').top - target.position().top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    getItems(false);\n                                    $selected = $selected.map(function() {\n                                        return $(this).data('item');\n                                    }).get();\n                                    saveTracking($selected);\n                                    if ($selected.length == 1) {\n                                        $(this).trigger('click');\n                                    }\n                                    $videoWrapper.find('.annotation-wrapper').removeClass('no-pointer');\n                                }\n                            });\n\n                            $videoWrapper.find('.annotation-wrapper').resizable({\n                                containment: \"#annotation-canvas\",\n                                handles: \"all\",\n                                grid: [1, 1],\n                                minHeight: 1,\n                                resize: function(event) {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape' && event.ctrlKey) {\n                                        $(this).resizable('option', 'aspectRatio', 1);\n                                    }\n                                    updatePositionInfo($(this));\n                                },\n                                stop: function() {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape') {\n                                        $(this).resizable('option', 'aspectRatio', false);\n                                    }\n                                    recalculatingSize($(this));\n                                    getItems(false);\n                                    saveTracking([$(this).data('item')]);\n                                    $(this).trigger('click');\n                                }\n                            });\n\n                            await renderTimelineItems(elements, actives);\n                            dispatchEvent('timeupdate', {time: self.roundToTwo(currentTime)});\n                        }\n                    }\n\n                    if (actives && actives.includes(id)) {\n                        wrapper.addClass('active');\n                        if (actives.length == 1) {\n                            setTimeout(function() {\n                                wrapper.trigger('mouseover');\n                                wrapper.trigger('click');\n                            }, 500);\n                        }\n                    }\n                });\n\n                // Handle behavior for each item\n                if (!self.isEditMode()) {\n                    $videoWrapper.on('click', `.annotation-wrapper`, function(e) {\n                        e.stopImmediatePropagation();\n                        let wrapper = $(this);\n                        let type = wrapper.data('type');\n                        switch (type) {\n                            case 'navigation':\n                            case 'image':\n                            case 'shape':\n                                var navigation = wrapper.find('.annotation-content');\n                                if (self.isBetweenStartAndEnd(navigation.data('timestamp'))) {\n                                    self.player.seek(navigation.data('timestamp'));\n                                    self.player.play();\n                                }\n                                break;\n                            case 'hotspot':\n                                self.player.pause();\n                                var hotspotid = wrapper.data('item');\n                                var hotspot = items.find(x => x.id == hotspotid);\n                                var viewertype = wrapper.data('toggle');\n                                if (viewertype == 'modal') {\n                                    let title = hotspot.properties.formattedtitle;\n                                    let content = hotspot.properties.content.text;\n                                    let url = hotspot.properties.url;\n                                    let modal = `<div class=\"modal fade\" id=\"annotation-modal\" role=\"dialog\"\n                                aria-labelledby=\"annotation-modal\"\n                             aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n                             <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n                                <div class=\"modal-content rounded-lg\">\n                                    <div class=\"modal-header d-flex align-items-center shadow-sm pr-0\" id=\"title\">\n                                        <h5 class=\"modal-title text-truncate mb-0\">${title}</h5>\n                                        <button class=\"btn mx-2 p-0 close\" aria-label=\"Close\" data-dismiss=\"modal\">\n                                            <i class=\"bi bi-x-lg fa-fw\" style=\"font-size: x-large;\"></i>\n                                        </button>\n                                    </div>\n                                    <div class=\"modal-body\" id=\"content\">\n                                    <div class=\"loader\"></div>\n                                    </div>\n                                    ${url != '' ? `<div class=\"modal-footer bg-light p-2 rounded-bottom\">\n                                        <a href=\"${url}\" class=\"d-block w-100 text-right rotatex-360\" target=\"_blank\">\n                                        <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}\n                                    </div>\n                                </div>\n                                </div>`;\n                                    $('#wrapper').append(modal);\n                                    $('#annotation-modal').modal('show');\n                                    $('#annotation-modal').on('hide.bs.modal', function() {\n                                        $('#annotation-modal').remove();\n                                    });\n                                    $('#annotation-modal').on('shown.bs.modal', async function() {\n                                        $('#annotation-modal .modal-body').fadeIn(300);\n                                        let $body = $('#annotation-modal .modal-body');\n                                        const html = await self.formatContent(content, M.cfg.contextid);\n                                        $body.html(html);\n                                        notifyFilter($body);\n                                    });\n                                } else {\n                                    wrapper.popover('show');\n                                }\n                                break;\n                        }\n                    });\n\n                    $playerWrapper.on('click', `.popover-dismiss`, function(e) {\n                        e.stopImmediatePropagation();\n                        $(this).closest('.popover').remove();\n                    });\n                }\n            }\n        };\n\n        // Check resize on video wrapper resize\n        let vwrapper = document.querySelector('#video-wrapper');\n        let resizeObserver = new ResizeObserver(() => {\n            let existingwrapper = $(`#annotation-canvas`).find(`.annotation-wrapper`);\n            if (existingwrapper.length == 0) {\n                return;\n            }\n            existingwrapper.each(function() {\n                let type = $(this).data('type');\n                setTimeout(() => {\n                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                    }\n                }, 100);\n            });\n            $('#annotation-canvas').css('font-size', $('#annotation-canvas').width() / 75 + 'px');\n        });\n        resizeObserver.observe(vwrapper);\n\n        // Ready to render items.\n\n        let items = [];\n        let tracking = [];\n        let trackingIndex = 0;\n        if (data.items != '' && data.items !== null) {\n            items = JSON.parse(data.items);\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: null,\n                timestamp: self.start,\n            });\n        }\n        let draftitemid = data.draftitemid;\n\n        renderItems(items, null, false);\n\n        // End of view mode.\n        if (!self.isEditMode()) {\n            return;\n        }\n\n        /**\n         * Update tracking data for redo and undo\n         * @param {Array} actives array of active items\n         */\n        const saveTracking = (actives) => {\n            if (trackingIndex < tracking.length - 1) {\n                // Remove all the tracking data after the current index.\n                tracking = tracking.slice(0, trackingIndex + 1);\n            }\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: actives,\n                timestamp: self.player.getCurrentTime(),\n                at: new Date().getTime(),\n            });\n            tracking.sort((a, b) => a.at - b.at);\n            trackingIndex = tracking.length - 1;\n            $('#annotation-btns #undo').removeAttr('disabled');\n            $('#annotation-btns #redo').attr('disabled', 'disabled');\n            if (tracking.length == 1) {\n                $('#annotation-btns #undo').attr('disabled', 'disabled');\n            }\n        };\n\n        /**\n         * Order items by layer.\n         * @param {Array} ids array of item ids\n         * @param {String} order asc or desc\n         * @returns {Array} sorted array of item ids\n         */\n        const sortItemsByLayer = (ids, order) => {\n            ids = ids.map(x => x.toString()); // Convert ids to string for consistency.\n            let targetItems = items.filter(item => {\n                const id = item.id.toString();\n                return ids.includes(id);\n            });\n            if (order == 'desc') {\n                targetItems.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            } else {\n                targetItems.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n            }\n\n            return targetItems.map(item => item.id);\n        };\n\n        /**\n         * Get highest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} top z-index\n         */\n        const getTopLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'desc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get lowest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} bottom z-index\n         */\n        const getBottomLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'asc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get all items from the annotation-canvas.\n         * @param {Boolean} updateid whether or not to update the id of the item.\n         */\n        const getItems = (updateid) => {\n            let newItems = [];\n            const annos = $videoWrapper.find(`.annotation-wrapper`);\n            annos.each(function(index, element) {\n                const id = $(element).data('item');\n                let item = {\n                    \"type\": $(element).data('type'),\n                    \"position\": recalculatingSize($(element)),\n                };\n                item.id = id;\n                item.properties = items.find(x => x.id == id).properties;\n                if (updateid) {\n                    item.id = new Date().getTime() + index;\n                    $(element).attr('data-item', item.id);\n                }\n                newItems.push(item);\n            });\n            items = newItems;\n            draftStatus = 'draft';\n        };\n\n        /**\n         * Handle form data when adding or editing an item.\n         * @param {Object} newItem data from form submission\n         * @param {String} type type of the item\n         * @param {Boolean} add adding or editing\n         */\n        const handleFormData = (newItem, type, add) => {\n            switch (type) {\n                case 'file':\n                    if (add) {\n                        newItem.position.height = '40px';\n                        newItem.position.width = '130px';\n                    }\n                    break;\n                case 'textblock':\n                    if (add) {\n                        newItem.position.fontSize = '16px';\n                        newItem.position.lineHeight = '20px';\n                    }\n                    break;\n                case 'shape':\n                    if (add) {\n                        newItem.position.height = '100px';\n                        newItem.position.width = '100px';\n                    }\n                    break;\n                case 'image':\n                    newItem.position.height = 'auto';\n                    break;\n                case 'hotspot':\n                    if (add) {\n                        newItem.position.width = '5%';\n                    }\n                    break;\n            }\n\n            items.push(newItem);\n            saveTracking([newItem.id]);\n            renderItems(items, [newItem.id], false);\n        };\n\n        $(document).on('click', '.annotation-timeline-item', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $videoWrapper.find('.annotation-wrapper').removeClass('active');\n            if (!e.ctrlKey && !e.metaKey) {\n                let elementid = $(this).data('item');\n                let elem = $videoWrapper.find(`.annotation-wrapper[data-item=\"${elementid}\"]`);\n                elem.trigger('click');\n            } else {\n                if ($(this).hasClass('active')) {\n                    $(this).removeClass('active');\n                } else {\n                    $(this).addClass('active');\n                }\n            }\n\n            var activeitems = $(`.annotation-timeline-item.active`);\n            if (activeitems.length == 0) {\n                $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n                $('#annotation-btns #edit').attr('disabled', 'disabled');\n                $('#annotation-btns #edit').removeAttr('disabled');\n            } else {\n                let dataActive = activeitems.map(function() {\n                    return $(this).data('item');\n                }).get();\n\n                dataActive.forEach((id) => {\n                    $videoWrapper.find(`.annotation-wrapper[data-item=${id}]`).addClass('active');\n                });\n\n                let activewrapper = $videoWrapper.find('.annotation-wrapper.active');\n                document.querySelector('.annotation-wrapper.active').focus();\n                $('#edit-btns').attr('data-active', dataActive).addClass('d-flex').removeClass('d-none');\n                if (activewrapper.length > 1) {\n                    $('#annotation-btns #edit').attr('disabled', 'disabled');\n                    $('#annotation-btns #position').addClass('d-none');\n                } else {\n                    $('#annotation-btns #edit').removeAttr('disabled');\n                    $('#annotation-btns #position').removeClass('d-none');\n                }\n\n                $('#annotation-canvas #background').removeClass('d-none').css('z-index', 3);\n            }\n        });\n\n        $(document).on('dblclick', '.annotation-timeline-item', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            self.player.seek($(this).data('start'));\n            dispatchEvent('timeupdate', {time: $(this).data('start')});\n        });\n\n        $playerWrapper.on('click', `#annotation-btns #save`, function(e) {\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Encode html tags\n            let cleanItems = JSON.stringify(items).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            let updateId = $videoWrapper.data('id');\n            $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: \"POST\",\n                dataType: \"text\",\n                data: {\n                    action: 'quickeditfield',\n                    sesskey: M.cfg.sesskey,\n                    id: updateId,\n                    field: 'content',\n                    contextid: M.cfg.contextid,\n                    draftitemid: draftitemid,\n                    value: cleanItems,\n                    cmid: self.cmid,\n                    token: self.token,\n                },\n                success: function(data) {\n                    let updated = JSON.parse(data);\n                    draftStatus = null;\n                    tracking = [];\n                    $('#annotation-btns #redo, #annotation-btns #undo').attr('disabled', 'disabled');\n                    dispatchEvent('annotationupdated', {\n                        annotation: updated,\n                        action: 'edit',\n                    });\n                }\n            });\n            $('#annotation-canvas #background').trigger('click');\n        });\n\n        $(document).off('click', `#annotation-btns #closetoolbar`).on('click', `#annotation-btns #closetoolbar`, function(e) {\n            e.stopImmediatePropagation();\n            if (draftStatus == 'draft') {\n                Notification.saveCancel(\n                    M.util.get_string('unsavedchange', 'ivplugin_annotation'),\n                    M.util.get_string('unsavedchangeconfirm', 'ivplugin_annotation'),\n                    M.util.get_string('save', 'ivplugin_annotation'),\n                    function() {\n                        // If the user clicks save, save the changes.\n                        $('#annotation-btns #save').trigger('click');\n                        $(`#annotation-btns #closetoolbar`).trigger('click');\n                    },\n                    function() {\n                        // If the user clicks cancel, discard the changes.\n                        let instance = tracking[0];\n                        items = instance.items;\n                        renderItems(items, instance.actives, false);\n                        draftStatus = null;\n                        tracking = [];\n                        $('#annotation-btns #redo, #annotation-btns #undo').attr('disabled', 'disabled');\n                        $(`#annotation-btns #closetoolbar`).trigger('click');\n                    }\n                );\n            } else {\n                $(`#annotation-btns`).remove();\n                $('#interaction-timeline, #video-timeline-wrapper').show();\n                $('#timeline-btns div:not(#playbutton)').css('visibility', 'visible');\n                $('#content-region').removeClass('no-pointer-events');\n                $('#annotation-timeline').hide();\n                $('#scrollbar').addClass('snap');\n                $('#annotation-canvas .annotation-wrapper').addClass('no-pointer').removeClass('active');\n            }\n        });\n\n        $playerWrapper.off('click', `#annotation-btns .add-ia`).on('click', `#annotation-btns .add-ia`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annoid = $videoWrapper.data('id');\n            let type = $(this).attr('data-mediatype');\n            let start = await self.player.getCurrentTime();\n            let end = start + 5;\n            start = parseFloat(start).toFixed(2);\n            end = parseFloat(end).toFixed(2);\n            let iaform = new ModalForm({\n                formClass: \"ivplugin_annotation\\\\items\\\\\" + $(this).attr('data-type'),\n                args: {\n                    contextid: M.cfg.contextid,\n                    id: 0,\n                    type: type,\n                    annotationid: annoid,\n                    start: start,\n                    end: end,\n                },\n                modalConfig: {\n                    title: M.util.get_string('addinlineannotation', 'ivplugin_annotation',\n                        M.util.get_string(type, 'ivplugin_annotation')),\n                }\n            });\n\n            iaform.show();\n\n            iaform.addEventListener(iaform.events.LOADED, () => {\n                iaform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n                if (type == 'navigation' || type == 'image' || type == 'shape') {\n                    $(document).on('change', '.modal [name=\"timestamp\"]', function(e) {\n                        e.preventDefault();\n                        let parts = $(this).val().split(':');\n                        let timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!self.isBetweenStartAndEnd(timestamp)) {\n                            let message = M.util.get_string('timemustbebetweenstartandendtime', 'ivplugin_annotation', {\n                                \"start\": self.convertSecondsToHMS(self.start),\n                                \"end\": self.convertSecondsToHMS(self.end),\n                            });\n                            self.addNotification(message);\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n\n                        // Make sure the timestamp is not in the skip segment.\n                        if (self.isInSkipSegment(timestamp)) {\n                            self.addNotification(M.util.get_string('interactionisbetweentheskipsegment',\n                                'ivplugin_annotation'));\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n                    });\n                }\n            });\n\n            iaform.addEventListener(iaform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                const highestOrder = getTopLayer(items);\n                let left = Math.random() * 100;\n                let top = Math.random() * 100;\n                let newItem = {\n                    \"id\": new Date().getTime(),\n                    \"type\": type,\n                    \"position\": {\n                        \"width\": \"30%\",\n                        \"left\": left + \"px\",\n                        \"top\": top + \"px\",\n                        \"z-index\": highestOrder + 1,\n                    },\n                    'properties': e.detail,\n                };\n                handleFormData(newItem, type, true);\n            });\n        });\n\n        $playerWrapper.off('click', `#annotation-btns #edit`).on('click', `#annotation-btns #edit`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annnoid = $videoWrapper.data('id');\n            let active = $('#edit-btns').attr('data-active');\n            getItems(false);\n            let item = items.find(x => x.id == active);\n            let type = item.type;\n            let formdata = JSON.parse(JSON.stringify(item.properties));\n            formdata.contextid = M.cfg.contextid;\n            formdata.id = item.id;\n            formdata.annotationid = annnoid;\n            formdata.type = type;\n            let editform = new ModalForm({\n                formClass: \"ivplugin_annotation\\\\items\\\\\" +\n                    (type == 'image' || type == 'file' ? 'media' : type),\n                args: formdata,\n                modalConfig: {\n                    title: M.util.get_string('editinlineannotation', 'ivplugin_annotation',\n                        M.util.get_string(type, 'ivplugin_annotation')),\n                }\n            });\n\n            editform.show();\n\n            editform.addEventListener(editform.events.LOADED, () => {\n                editform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n                if (type == 'navigation' || type == 'image' || type == 'shape') {\n                    $(document).on('change', '.modal [name=\"timestamp\"]', function(e) {\n                        e.preventDefault();\n                        let parts = $(this).val().split(':');\n                        let timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!self.isBetweenStartAndEnd(timestamp)) {\n                            let message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                                \"start\": self.convertSecondsToHMS(self.start),\n                                \"end\": self.convertSecondsToHMS(self.end),\n                            });\n                            self.addNotification(message);\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n\n                        // Make sure the timestamp is not in the skip segment.\n                        if (self.isInSkipSegment(timestamp)) {\n                            self.addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'));\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n                    });\n                }\n            });\n\n            editform.addEventListener(editform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                item = items.find(x => x.id == active);\n                item.properties = e.detail;\n                // Remove the item from the annotation-canvas\n                $videoWrapper.find(`.annotation-wrapper[data-item=\"${active}\"]`).remove();\n                items = items.filter(x => x.id != active);\n                handleFormData(item, type, false);\n            });\n        });\n\n        $videoWrapper.off('click', `.annotation-wrapper`).on('click', `.annotation-wrapper`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            self.player.pause();\n            if (!e.ctrlKey && !e.metaKey) {\n                $videoWrapper.find('.annotation-wrapper').removeClass('active');\n                $(this).addClass('active');\n                this.focus();\n                recalculatingSize($(this));\n            } else {\n                if ($(this).hasClass('active')) {\n                    $(this).removeClass('active');\n                } else {\n                    $(this).addClass('active');\n                    this.focus();\n                }\n            }\n\n            if (!isNaN($(this).data('group'))) {\n                let group = $(this).data('group');\n                $videoWrapper.find(`.annotation-wrapper[data-group=\"${group}\"]`).addClass('active');\n            }\n\n            recalculatingSize($(this));\n\n            $(`#timeline #annotation-timeline .annotation-timeline-item`).removeClass('active');\n            var activewrapper = $videoWrapper.find('.annotation-wrapper.active');\n            if (activewrapper.length == 0) {\n                $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n                $('#annotation-btns #edit').attr('disabled', 'disabled');\n                $('#annotation-btns #edit').removeAttr('disabled');\n            } else {\n                let dataActive = activewrapper.map(function() {\n                    return $(this).data('item');\n                }).get();\n\n                dataActive.forEach((id) => {\n                    $(`#timeline #annotation-timeline .annotation-timeline-item[data-item=\"${id}\"]`).addClass('active');\n                });\n\n                $('#edit-btns').attr('data-active', dataActive).addClass('d-flex').removeClass('d-none');\n                if (activewrapper.length > 1) {\n                    $('#annotation-btns #edit').attr('disabled', 'disabled');\n                    $('#edit-btns #position').addClass('d-none');\n                } else {\n                    $('#annotation-btns #edit').removeAttr('disabled');\n                    $('#edit-btns #position').removeClass('d-none');\n                }\n                $('#annotation-canvas #background').removeClass('d-none').css('z-index', 1);\n            }\n\n            // Enable ungroup button if the active items are grouped.\n            let grouping = activewrapper.map(function() {\n                return $(this).data('group');\n            }).get();\n\n            grouping = [...new Set(grouping)];\n\n            if (activewrapper.length < 2) {\n                $('#annotation-btns #ungroup, #annotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n            } else {\n                if (grouping.length == 1) {\n                    if (grouping[0] == 'undefined') {\n                        $('#annotation-btns #ungroup').attr('disabled', 'disabled').addClass('d-none');\n                        $('#annotation-btns #group').removeAttr('disabled').removeClass('d-none');\n                    } else {\n                        $('#annotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n                        $('#annotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n                    }\n                } else if (grouping.length > 1) {\n                    $('#annotation-btns #ungroup, #annotation-btns #group').removeAttr('disabled').removeClass('d-none');\n                }\n            }\n\n        });\n\n        $videoWrapper.on('dblclick', '.annotation-wrapper', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).trigger('click');\n            $('#annotation-btns #edit').trigger('click');\n        });\n\n        $(document).off('click', '#annotation-canvas #background').on('click', '#annotation-canvas #background', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $('#annotation-canvas .annotation-wrapper').removeClass('active');\n            $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            $(`#timeline #annotation-timeline .annotation-timeline-item`).removeClass('active');\n            $('#annotation-canvas #background').addClass('d-none').css('z-index', 0);\n        });\n\n        $(document).off('click', `#annotation-btns #undo`).on('click', `#annotation-btns #undo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == 0) {\n                return;\n            }\n            trackingIndex--;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            self.player.seek(instance.timestamp);\n            if (trackingIndex == 0) {\n                $('#annotation-btns #undo').attr('disabled', 'disabled');\n                $('#annotation-btns #redo').removeAttr('disabled');\n            } else {\n                $('#annotation-btns #undo').removeAttr('disabled');\n                if (trackingIndex == tracking.length - 1) {\n                    $('#annotation-btns #redo').attr('disabled', 'disabled');\n                } else {\n                    $('#annotation-btns #redo').removeAttr('disabled');\n                }\n            }\n        });\n\n        $(document).off('click', `#annotation-btns #redo`).on('click', `#annotation-btns #redo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == tracking.length - 1) {\n                return;\n            }\n            trackingIndex++;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            self.player.seek(instance.timestamp);\n            if (trackingIndex == tracking.length - 1) {\n                $('#annotation-btns #redo').attr('disabled', 'disabled');\n                $('#annotation-btns #undo').removeAttr('disabled');\n            } else {\n                $('#annotation-btns #redo').removeAttr('disabled');\n                if (trackingIndex == 0) {\n                    $('#annotation-btns #undo').attr('disabled', 'disabled');\n                } else {\n                    $('#annotation-btns #undo').removeAttr('disabled');\n                }\n            }\n        });\n\n        const updateOrder = (active, direction) => {\n            // First sort items by z-index descending\n            getItems(false);\n            items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            let activeIndex = items.findIndex(x => x.id == active);\n            let activeItem = items[activeIndex];\n            let currentzIndex = activeItem.position['z-index'];\n            let affectedItem = null;\n            let affectedItemIndex = null;\n            if (direction == 'up') {\n                if (activeIndex == 0) {\n                    return;\n                }\n                affectedItemIndex = activeIndex - 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            } else {\n                if (activeIndex == items.length - 1) {\n                    return;\n                }\n                affectedItemIndex = activeIndex + 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            }\n            items[activeIndex] = activeItem;\n            items[affectedItemIndex] = affectedItem;\n            $(`.annotation-wrapper[data-item=\"${active}\"]`).css(activeItem.position);\n            $(`.annotation-wrapper[data-item=\"${affectedItem.id}\"]`).css(affectedItem.position);\n            saveTracking([active]);\n        };\n\n        // Group the active items\n        $(document).off('click', `#annotation-btns #group`).on('click', `#annotation-btns #group`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $('#annotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('.annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            const group = new Date().getTime();\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                target.position.group = group;\n                activeItem.attr('data-group', target.position.group);\n                items[targetIndex] = target;\n            });\n            renderItems(items, active, false);\n            saveTracking(active);\n        });\n\n        $(document).off('click', `#annotation-btns #ungroup`).on('click', `#annotation-btns #ungroup`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $(`#annotation-btns #group`).removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('.annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                delete target.position.group;\n                activeItem.attr('data-group', target.position.group);\n                items[targetIndex] = target;\n            });\n            renderItems(items, active, false);\n            saveTracking(active);\n        });\n\n        // Increase the z-index of the active items\n        $(document).off('click', `#annotation-btns #up`).on('click', `#annotation-btns #up`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const topLayer = getTopLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'desc');\n                let indexes = [];\n                items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == topLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'up');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n            renderTimelineItems(items, active);\n        });\n\n        // Decrease the z-index of the active items\n        $(document).off('click', `#annotation-btns #down`).on('click', `#annotation-btns #down`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const bottomLayer = getBottomLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'asc');\n                let indexes = [];\n                items.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == bottomLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'down');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n            renderTimelineItems(items, active);\n        });\n\n        // Delete the active items\n        $playerWrapper.on('click', `#annotation-btns #delete`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active.forEach((item) => {\n                let activeItem = $(`.annotation-wrapper[data-item=\"${item}\"]`);\n                activeItem.remove();\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            });\n            getItems(false);\n            renderTimelineItems(items, null);\n            saveTracking(null);\n        });\n\n        // Duplicate the active items.\n        $playerWrapper.on('click', `#annotation-btns #copy`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Copy the active item.\n            const highestOrder = getTopLayer(items);\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active = sortItemsByLayer(active, 'asc');\n            const currentTime = await self.player.getCurrentTime();\n            let newItems = [];\n            let groupIncrement = Math.round(Math.random() * 100);\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`.annotation-wrapper[data-item=\"${a}\"]`);\n                activeItem.removeClass('active');\n                const item = items.find(x => x.id == a);\n                let newItem = JSON.parse(JSON.stringify(item));\n                newItem.properties.end = currentTime + (newItem.properties.end - newItem.properties.start);\n                newItem.properties.start = currentTime;\n                newItem.position = recalculatingSize(activeItem);\n                if (item.position.group) {\n                    newItem.position.group = Number(item.position.group) + groupIncrement;\n                } else {\n                    delete newItem.position.group;\n                }\n                newItem.id = new Date().getTime();\n                newItems.push(newItem.id);\n                newItem.position.zIndex = Number(highestOrder) + i + 1;\n                items.push(newItem);\n                renderItems(items, null, false);\n                if (i == active.length - 1) {\n                    $('#edit-btns').attr('data-active', newItems.join(',')).addClass('d-flex').removeClass('d-none');\n                    // Put focus on the first element\n                    renderItems([], newItems, true);\n                    setTimeout(() => {\n                        getItems(false);\n                        document.querySelector('.annotation-wrapper.active').focus();\n                        updatePositionInfo($videoWrapper.find(`.annotation-wrapper[data-item=\"${newItem.id}\"]`));\n                        saveTracking(newItems);\n                    }, 500);\n                }\n            }\n        });\n\n        // Move items with keyboard arrow keys, ctrl + up to layer up, and ctrl + down to layer down.\n        $playerWrapper.on('keydown', '.annotation-wrapper', function(e) {\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            getItems(false);\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`.annotation-wrapper[data-item=\"${a}\"]`);\n                if (activeItem != undefined) {\n                    let position = activeItem.position();\n                    let ctrl = e.ctrlKey || e.metaKey;\n                    let step = 1;\n                    // Prevent page scroll\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    switch (e.key) {\n                        case 'ArrowUp':\n                            if (position.top > 0) {\n                                position.top = position.top - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowDown':\n                            if (position.top + activeItem.outerHeight() < $videoWrapper.height()) {\n                                position.top = position.top + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowLeft':\n                            if (position.left > 0) {\n                                position.left = position.left - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowRight':\n                            if (position.left + activeItem.outerWidth() < $videoWrapper.width()) {\n                                position.left = position.left + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'Delete':\n                            $(`#annotation-btns #delete`).trigger('click');\n                            return;\n                        case 'd': // Ctrl + d to duplicate\n                            if (ctrl) {\n                                $(`#annotation-btns #copy`).trigger('click');\n                            }\n                            return;\n                        default:\n                            return;\n                    }\n                    activeItem.css(position);\n                    recalculatingSize(activeItem);\n                }\n            }\n        });\n\n        // Listen to the annotationupdated event\n        $(document).on('annotationdeleted', function(e) {\n            let deleted = e.originalEvent.detail.annotation;\n            let annoid = $videoWrapper.data('id');\n            if (annoid == deleted.id) {\n                $videoWrapper.find('.annotation-wrapper').remove();\n                $(`#annotation-btns`).remove();\n                $(`#timeline #annotation-timeline .annotation-timeline-item`).remove();\n            }\n        });\n\n        // Confirm draft saved.\n        window.addEventListener('beforeunload', (e) => {\n            if (draftStatus !== null) {\n                const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                e.returnValue = confirmationMessage;\n                return confirmationMessage;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Override the render method to add the items on the list of editing annotations\n     * @param {Array} annotations The annotations array\n     * @param {Object} listItem The list item\n     * @param {Object} item The annotation object\n     * @returns {void}\n     */\n    async renderEditItem(annotations, listItem, item) {\n        this.annotations = annotations;\n        listItem.removeAttr('id').removeClass('d-none');\n        listItem.attr('data-type', item.type);\n        listItem.addClass(item.type);\n        listItem.attr('data-id', item.id);\n        listItem.removeAttr('data-timestamp');\n        listItem.find('.timestamp').remove();\n        listItem.find('.title').text(item.formattedtitle).addClass('no-pointer text-dark');\n        listItem.find('.btn.xp').remove();\n        listItem.find('.type-icon i').addClass(this.prop.icon);\n        listItem.find('.type-icon').attr('title', this.prop.title);\n        listItem.find('.btn.copy').remove();\n        listItem.appendTo('#annotation-list');\n        return listItem;\n    }\n\n    /**\n     * Edit an annotation\n     * @param {Array} annotations The annotations array\n     * @param {number} id The annotation id\n     * @returns {void}\n     */\n    async editAnnotation(annotations, id) {\n        this.annotations = annotations;\n        let item = this.annotations.find((annotation) => annotation.id == id);\n        $('#annotation-canvas').attr('data-id', item.id);\n        $('#interaction-timeline, #video-timeline-wrapper').hide();\n        $('#timeline-btns div:not(#playbutton)').css('visibility', 'hidden');\n        $('#content-region').addClass('no-pointer-events');\n        $('#annotation-timeline').show();\n        $('#annotation-canvas .annotation-wrapper').removeClass('no-pointer');\n        $('#scrollbar').removeClass('snap');\n        this.renderAnnotationToolbar(item);\n    }\n\n    /**\n     * Add an annotation to the annotation list without the form as other annotation\n     * @param {Array} annotations Array of annotations\n     * @param {Number} timestamp timestamp\n     * @param {Number} coursemodule Course module id\n     * @returns void\n     */\n    async addAnnotation(annotations, timestamp, coursemodule) {\n        let self = this;\n        // Check if the annotation of this type already exists.\n        let annotation = annotations.find((annotation) => annotation.type == self.prop.name);\n        if (annotation) {\n            self.addNotification('Annotation already exists', 'danger');\n            return;\n        }\n        let data = {\n            title: 'Annotation',\n            timestamp: -1,\n            contextid: M.cfg.contextid,\n            type: self.prop.name,\n            courseid: self.course,\n            cmid: coursemodule,\n            annotationid: self.interaction,\n            hascompletion: 0,\n            advanced: JSON.stringify({\n                \"visiblebeforecompleted\": \"1\",\n                \"visibleaftercompleted\": null,\n                \"clickablebeforecompleted\": \"1\",\n                \"clickableaftercompleted\": null,\n                \"replaybehavior\": \"1\",\n            }),\n        };\n        let ajax = await Ajax.call([{\n            methodname: 'ivplugin_annotation_add',\n            args: {\n                annotationdata: JSON.stringify(data),\n            },\n            contextid: M.cfg.contextid,\n        }])[0];\n\n        let newAnnotation = JSON.parse(ajax.data);\n        dispatchEvent('annotationupdated', {\n            annotation: newAnnotation,\n            action: 'add'\n        });\n\n        self.annotations = annotations;\n        $('#contentmodal').modal('hide');\n        newAnnotation.editmode = true;\n        const content = await self.render(newAnnotation, 'json');\n        $('#annotation-canvas').attr('data-id', newAnnotation.id);\n        self.postContentRender(newAnnotation, content);\n        self.editAnnotation(annotations, newAnnotation.id);\n    }\n\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {Object} The annotation object\n     */\n    runInteraction(annotation) {\n        return annotation;\n    }\n}"],"names":["Annotation","Base","roundToTwo","num","Math","round","videoWrapper","item","this","annotations","find","annotation","type","isEditMode","document","on","e","t","originalEvent","detail","time","each","start","Number","data","end","css","attr","id","editmode","content","render","postContentRender","updateAspectRatio","async","video","reset","elem","hasClass","ratio","displayoptions","usefixedratio","player","aspectratio","videowrapperaspect","width","height","gap","vwrapper","querySelector","ResizeObserver","observe","remove","annotationitems","M","util","get_string","dataForTemplate","items","html","Templates","append","enableColorPicker","self","$videoWrapper","$playerWrapper","draftStatus","convertSecondsToMMSS","seconds","rounded","hours","floor","minutes","sec","formattedTime","updatePositionInfo","w","outerWidth","hw","outerHeight","position","top","l","left","z","s","text","recalculatingSize","message","h","g","group","recalculatingTextSize","button","multiline","fontSize","padding","rowCount","length","style","renderTimelineItems","elements","activeids","currentTime","getCurrentTime","map","parseInt","timeline","empty","sort","a","b","count","forEach","i","prop","properties","includes","draggable","trigger","$selected","addClass","timestampScrollbar","ui","timestamp","totaltime","duration","now","$annowrapper","distance","originalPosition","not","$this","setTimeout","removeClass","elementid","itemIndex","findIndex","x","get","saveTracking","renderItems","resizable","originalSize","size","newStart","newEnd","leftPercentage","newWidth","$scrollbar","clone","actives","update","active","filter","wrapper","parts","split","gotourl","url","shadow","formattedalttext","renderImage","wrapperhtml","formattedlabel","renderFile","renderNavigation","undefined","bold","italic","underline","textcolor","bgcolor","borderwidth","bordercolor","textfont","renderText","textparts","textblock","part","trim","alignment","lineHeight","renderTextBlock","opacity","shape","renderShape","color","usemodal","formattedtitle","popover","container","template","$body","formatContent","cfg","contextid","openbydefault","renderHotspot","aspectRatio","is","containment","cursor","grid","handle","getItems","drag","event","positions","bottom","right","target","stop","newLeft","newTop","handles","minHeight","resize","ctrlKey","stopImmediatePropagation","navigation","isBetweenStartAndEnd","seek","play","pause","hotspotid","hotspot","title","modal","fadeIn","closest","existingwrapper","tracking","trackingIndex","JSON","parse","push","stringify","draftitemid","slice","at","Date","getTime","removeAttr","sortItemsByLayer","ids","order","toString","targetItems","getTopLayer","itms","sorted","zindex","updateid","newItems","index","element","handleFormData","newItem","add","preventDefault","metaKey","activeitems","dataActive","activewrapper","focus","cleanItems","replace","updateId","ajax","wwwroot","method","dataType","action","sesskey","field","value","cmid","token","success","updated","off","saveCancel","instance","show","hide","annoid","parseFloat","toFixed","iaform","ModalForm","formClass","args","annotationid","modalConfig","addEventListener","events","LOADED","val","convertSecondsToHMS","addNotification","isInSkipSegment","FORM_SUBMITTED","highestOrder","random","annnoid","formdata","editform","isNaN","grouping","Set","updateOrder","direction","activeIndex","activeItem","currentzIndex","affectedItem","affectedItemIndex","targetIndex","topLayer","indexes","abs","bottomLayer","getBottomLayer","groupIncrement","zIndex","join","ctrl","step","key","deleted","window","confirmationMessage","returnValue","listItem","icon","appendTo","renderAnnotationToolbar","coursemodule","name","courseid","course","interaction","hascompletion","advanced","Ajax","call","methodname","annotationdata","newAnnotation","editAnnotation","runInteraction"],"mappings":";;;;;;;2VA+BqBA,mBAAmBC,cAMpCC,WAAWC,aACEC,KAAKC,MAAMF,IAAM,OAAS,0BAQ7BG,cAAe,mBAAE,sBACnBC,KAAOC,KAAKC,YAAYC,MAAMC,YAAkC,cAAnBA,WAAWC,UACvDJ,KAAKK,qCAuEJC,UAAUC,GAAG,cAAc,SAASC,SAC5BC,EAAID,EAAEE,cAAcC,OAAOC,MACrB,mBAAE,0CACRC,MAAK,eACHC,MAAQC,QAAO,mBAAEf,MAAMgB,KAAK,UAC5BC,IAAMF,QAAO,mBAAEf,MAAMgB,KAAK,QAC1BP,GAAKK,OAASL,GAAKQ,wBACjBjB,MAAMkB,IAAI,aAAc,+BAExBlB,MAAMkB,IAAI,aAAc,gBAIlCnB,KAAM,qBACJ,sBAAsBoB,KAAK,UAAWpB,KAAKqB,IAC7CrB,KAAKsB,UAAW,MACZC,cAAgBtB,KAAKuB,OAAOxB,KAAM,aACjCyB,kBAAkBzB,KAAMuB,cAxFb,KACfvB,MAAwB,IAAhBA,KAAKuB,qBAGZG,kBAAoBC,MAAOC,MAAOC,aAChCC,KAAOF,OAAQ,mBAAE,YAAa,yDAAiC5B,KAAKqB,cACpE,mBAAE,YAAYU,SAAS,cAAe,KAClCC,MAAQ,GAAK,EACZ/B,KAAKgC,eAAeC,eAAsD,GAArCjC,KAAKgC,eAAeC,gBAC1DF,MAAQ/B,KAAKkC,OAAOC,iBAEpBC,mBAAqBtC,aAAauC,QAAUvC,aAAawC,SACzDC,IAAM,UACN,mBAAE,YAAYT,SAAS,iBACvBS,IAAM,IAENH,mBAAqBL,OACrBF,KAAKX,IAAI,+BAAyBqB,UAClCV,KAAKX,IAAI,+BAAyBqB,mBAAUR,YAC5CF,KAAKX,IAAI,MAAO,KAChBW,KAAKX,IAAI,wCAAkCqB,mBAAUR,kBAC9CK,mBAAqBL,QAC5BF,KAAKX,IAAI,QAAS,UAClBW,KAAKX,IAAI,mBAAa,IAAMa,cAC5BF,KAAKX,IAAI,6BAAuBqB,2BAAkBR,iBAClDF,KAAKX,IAAI,OAAQ,WAGrBW,KAAKX,IAAI,QAAS,QAClBW,KAAKX,IAAI,SAAU,QACnBW,KAAKX,IAAI,MAAO,KAChBW,KAAKX,IAAI,OAAQ,KAEjBU,QACAC,KAAKX,IAAI,QAAS,QAClBW,KAAKX,IAAI,SAAU,QACnBW,KAAKX,IAAI,MAAO,KAChBW,KAAKX,IAAI,OAAQ,OAIzBO,oBACAA,mBAAkB,OAEde,SAAWlC,SAASmC,cAAc,kBACjB,IAAIC,gBAAe,KACpCjB,oBACAA,mBAAkB,MAGPkB,QAAQH,8BAErBlC,UAAUC,GAAG,cAAc,SAASC,GAClCiB,mBAAkB,GAAM,SAClBhB,EAAID,EAAEE,cAAcC,OAAOC,MACrB,mBAAE,0CACRC,MAAK,eACHC,MAAQC,QAAO,mBAAEf,MAAMgB,KAAK,UAC5BC,IAAMF,QAAO,mBAAEf,MAAMgB,KAAK,QAC1BP,GAAKK,OAASL,GAAKQ,wBACjBjB,MAAMkB,IAAI,aAAc,+BAExBlB,MAAMkB,IAAI,aAAc,oCAKpC,sBAAsBC,KAAK,UAAWpB,KAAKqB,QACzCE,cAAgBtB,KAAKuB,OAAOxB,KAAM,aACjCyB,kBAAkBzB,KAAMuB,wCA6BPnB,gCACxB,oBAAoByC,aAClBC,gBAAkB,CAClB,MACY,mBACA,kBACK,cACJC,EAAEC,KAAKC,WAAW,QAAS,wBAExC,MACY,gCACA,sBACK,kBACJF,EAAEC,KAAKC,WAAW,OAAQ,wBAEvC,MACY,2BACA,kBACK,cACJF,EAAEC,KAAKC,WAAW,QAAS,wBAExC,MACY,qCACA,kBACK,aACJF,EAAEC,KAAKC,WAAW,aAAc,wBAE7C,MACY,6BACA,uBACK,mBACJF,EAAEC,KAAKC,WAAW,aAAc,wBAE7C,MACY,yBACA,oBACK,gBACJF,EAAEC,KAAKC,WAAW,UAAW,+BAGxCC,gBAAkB,CACpB7B,GAAIjB,WAAWiB,GACf8B,MAAOL,qBAGPM,WAAaC,mBAAU7B,OAAO,8BAA+B0B,qCAC/D,YAAYI,OAAOF,WAEhBG,oBAQT9B,kBAAkBrB,WAAYa,UACtBuC,KAAOvD,SACPwD,eAAgB,mBAAE,sBAGlBD,KAAKlD,cACLmD,cAAcH,sGAEdI,gBAAiB,mBAAE,gBACnBC,YAAc,WAQZC,qBAAuB,SAACC,aAASC,gEAC/BC,MAAQlE,KAAKmE,MAAMH,QAAU,MAC7BI,QAAUpE,KAAKmE,OAAOH,QAAkB,KAARE,OAAgB,IAChDG,IAAML,QAAkB,KAARE,MAAyB,GAAVE,QAC/BE,cAAgB,UAChBJ,MAAQ,IACRI,eAAiBJ,MAAQ,KAEzBE,QAAU,KACVE,eAAiB,KAErBA,eAAiBF,QAAU,IACvBC,IAAM,KACNC,eAAiB,KAGjBA,eADAL,QACiBjE,KAAKC,MAAMoE,KAEXV,KAAK7D,WAAWuE,KAE9BC,eAOLC,mBAAsBtC,WACpBuC,EAAIvC,KAAKwC,aACTC,GAAKzC,KAAK0C,cACV9D,EAAIoB,KAAK2C,WAAWC,IAAM,EAAI,EAAI5C,KAAK2C,WAAWC,IAClDC,EAAI7C,KAAK2C,WAAWG,KAAO,EAAI,EAAI9C,KAAK2C,WAAWG,KACnDC,EAAI/C,KAAKX,IAAI,WACb2D,EAAIhD,KAAKb,KAAK,SACdR,EAAIqB,KAAKb,KAAK,qEAC0B8D,KAAKlF,KAAKC,MAAM6E,kEAChBI,KAAKlF,KAAKC,MAAMY,kEAChBqE,KAAKF,EAAI,iEACTE,KAAKlF,KAAKC,MAAMuE,kEAChBU,KAAKlF,KAAKC,MAAMyE,mEAChBQ,KAAKnB,qBAAqBkB,kEAC1BC,KAAKnB,qBAAqBnD,KAQpEuE,kBAAqBlD,WACnBmD,SAAU,mBAAE,sBACZZ,EAAIb,KAAK7D,WAAWmC,KAAKwC,cAAgBW,QAAQ3C,QAAU,IAC3D4C,EAAI1B,KAAK7D,WAAWmC,KAAK0C,eAAiBS,QAAQ1C,SAAW,IAC7D7B,EAAI8C,KAAK7D,WAAWmC,KAAK2C,WAAWC,KAAOO,QAAQ1C,SAAW,IAClE7B,EAAIA,EAAI,EAAI,EAAIA,MACZiE,EAAInB,KAAK7D,WAAWmC,KAAK2C,WAAWG,MAAQK,QAAQ3C,QAAU,IAClEqC,EAAIA,EAAI,EAAI,EAAIA,MACZE,EAAI/C,KAAKX,IAAI,WACbgE,EAAIrD,KAAKb,KAAK,SACdwD,SAAW,OACFJ,EAAI,WACHa,EAAI,SACNP,EAAI,QACLjE,EAAI,cACAmE,UAEfJ,SAASW,MAAQD,EACjBrD,KAAKX,IAAIsD,UACTL,mBAAmBtC,MACZ2C,UASLY,sBAAwB,SAACvD,KAAMwD,YAAQC,kEACrCC,SAAW1D,KAAK0C,cAChBiB,QAAU,EACVC,SAAW,KACXH,UAAW,IAEXG,SADW5D,KAAK3B,KAAK,aACLwF,OACZD,SAAW,EAAG,CAEdD,QAAsB,IADN3D,KAAK0C,cAAgBkB,UAErCF,UAAY1D,KAAK0C,cAA0B,EAAViB,SAAeC,cAGpDE,MAAQ,cACMN,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,mBAC3CA,SAAW,qBACTF,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,sBAC3CF,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,MAE9DD,WAAaG,SAAW,IACxBE,MAAMH,QAAUA,QAAU,MAE9B3D,KAAK3B,KAAK,uBAAuBgB,IAAIyE,OACrC9D,KAAKX,IAAI,QAAS,SAQhB0E,oBAAsBlE,MAAOmE,SAAUC,mBACnCC,YAAcxC,KAAK7D,iBAAiB6D,KAAKrB,OAAO8D,kBAElDF,UADc,OAAdA,UACY,GAEAA,UAAUG,KAAI7E,IAAM8E,SAAS9E,UAEzC+E,UAAW,mBAAE,kCACjBA,SAASC,QACTP,SAASQ,MAAK,CAACC,EAAGC,IAAMA,EAAE/B,SAAS,WAAa8B,EAAE9B,SAAS,iBACvDgC,MAAQ,EACZX,SAASY,SAAQ,CAAC1G,KAAM2G,SAChBC,KAAO5G,KAAK6G,WACZxG,KAAOL,KAAKK,KACZgB,GAAK8E,SAASnG,KAAKqB,IACnBuD,MAAQgC,KAAK7F,MAAQyC,KAAKzC,QAAUyC,KAAKtC,IAAMsC,KAAKzC,OAAS,IAC7DuB,OAASsE,KAAK1F,IAAM0F,KAAK7F,QAAUyC,KAAKtC,IAAMsC,KAAKzC,OAAS,OAChEqF,SAAS9C,wEAAiEyC,UAAUe,SAASzF,IAAM,SAAW,iDAC5FA,2BAAkBhB,4BAAmBuG,KAAK1F,6BAAoB0F,KAAK7F,sEACjD6D,wBAAyB,IAAT+B,EAAI,yBAAqBrE,oBAC7EmE,QACIA,OAASX,SAASH,iCAEhB,6BAA6BoB,UAAU,MAC7B,gBACO,8BACL,YACF,CAAC,EAAG,SACH,YAEA,mBAAE9G,MAAM8B,SAAS,+BAChB9B,MAAM+G,QAAQ,aAEhBC,WAAY,mBAAE,oCAClBA,UAAUC,SAAS,qBACnBD,UAAUnG,MAAK,+BACTb,MAAMgB,KAAK,iBAAiB,mBAAEhB,MAAMwE,eAE1C0C,oBAAmB,mBAAElH,MAAMgB,KAAK,8BAC9B,mBAAmBiG,SAAS,2BAE1BvF,eAAelB,EAAG2G,QAClBC,UAAaD,GAAG3C,SAASG,MAAQ,mBAAE,wBAAwBtC,QAAUkB,KAAK8D,UACxE9D,KAAKzC,MACPwG,UAAW,mBAAEtH,MAAMgB,KAAK,QAAS,mBAAEhB,MAAMgB,KAAK,6BAChD,eAAe8D,KAAKnB,qBAAqByD,gCACzC,eAAetC,KAAKnB,qBAAqByD,UAAYE,eAGnDC,UAAYhE,KAAKrB,OAAO8D,iBACxBwB,aAAehE,cAActD,+CAAuC,mBAAEF,MAAMgB,KAAK,eACjFoG,WAAaG,KAAOH,UAAYE,UAAYC,IAC5CC,aAAatG,IAAI,aAAc,WAE/BsG,aAAatG,IAAI,aAAc,cAE/ByD,MAAQyC,UAAY7D,KAAKzC,OAASyC,KAAK8D,UAAY,wBACrD,cAAcnG,IAAI,sBAAgByD,sCAClC,oBAAoBzD,IAAI,iBAAWyD,+BACnC,yBAAyBG,KAAKnB,qBAAqByD,gBAEjDJ,WAAY,mBAAE,oCACdS,SAAWN,GAAGO,iBAAiB/C,KAAOwC,GAAG3C,SAASG,KACtDqC,UAAUW,IAAI3H,MAAMa,MAAK,eACjB+G,OAAQ,mBAAE5H,MACVwE,SAAWoD,MAAM5G,KAAK,iBAC1B4G,MAAM1G,IAAI,CACNyD,MAAQH,SAASG,KAAO8C,WAAY,mBAAE,wBAAwBpF,QAAW,IAAM,UAE/E+E,UAAaQ,MAAMpD,WAAWG,MAAO,mBAAE,wBAAwBtC,QAAWkB,KAAK8D,UAC7E9D,KAAKzC,MACPwG,SAAWM,MAAM5G,KAAK,OAAS4G,MAAM5G,KAAK,SAC1CwG,aAAehE,cAActD,8CAAuC0H,MAAM5G,KAAK,eAC/EoG,WAAaG,KAAOH,UAAYE,UAAYC,IAC5CC,aAAatG,IAAI,aAAc,WAE/BsG,aAAatG,IAAI,aAAc,mBAInC,WACJ2G,YAAW,+BACL,gCAAgCjF,6BAChC,mBAAmBkF,YAAY,yCAC/B9H,MAAM8H,YAAY,uBACrB,SACCd,WAAY,mBAAE,oCAClBA,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MACV+H,UAAYH,MAAM5G,KAAK,QACvBgH,UAAY9E,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAM2G,YACzChI,KAAOmD,MAAM8E,WACbnG,KAAO2B,cAActD,8CAAuC6H,iBAC5DpB,KAAO5G,KAAK6G,WACZU,SAAWX,KAAK1F,IAAM0F,KAAK7F,MAC/B6F,KAAK7F,MAAU8G,MAAMpD,WAAWG,MAAQ,mBAAE,wBAAwBtC,QAAUkB,KAAK8D,UAC3E9D,KAAKzC,MACX6F,KAAK7F,MAAQyC,KAAK7D,WAAWiH,KAAK7F,OAClC6F,KAAK1F,IAAM0F,KAAK7F,MAAQwG,SACxBzF,KAAKV,KAAK,aAAcwF,KAAK7F,OAC7Be,KAAKV,KAAK,WAAYwF,KAAK1F,KAC3B2G,MAAMzG,KAAK,aAAcwF,KAAK7F,OAC9B8G,MAAMzG,KAAK,WAAYwF,KAAK1F,KAC5BlB,KAAK6G,WAAaD,KAClBzD,MAAM8E,WAAajI,QAEvBiH,UAAYA,UAAUf,KAAI,kBACf,mBAAEjG,MAAMgB,KAAK,WACrBmH,MACHC,aAAapB,WACbqB,YAAYnF,MAAO8D,WAAW,0BAIpC,6BAA6BsB,UAAU,SAC1B,mBACI,cACP,CAAC,EAAG,SACH5G,kBAEA,mBAAE1B,MAAM8B,SAAS,+BAChB9B,MAAM+G,QAAQ,aAEhBC,WAAY,mBAAE,oCAClBA,UAAUC,SAAS,qBACnBD,UAAUnG,MAAK,+BACTb,MAAMgB,KAAK,iBAAiB,mBAAEhB,MAAMgB,KAAK,8BACzChB,MAAMgB,KAAK,eAAe,mBAAEhB,MAAMgB,KAAK,WAE7CkG,oBAAmB,mBAAElH,MAAMgB,KAAK,8BAC9B,mBAAmBiG,SAAS,6BAExBvF,eAAelB,EAAG2G,QACpBC,UAAY,EACZD,GAAGO,iBAAiB/C,MAAQwC,GAAG3C,SAASG,MAAQwC,GAAGoB,aAAalG,OAAS8E,GAAGqB,KAAKnG,OAC7E8E,GAAG3C,SAASG,KAAO,IACnBwC,GAAG3C,SAASG,KAAO,GAEvByC,UAAcD,GAAG3C,SAASG,MACpB,mBAAE,wBAAwBtC,QAAWkB,KAAK8D,UAAY9D,KAAKzC,OAEjEsG,WAAcD,GAAG3C,SAASG,KAAOwC,GAAGqB,KAAKnG,QACnC,mBAAE,wBAAwBA,QAAWkB,KAAK8D,UAAY9D,KAAKzC,UAGjE6D,MAAQyC,UAAY7D,KAAKzC,OAASyC,KAAK8D,UAAY,wBACrD,cAAcnG,IAAI,sBAAgByD,sCAClC,oBAAoBzD,IAAI,iBAAWyD,+BACnC,yBAAyBG,KAAKnB,qBAAqByD,gBAEjDqB,SAAatB,GAAG3C,SAASG,MAAQ,mBAAE,wBAAwBtC,QAAWkB,KAAK8D,UACzE9D,KAAKzC,MACP4H,QAAWvB,GAAG3C,SAASG,KAAOwC,GAAGqB,KAAKnG,QAAS,mBAAE,wBAAwBA,QACvEkB,KAAK8D,UAAY9D,KAAKzC,0BAC1B,eAAegE,KAAKnB,qBAAqB8E,+BACzC,eAAe3D,KAAKnB,qBAAqB+E,aAGvCnB,UAAYhE,KAAKrB,OAAO8D,iBACxBwB,aAAehE,cAActD,+CAAuC,mBAAEF,MAAMgB,KAAK,eACjFyH,UAAYlB,KAAOmB,QAAUnB,IAC7BC,aAAatG,IAAI,aAAc,WAE/BsG,aAAatG,IAAI,aAAc,cAI/ByH,eAAiBxB,GAAG3C,SAASG,MAAO,mBAAE,wBAAwBtC,QAAU,IACxEuG,SAAWzB,GAAGqB,KAAKnG,OAAQ,mBAAE,wBAAwBA,QAAU,KACnD,mBAAE,oCAAoCsF,IAAI3H,MAChDa,MAAK,eACP+G,OAAQ,mBAAE5H,MACd4H,MAAM1G,IAAI,MACEyH,eAAiB,UAChBC,SAAW,MAGxBhB,MAAMzG,KAAK,aAAcsH,UACzBb,MAAMzG,KAAK,WAAYuH,YACnBlB,aAAehE,cAActD,8CAAuC0H,MAAM5G,KAAK,eAC/EyH,UAAYlB,KAAOmB,QAAUnB,IAC7BC,aAAatG,IAAI,aAAc,WAE/BsG,aAAatG,IAAI,aAAc,mBAInCQ,eAAelB,EAAG2G,IACtBU,YAAW,+BACL,gCAAgCjF,6BAChC,mBAAmBkF,YAAY,uBAClC,SACCW,SAAatB,GAAG3C,SAASG,MAAQ,mBAAE,wBAAwBtC,QAAWkB,KAAK8D,UACzE9D,KAAKzC,MACP4H,QAAWvB,GAAG3C,SAASG,KAAOwC,GAAGqB,KAAKnG,QAAS,mBAAE,wBAAwBA,QACvEkB,KAAK8D,UAAY9D,KAAKzC,UACxBkG,WAAY,mBAAE,oCAClBA,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MACV+H,UAAYH,MAAM5G,KAAK,QACvBgH,UAAY9E,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAM2G,YACzChI,KAAOmD,MAAM8E,WACbnG,KAAO2B,cAActD,8CAAuC6H,iBAC5DpB,KAAO5G,KAAK6G,WAChBD,KAAK7F,MAAQyC,KAAK7D,WAAW+I,UAC7B9B,KAAK1F,IAAMsC,KAAK7D,WAAWgJ,QAC3B7G,KAAKV,KAAK,aAAcwF,KAAK7F,OAC7Be,KAAKV,KAAK,WAAYwF,KAAK1F,KAC3B2G,MAAMzG,KAAK,aAAcwF,KAAK7F,OAC9B8G,MAAMzG,KAAK,WAAYwF,KAAK1F,KAC5BlB,KAAK6G,WAAaD,KAClBzD,MAAM8E,WAAajI,QAEvBiH,UAAYA,UAAUf,KAAI,kBACf,mBAAEjG,MAAMgB,KAAK,WACrBmH,MACHC,aAAapB,WACbqB,YAAYnF,MAAO8D,WAAW,0CAIxB,aAAc,CAACpG,KAAMmF,eAC5B,MAUbmB,mBAAsBtD,cACpBM,cAAgBP,qBAAqBC,SACrCiF,YAAa,mBAAE,cAAcC,QACjCD,WAAW1H,KAAK,KAAM,aACtB0H,WAAW3I,KAAK,eAAe0C,6BAC7B,mBAAmBS,OAAOwF,gCAC1B,eAAexF,wJAEXa,gCA4OJmE,YAAc3G,MAAOmE,SAAUkD,QAASC,gBACpCjD,kBAAoBxC,KAAKrB,OAAO8D,oBACjCgD,SACDxF,cAActD,4BAA4B0C,6BACxC,kCAAkCwD,SAGjB,GAAnBP,SAASH,OACLqD,SACAA,QAAQtC,SAASwC,SACbzF,cAActD,8CAAuC+I,cAAYhC,SAAS,iBAG/E,CAEHpB,SAASQ,MAAK,CAACC,EAAGC,IAAMxF,OAAOwF,EAAE/B,SAAS,YAAczD,OAAOuF,EAAE9B,SAAS,eAC1EqB,SAAWA,SAASqD,QAAOnJ,MAAQA,KAAK6G,WAAW9F,OAASyC,KAAKtC,KAAOlB,KAAK6G,WAAW3F,KAAOsC,KAAKzC,SAC3FmF,KAAIlG,WACLe,MAAQf,KAAK6G,WAAW9F,MACxBG,IAAMlB,KAAK6G,WAAW3F,WACtBH,MAAQyC,KAAKzC,QACbA,MAAQyC,KAAKzC,OAEbG,IAAMsC,KAAKtC,MACXA,IAAMsC,KAAKtC,KAGflB,KAAK6G,WAAW9F,MAAQA,MACxBf,KAAK6G,WAAW3F,IAAMA,IAEflB,YAKPyG,MAAQ,EACZX,SAASY,SAAQ/E,MAAAA,WACTiF,KAAO5G,KAAK6G,WACZxG,KAAOL,KAAKK,KACZgB,GAAKrB,KAAKqB,GACVoD,SAAWzE,KAAKyE,SAChB2E,SAAU,yEAAiD3E,SAASW,+BAAsBwB,KAAK7F,mDACtF6F,KAAK1F,6BAAoBd,WAAWiB,2BAAkBA,2BAAkBhB,0BAC/D,KAAlBuG,KAAK2B,WAAoB/E,KAAKlD,gBAC9B8I,QAAQlC,SAAS,aACjBkC,QAAQhI,KAAK,WAAY,IAErBf,UACC,QAzRD,EAAC+I,QAASpJ,KAAM4G,KAAMvF,GAAIoD,gBACtC4E,MAAQzC,KAAKS,UAAUiC,MAAM,KAC7BjC,UAA+B,KAAnBrG,OAAOqI,MAAM,IAAgC,GAAnBrI,OAAOqI,MAAM,IAAWrI,OAAOqI,MAAM,IAC3D,IAAhBzC,KAAK2C,QACLH,QAAQ9F,0BAAmBsD,KAAK2C,+CAAsC3C,KAAK4C,qBAAYnI,0EAC7B,KAAfuF,KAAK6C,OAAgB,SAAW,0CAChD,GAAhB7C,KAAK9C,QAAe,6BAA+B,oBAAW8C,KAAK8C,6BAE9EN,QAAQ9F,2BAAoBsD,KAAK4C,qBAAYnI,8CAC9BgG,UAAY,EAAI,oBAAsBA,UAAY,IAAM,8EACR,KAAfT,KAAK6C,OAAgB,SAAW,8CAChEpC,UAAY,EAAI,iBAAmB,gDAClB,GAAhBT,KAAK9C,QAAe,6BAA+B,oBAAW8C,KAAK8C,yBAEnFlG,KAAKlD,eACc,IAAhBsG,KAAK2C,SAA8B,GAAblC,WACtB+B,QAAQrB,YAAY,aACpBqB,QAAQlC,SAAS,eAEjBkC,QAAQlC,SAAS,cAGzBkC,QAAQjI,IAAIsD,UACZ2E,QAAQjI,IAAI,SAAU,QACtBsC,cAAcH,OAAO8F,UAkQLO,CAAYP,QAASpJ,EAAM4G,KAAMvF,GAAIoD,oBAEpC,OAjQF,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,gBACrCmF,YACJA,6BAAwBvI,gDACHuF,KAAKhB,kBAAyB,KAAhBgB,KAAK9C,QAAiB,cAAgB,4EACjB,KAAf8C,KAAK6C,OAAgB,SAAW,kCAAyB7C,KAAK4C,+FACb,IAAvB5C,KAAKiD,2DAC3BjD,KAAKiD,gBAAmB,WACrET,QAAQ9F,2CAAoCsG,uBAC5CnF,SAASnC,MAAQ,EACjB8G,QAAQjI,IAAIsD,UACZhB,cAAcH,OAAO8F,SACrB/D,sBAAsB+D,SAAS,IAuPfU,CAAWV,QAASpJ,EAAM4G,KAAMvF,GAAIoD,oBAEnC,aAtPI,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,gBAC3C4E,MAAQzC,KAAKS,UAAUiC,MAAM,KAC7BjC,UAA+B,KAAnBrG,OAAOqI,MAAM,IAAgC,GAAnBrI,OAAOqI,MAAM,IAAWrI,OAAOqI,MAAM,IAE/ED,QAAQ9F,qDAA8CjC,kEAC5BuF,KAAKhB,kBAAyB,KAAhBgB,KAAK9C,QAAiB,cAAgB,kFAChB,KAAf8C,KAAK6C,OAAgB,SAAW,4DAC9CpC,uBAAcT,KAAKiD,iCAEpDpF,SAASnC,MAAQ,EAEjB8G,QAAQjI,IAAIsD,UACZhB,cAAcH,OAAO8F,SACrB/D,sBAAsB+D,SAAS,IA0OfW,CAAiBX,QAASpJ,EAAM4G,KAAMvF,GAAIoD,oBAEzC,OAzOF,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,YACzBuF,MAAZpD,KAAK4C,KAAgC,IAAZ5C,KAAK4C,IAC9BJ,QAAQ9F,wBAAiBjC,4EACmC,KAAfuF,KAAK6C,OAAgB,cAAgB,qDACpE7C,KAAK4C,iCAAwB5C,KAAKiD,yBAE3CrG,KAAKlD,eAAiB,mBAAE,mBAAmByB,SAAS,sBACrDqH,QAAQlC,SAAS,cAErBkC,QAAQ9F,0BAAmBjC,4EACiC,KAAfuF,KAAK6C,OAAgB,cAAgB,uCACzE7C,KAAKiD,2BAElBT,QAAQ3E,SAASnC,MAAQ,EACzB8G,QAAQjI,IAAIsD,cACRmB,MAAQ,eACoB,KAAbgB,KAAKqD,KAAc,OAAS,sBACd,KAAfrD,KAAKsD,OAAgB,SAAW,2BACT,KAAlBtD,KAAKuD,UAAmB,YAAc,aAChDvD,KAAKwD,qBACAxD,KAAKyD,uBACHzD,KAAK0D,2BACL1D,KAAK2D,2BACL,sBACgB,IAAjB3D,KAAK4D,SAAiB5D,KAAK4D,SAAW,WAEzDpB,QAAQjJ,KAAK,uBAAuBgB,IAAIyE,OACxCnC,cAAcH,OAAO8F,SACrB/D,sBAAsB+D,UA8MNqB,CAAWrB,QAASpJ,EAAM4G,KAAMvF,GAAIoD,oBAEnC,YA7MG,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,gBAC1CiG,UAAY9D,KAAKiD,eAAeP,MAAM,QACtCqB,UAAY,mCAChBD,UAAUhE,SAASkE,OACI,IAAfA,KAAKC,SAGTF,4DAAuD/D,KAAKkE,qEACZ,IAAjBlE,KAAK4D,SAAiB5D,KAAK4D,SAAW,uBAAcI,oBAEvFD,WAAa,SACGX,MAAZpD,KAAK4C,KAAgC,IAAZ5C,KAAK4C,KAC9BJ,QAAQ9F,wBAAiBjC,gFACuC,KAAfuF,KAAK6C,OAAgB,cAAgB,qDAChE7C,KAAK4C,iCAAwBmB,mBACnDvB,QAAQlC,SAAS,eAEZ1D,KAAKlD,eAAiB,mBAAE,mBAAmByB,SAAS,sBACrDqH,QAAQlC,SAAS,cAErBkC,QAAQ9F,0BAAmBjC,wEAC6B,KAAfuF,KAAK6C,OAAgB,cAAgB,+CAC7DkB,sBAErBvB,QAAQ3E,SAASnC,MAAQ,EACzB8G,QAAQjI,IAAIsD,cACRmB,MAAQ,aACK5F,KAAKyE,SAASe,uBACZxF,KAAKyE,SAASsG,yBACD,KAAbnE,KAAKqD,KAAc,OAAS,sBACd,KAAfrD,KAAKsD,OAAgB,SAAW,2BACT,KAAlBtD,KAAKuD,UAAmB,YAAc,aAChDvD,KAAKwD,qBACAxD,KAAKyD,wBACc,KAAhBzD,KAAK9C,QAAiB,QAAU,mBACjC8C,KAAK0D,2BACL1D,KAAK2D,2BACL,SAEpBnB,QAAQjJ,KAAK,uBAAuBgB,IAAIyE,OACxCnC,cAAcH,OAAO8F,SACrB/D,sBAAsB+D,SAAS,GAAO,IAqKtB4B,CAAgB5B,QAASpJ,KAAM4G,KAAMvF,GAAIoD,oBAExC,QApKD,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,gBACtC4E,MAAQzC,KAAKS,UAAUiC,MAAM,KAC7BjC,UAA+B,KAAnBrG,OAAOqI,MAAM,IAAgC,GAAnBrI,OAAOqI,MAAM,IAAWrI,OAAOqI,MAAM,IAC3D,IAAhBzC,KAAK2C,SACLH,QAAQ9F,0BAAmBsD,KAAK2C,8CAAqClI,oEACjB,KAAfuF,KAAK6C,OAAgB,SAAW,kFAErEL,QAAQlC,SAAS,eAEZ1D,KAAKlD,eACW,GAAb+G,UACA+B,QAAQlC,SAAS,cAEjBkC,QAAQlC,SAAS,cAGzBkC,QAAQ9F,0BAAmBjC,0CAAgD,KAAfuF,KAAK6C,OAAgB,SAAW,6CAC7EpC,UAAY,EAAI,iBAAmB,0CACvCA,UAAY,EAAI,mBAAqBA,UAAY,IAAM,6EAGtE+B,QAAQjI,IAAIsD,cACRmB,MAAQ,YACMgB,KAAKyD,uBACHzD,KAAK0D,2BACL1D,KAAK2D,2BACL,gBACL3D,KAAKqE,QAAU,KAEZ,UAAdrE,KAAKsE,MACLtF,MAAM,iBAAmB,MACJ,aAAdgB,KAAKsE,QACZtF,MAAM,iBAAmC,KAAhBgB,KAAK9C,QAAiB,MAAQ,KAE3DsF,QAAQjJ,KAAK,uBAAuBgB,IAAIyE,OACxCnC,cAAcH,OAAO8F,UAkIL+B,CAAY/B,QAASpJ,EAAM4G,KAAMvF,GAAIoD,oBAEpC,UAjIC,EAAC2E,QAASpJ,KAAM4G,KAAMvF,GAAIoD,YAC5C2E,QAAQ9F,0BAAmBjC,yEAC3BoD,SAAS,gBAAkB,IAC3B2E,QAAQjI,IAAIsD,cACRmB,MAAQ,oBACYgB,KAAKwE,cACdxE,KAAKqE,QAAU,oBACT,qBACD,KAEpB7B,QAAQjJ,KAAK,uBAAuBgB,IAAIyE,OACxCnC,cAAcH,OAAO8F,SAEhB5F,KAAKlD,eACe,KAAjBsG,KAAKyE,SACLjC,QAAQhI,KAAK,eACM,WAGnBgI,QAAQhI,KAAK,WACI,iBACG,yBACC,4BACC,mBACL,sBACG,0CACFwF,KAAK0E,6JAKvBlC,QAAQmC,QAAQ,CACZC,UAAW,WACXpI,MAAM,EACNqI,mEAA6DpK,uQAGE,IAAZuF,KAAK4C,6EACkB5C,KAAK4C,wMAEX,eAGxEJ,QAAQ5I,GAAG,oBAAoBmB,qBACvB+J,OAAQ,yCAAiBrK,4BACvB+B,WAAaI,KAAKmI,cAAc/E,KAAKrF,QAAQwD,KAAMhC,EAAE6I,IAAIC,WAC/DH,MAAMtI,KAAKA,6CACEsI,OACbtC,QAAQmC,QAAQ,aAEM,KAAtB3E,KAAKkF,eACL1C,QAAQmC,QAAQ,WA+EZQ,CAAc3C,QAASpJ,EAAM4G,KAAMvF,GAAIoD,UAInC,SAARpE,MACA+I,QAAQ5I,GAAG,aAAa,gBACf,mBAAEP,MAAM8B,SAAS,wBAIlBiK,aACA,mBAAE/L,MAAME,KAAK,uBAAuBmC,SAAU,mBAAErC,MAAME,KAAK,uBAAuBoC,SAClF6G,QAAQ9G,QAAU8G,QAAQ7G,UAAYyJ,aAAwB,SAAR3L,0BACpDJ,MAAMsC,OAAQ6G,QAAQ9G,QAAU0J,iCAEpC/L,MAAMsI,UAAU,SAAU,eAAe,mBAAEtI,MAAME,KAAK,uBAAuBmE,cAC3E,mBAAErE,MAAME,KAAK,uBAAuBqE,kBAIhDiC,QAEIA,OAASX,SAASH,6CAEJ,aAAc,CAAC9E,KAAM2C,KAAK7D,WAAWqG,eAE/CxC,KAAKlD,eACuC,IAAxC,mBAAE,oBAAoB2L,GAAG,aACzBxI,cAActD,KAAK,uBAAuB+G,SAAS,cAGvDzD,cAActD,KAAK,uBAAuB4G,UAAU,CAChDmF,YAAa,qBACbC,OAAQ,OACRC,KAAM,CAAC,EAAG,GACVC,OAAQ,sBACRtL,MAAO,WACHuL,UAAS,IAEJ,mBAAErM,MAAM8B,SAAS,+BAChB9B,MAAM+G,QAAQ,aAEhBC,UAAYxD,cAActD,KAAK,8BACnC8G,UAAUC,SAAS,cACnBD,UAAUnG,MAAK,+BACTb,MAAMgB,KAAK,iBAAiB,mBAAEhB,MAAMwE,gBAG9C8H,KAAM,SAASC,MAAOpF,QACdH,UAAYxD,cAActD,KAAK,8BAC/ByE,KAAOwC,GAAGO,iBAAiB/C,KAAOwC,GAAG3C,SAASG,KAC9CF,IAAM0C,GAAGO,iBAAiBjD,IAAM0C,GAAG3C,SAASC,IAC5C+H,UAAYxF,UAAUf,KAAI,iBACnB,CACH7E,IAAI,mBAAEpB,MAAMgB,KAAK,QACjB2D,MAAM,mBAAE3E,MAAMwE,WAAWG,KACzBF,KAAK,mBAAEzE,MAAMwE,WAAWC,IACxBgI,QAAQ,mBAAEzM,MAAMwE,WAAWC,KAAM,mBAAEzE,MAAMsC,SACzCoK,OAAO,mBAAE1M,MAAMwE,WAAWG,MAAO,mBAAE3E,MAAMqC,YAE9C8F,SAECqE,UAAUtM,MAAKgI,GAAKA,EAAEvD,KAAO,IAAI,CAEjC6H,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAE3B,KAAO4B,EAAE5B,WAEhCvD,GADSoL,UAAUtM,MAAKgI,GAAKA,EAAEvD,KAAO,IAC1BvD,GACZuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,OAAQ,OACfuG,SAAWkF,OAAO3L,KAAK,iBAAiB2D,KAC5CwC,GAAG3C,SAASG,KAAOwC,GAAGO,iBAAiB/C,KAAO8C,SAC9C9C,KAAOwC,GAAGO,iBAAiB/C,KAAOwC,GAAG3C,SAASG,QAG9C6H,UAAUtM,MAAKgI,GAAKA,EAAEzD,IAAM,IAAI,CAChC+H,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAE7B,IAAM8B,EAAE9B,UAE/BrD,GADQoL,UAAUtM,MAAKgI,GAAKA,EAAEzD,IAAM,IACzBrD,GACXuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,MAAO,OACduG,SAAWkF,OAAO3L,KAAK,iBAAiByD,IAC5C0C,GAAG3C,SAASC,IAAM0C,GAAGO,iBAAiBjD,IAAMgD,SAC5ChD,IAAM0C,GAAGO,iBAAiBjD,IAAM0C,GAAG3C,SAASC,OAG5C+H,UAAUtM,MAAKgI,GAAKA,EAAEwE,OAAQ,mBAAE,sBAAsBrK,UAAU,CAChEmK,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAEoG,MAAQnG,EAAEmG,YAEjCtL,GADUoL,UAAUtM,MAAKgI,GAAKA,EAAEwE,OAAQ,mBAAE,sBAAsBrK,UACnDjB,GACbuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,QAAS,mBAAE,sBAAsBmB,QAAUsK,OAAOtK,QAAU,EAAK,UACxEoF,SAAWkF,OAAO3L,KAAK,iBAAiB2D,KAAOgI,OAAOnI,WAAWG,KACrEwC,GAAG3C,SAASG,KAAOwC,GAAGO,iBAAiB/C,KAAO8C,SAC9C9C,KAAOwC,GAAGO,iBAAiB/C,KAAOwC,GAAG3C,SAASG,QAG9C6H,UAAUtM,MAAKgI,GAAKA,EAAEuE,QAAS,mBAAE,sBAAsBnK,WAAW,CAClEkK,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAEmG,OAASlG,EAAEkG,aAElCrL,GADWoL,UAAUtM,MAAKgI,GAAKA,EAAEuE,QAAS,mBAAE,sBAAsBnK,WACpDlB,GACduL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,OAAQ,mBAAE,sBAAsBoB,SAAWqK,OAAOrK,SAAW,EAAK,UACzEmF,SAAWkF,OAAO3L,KAAK,iBAAiByD,IAAMkI,OAAOnI,WAAWC,IACpE0C,GAAG3C,SAASC,IAAM0C,GAAGO,iBAAiBjD,IAAMgD,SAC5ChD,IAAM0C,GAAGO,iBAAiBjD,IAAM0C,GAAG3C,SAASC,IAGhDuC,UAAUW,IAAI3H,MAAMa,MAAK,eACjB+G,OAAQ,mBAAE5H,MACVwE,SAAWoD,MAAM5G,KAAK,iBAC1B4G,MAAM1G,IAAI,CACNyD,KAAOH,SAASG,KAAOA,KAAQ,KAC/BF,IAAMD,SAASC,IAAMA,IAAO,UAGpCN,oBAAmB,mBAAEnE,QAEzB4M,KAAM,eACE5F,UAAYxD,cAActD,KAAK,kCAC/BsM,UAAYxF,UAAUf,KAAI,iBACnB,CACH7E,IAAI,mBAAEpB,MAAMgB,KAAK,QACjB2D,MAAM,mBAAE3E,MAAMwE,WAAWG,KACzBF,KAAK,mBAAEzE,MAAMwE,WAAWC,IACxBgI,QAAQ,mBAAEzM,MAAMwE,WAAWC,KAAM,mBAAEzE,MAAMsC,SACzCoK,OAAO,mBAAE1M,MAAMwE,WAAWG,MAAO,mBAAE3E,MAAMqC,YAE9C8F,SAECqE,UAAUtM,MAAKgI,GAAKA,EAAEvD,KAAO,IAAI,CACjC6H,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAE3B,KAAO4B,EAAE5B,WAEhCvD,GADSoL,UAAUtM,MAAKgI,GAAKA,EAAEvD,KAAO,IAC1BvD,GACZuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,OAAQ,OACfuG,SAAWkF,OAAO3L,KAAK,iBAAiB2D,KAC5CqC,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MAEV6M,QADWjF,MAAM5G,KAAK,iBACH2D,KAAO8C,SAC9BG,MAAM1G,IAAI,OAAQ2L,QAAU,YAIhCL,UAAUtM,MAAKgI,GAAKA,EAAEzD,IAAM,IAAI,CAChC+H,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAE7B,IAAM8B,EAAE9B,UAE/BrD,GADQoL,UAAUtM,MAAKgI,GAAKA,EAAEzD,IAAM,IACzBrD,GACXuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,MAAO,OACduG,SAAWkF,OAAO3L,KAAK,iBAAiByD,IAC5CuC,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MAEV8M,OADWlF,MAAM5G,KAAK,iBACJyD,IAAMgD,SAC5BG,MAAM1G,IAAI,MAAO4L,OAAS,YAI9BN,UAAUtM,MAAKgI,GAAKA,EAAEwE,OAAQ,mBAAE,sBAAsBrK,UAAU,CAChEmK,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAEoG,MAAQnG,EAAEmG,YAEjCtL,GADUoL,UAAUtM,MAAKgI,GAAKA,EAAEwE,OAAQ,mBAAE,sBAAsBrK,UACnDjB,GACbuL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,QAAS,mBAAE,sBAAsBmB,QAAUsK,OAAOtK,QAAU,EAAK,UACxEoF,SAAWkF,OAAO3L,KAAK,iBAAiB2D,KAAOgI,OAAOnI,WAAWG,KACrEqC,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MAEV6M,QADWjF,MAAM5G,KAAK,iBACH2D,KAAO8C,SAC9BG,MAAM1G,IAAI,OAAQ2L,QAAU,YAIhCL,UAAUtM,MAAKgI,GAAKA,EAAEuE,QAAS,mBAAE,sBAAsBnK,WAAW,CAClEkK,UAAUnG,MAAK,CAACC,EAAGC,IAAMD,EAAEmG,OAASlG,EAAEkG,aAElCrL,GADWoL,UAAUtM,MAAKgI,GAAKA,EAAEuE,QAAS,mBAAE,sBAAsBnK,WACpDlB,GACduL,OAASnJ,cAActD,8CAAuCkB,UAClEuL,OAAOzL,IAAI,OAAQ,mBAAE,sBAAsBoB,SAAWqK,OAAOrK,SAAW,EAAK,UACzEmF,SAAWkF,OAAO3L,KAAK,iBAAiByD,IAAMkI,OAAOnI,WAAWC,IACpEuC,UAAUnG,MAAK,eACP+G,OAAQ,mBAAE5H,MAEV8M,OADWlF,MAAM5G,KAAK,iBACJyD,IAAMgD,SAC5BG,MAAM1G,IAAI,MAAO4L,OAAS,SAIlCT,UAAS,GACTrF,UAAYA,UAAUf,KAAI,kBACf,mBAAEjG,MAAMgB,KAAK,WACrBmH,MACHC,aAAapB,WACW,GAApBA,UAAUtB,4BACR1F,MAAM+G,QAAQ,SAEpBvD,cAActD,KAAK,uBAAuB4H,YAAY,iBAI9DtE,cAActD,KAAK,uBAAuBoI,UAAU,CAChD2D,YAAa,qBACbc,QAAS,MACTZ,KAAM,CAAC,EAAG,GACVa,UAAW,EACXC,OAAQ,SAASV,WACTnM,MAAO,mBAAEJ,MAAMgB,KAAK,QACZ,QAARZ,MAA0B,cAARA,MAAgC,aAARA,KAC1CgF,uBAAsB,mBAAEpF,MAAe,aAARI,KAA6B,aAARA,MACrC,SAARA,MAAmBmM,MAAMW,6BAC9BlN,MAAMsI,UAAU,SAAU,cAAe,GAE/CnE,oBAAmB,mBAAEnE,QAEzB4M,KAAM,eACExM,MAAO,mBAAEJ,MAAMgB,KAAK,QACZ,QAARZ,MAA0B,cAARA,MAAgC,aAARA,KAC1CgF,uBAAsB,mBAAEpF,MAAe,aAARI,KAA6B,aAARA,MACrC,SAARA,0BACLJ,MAAMsI,UAAU,SAAU,eAAe,GAE/CvD,mBAAkB,mBAAE/E,OACpBqM,UAAS,GACTjE,aAAa,EAAC,mBAAEpI,MAAMgB,KAAK,8BACzBhB,MAAM+G,QAAQ,kBAIlBnB,oBAAoBC,SAAUkD,6CACtB,aAAc,CAACnI,KAAM2C,KAAK7D,WAAWqG,iBAIvDgD,SAAWA,QAAQlC,SAASzF,MAC5B+H,QAAQlC,SAAS,UACK,GAAlB8B,QAAQrD,QACRmC,YAAW,WACPsB,QAAQpC,QAAQ,aAChBoC,QAAQpC,QAAQ,WACjB,SAMVxD,KAAKlD,eACNmD,cAAcjD,GAAG,+BAAgC,SAASC,GACtDA,EAAE2M,+BACEhE,SAAU,mBAAEnJ,aACLmJ,QAAQnI,KAAK,aAEf,iBACA,YACA,YACGoM,WAAajE,QAAQjJ,KAAK,uBAC1BqD,KAAK8J,qBAAqBD,WAAWpM,KAAK,gBAC1CuC,KAAKrB,OAAOoL,KAAKF,WAAWpM,KAAK,cACjCuC,KAAKrB,OAAOqL,kBAGf,UACDhK,KAAKrB,OAAOsL,YACRC,UAAYtE,QAAQnI,KAAK,QACzB0M,QAAUxK,MAAMhD,MAAKgI,GAAKA,EAAE9G,IAAMqM,eAEpB,SADDtE,QAAQnI,KAAK,UACH,KACnB2M,MAAQD,QAAQ9G,WAAWyE,eAC3B/J,QAAUoM,QAAQ9G,WAAWtF,QAAQwD,KACrCyE,IAAMmE,QAAQ9G,WAAW2C,IACzBqE,+nBAM6CD,ijBAQxC,IAAPpE,uHACaA,mKAC2C,uJAIxD,YAAYlG,OAAOuK,2BACnB,qBAAqBA,MAAM,4BAC3B,qBAAqBrN,GAAG,iBAAiB,+BACrC,qBAAqBqC,gCAEzB,qBAAqBrC,GAAG,kBAAkBmB,qCACtC,iCAAiCmM,OAAO,SACtCpC,OAAQ,mBAAE,uCACRtI,WAAaI,KAAKmI,cAAcpK,QAASwB,EAAE6I,IAAIC,WACrDH,MAAMtI,KAAKA,6CACEsI,eAGjBtC,QAAQmC,QAAQ,YAMhC7H,eAAelD,GAAG,4BAA6B,SAASC,GACpDA,EAAE2M,+CACAnN,MAAM8N,QAAQ,YAAYlL,mBAOxCJ,SAAWlC,SAASmC,cAAc,kBACjB,IAAIC,gBAAe,SAChCqL,iBAAkB,yCAAwB7N,4BAChB,GAA1B6N,gBAAgBrI,SAGpBqI,gBAAgBlN,MAAK,eACbT,MAAO,mBAAEJ,MAAMgB,KAAK,QACxB6G,YAAW,KACK,QAARzH,MAA0B,cAARA,MAAgC,aAARA,MAC1CgF,uBAAsB,mBAAEpF,MAAe,aAARI,KAA6B,aAARA,QAEzD,4BAEL,sBAAsBc,IAAI,aAAa,mBAAE,sBAAsBmB,QAAU,GAAK,UAErEM,QAAQH,cAInBU,MAAQ,GACR8K,SAAW,GACXC,cAAgB,EACF,IAAdjN,KAAKkC,OAA8B,OAAflC,KAAKkC,QACzBA,MAAQgL,KAAKC,MAAMnN,KAAKkC,OACxB8K,SAASI,KAAK,CACVlL,MAAOgL,KAAKG,UAAUnL,OACtB6F,QAAS,KACT3B,UAAW7D,KAAKzC,aAGpBwN,YAActN,KAAKsN,eAEvBjG,YAAYnF,MAAO,MAAM,IAGpBK,KAAKlD,0BAQJ+H,aAAgBW,UACdkF,cAAgBD,SAAStI,OAAS,IAElCsI,SAAWA,SAASO,MAAM,EAAGN,cAAgB,IAEjDD,SAASI,KAAK,CACVlL,MAAOgL,KAAKG,UAAUnL,OACtB6F,QAASA,QACT3B,UAAW7D,KAAKrB,OAAO8D,iBACvBwI,IAAI,IAAIC,MAAOC,YAEnBV,SAAS3H,MAAK,CAACC,EAAGC,IAAMD,EAAEkI,GAAKjI,EAAEiI,KACjCP,cAAgBD,SAAStI,OAAS,sBAChC,0BAA0BiJ,WAAW,gCACrC,0BAA0BxN,KAAK,WAAY,YACtB,GAAnB6M,SAAStI,4BACP,0BAA0BvE,KAAK,WAAY,aAU/CyN,iBAAmB,CAACC,IAAKC,SAC3BD,IAAMA,IAAI5I,KAAIiC,GAAKA,EAAE6G,iBACjBC,YAAc9L,MAAMgG,QAAOnJ,aACrBqB,GAAKrB,KAAKqB,GAAG2N,kBACZF,IAAIhI,SAASzF,aAEX,QAAT0N,MACAE,YAAY3I,MAAK,CAACC,EAAGC,IAAMA,EAAE/B,SAAS,WAAa8B,EAAE9B,SAAS,aAE9DwK,YAAY3I,MAAK,CAACC,EAAGC,IAAMD,EAAE9B,SAAS,WAAa+B,EAAE/B,SAAS,aAG3DwK,YAAY/I,KAAIlG,MAAQA,KAAKqB,MAQlC6N,YAAeC,UACE,GAAfA,KAAKxJ,cACE,MAEPmJ,IAAMK,KAAKjJ,KAAIlG,MAAQA,KAAKqB,KAC5B+N,OAASP,iBAAiBC,IAAK,QAC/BO,OAASF,KAAKhP,MAAKH,MAAQA,KAAKqB,IAAM+N,OAAO,KAAI3K,SAAS,kBACvDzD,OAAOqO,SAsBZ/C,SAAYgD,eACVC,SAAW,GACD9L,cAActD,4BACtBW,MAAK,SAAS0O,MAAOC,eACjBpO,IAAK,mBAAEoO,SAASxO,KAAK,YACvBjB,KAAO,OACC,mBAAEyP,SAASxO,KAAK,iBACZ+D,mBAAkB,mBAAEyK,WAEpCzP,KAAKqB,GAAKA,GACVrB,KAAK6G,WAAa1D,MAAMhD,MAAKgI,GAAKA,EAAE9G,IAAMA,KAAIwF,WAC1CyI,WACAtP,KAAKqB,IAAK,IAAIqN,MAAOC,UAAYa,0BAC/BC,SAASrO,KAAK,YAAapB,KAAKqB,KAEtCkO,SAASlB,KAAKrO,SAElBmD,MAAQoM,SACR5L,YAAc,SASZ+L,eAAiB,CAACC,QAAStP,KAAMuP,cAC3BvP,UACC,OACGuP,MACAD,QAAQlL,SAASlC,OAAS,OAC1BoN,QAAQlL,SAASnC,MAAQ,mBAG5B,YACGsN,MACAD,QAAQlL,SAASe,SAAW,OAC5BmK,QAAQlL,SAASsG,WAAa,kBAGjC,QACG6E,MACAD,QAAQlL,SAASlC,OAAS,QAC1BoN,QAAQlL,SAASnC,MAAQ,mBAG5B,QACDqN,QAAQlL,SAASlC,OAAS,iBAEzB,UACGqN,MACAD,QAAQlL,SAASnC,MAAQ,MAKrCa,MAAMkL,KAAKsB,SACXtH,aAAa,CAACsH,QAAQtO,KACtBiH,YAAYnF,MAAO,CAACwM,QAAQtO,KAAK,wBAGnCd,UAAUC,GAAG,QAAS,6BAA6B,SAASC,MAC1DA,EAAEoP,iBACFpP,EAAE2M,2BACF3J,cAActD,KAAK,uBAAuB4H,YAAY,UACjDtH,EAAE0M,SAAY1M,EAAEqP,SAKb,mBAAE7P,MAAM8B,SAAS,8BACf9B,MAAM8H,YAAY,8BAElB9H,MAAMiH,SAAS,cARK,KACtBc,WAAY,mBAAE/H,MAAMgB,KAAK,QAClBwC,cAActD,8CAAuC6H,iBAC3DhB,QAAQ,aASb+I,aAAc,0DACQ,GAAtBA,YAAYpK,2BACV,kCAAkCuB,SAAS,UAAU/F,IAAI,UAAW,uBACpE,cAAcC,KAAK,cAAe,IAAI8F,SAAS,UAAUa,YAAY,8BACrE,0BAA0B3G,KAAK,WAAY,gCAC3C,0BAA0BwN,WAAW,gBACpC,KACCoB,WAAaD,YAAY7J,KAAI,kBACtB,mBAAEjG,MAAMgB,KAAK,WACrBmH,MAEH4H,WAAWtJ,SAASrF,KAChBoC,cAActD,6CAAsCkB,SAAO6F,SAAS,iBAGpE+I,cAAgBxM,cAActD,KAAK,8BACvCI,SAASmC,cAAc,8BAA8BwN,4BACnD,cAAc9O,KAAK,cAAe4O,YAAY9I,SAAS,UAAUa,YAAY,UAC3EkI,cAActK,OAAS,uBACrB,0BAA0BvE,KAAK,WAAY,gCAC3C,8BAA8B8F,SAAS,gCAEvC,0BAA0B0H,WAAW,gCACrC,8BAA8B7G,YAAY,+BAG9C,kCAAkCA,YAAY,UAAU5G,IAAI,UAAW,2BAI/EZ,UAAUC,GAAG,WAAY,6BAA6B,SAASC,GAC7DA,EAAEoP,iBACFpP,EAAE2M,2BACF5J,KAAKrB,OAAOoL,MAAK,mBAAEtN,MAAMgB,KAAK,8CAChB,aAAc,CAACJ,MAAM,mBAAEZ,MAAMgB,KAAK,cAGpDyC,eAAelD,GAAG,kCAAmC,SAASC,GAC1DA,EAAE2M,2BACFd,UAAS,OAEL6D,WAAahC,KAAKG,UAAUnL,OAAOiN,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QACvEC,SAAW5M,cAAcxC,KAAK,sBAChCqP,KAAK,CACH9G,IAAKzG,EAAE6I,IAAI2E,QAAU,iCACrBC,OAAQ,OACRC,SAAU,OACVxP,KAAM,CACFyP,OAAQ,iBACRC,QAAS5N,EAAE6I,IAAI+E,QACftP,GAAIgP,SACJO,MAAO,UACP/E,UAAW9I,EAAE6I,IAAIC,UACjB0C,YAAaA,YACbsC,MAAOV,WACPW,KAAMtN,KAAKsN,KACXC,MAAOvN,KAAKuN,OAEhBC,QAAS,SAAS/P,UACVgQ,QAAU9C,KAAKC,MAAMnN,MACzB0C,YAAc,KACdsK,SAAW,uBACT,kDAAkD7M,KAAK,WAAY,gDACvD,oBAAqB,CAC/BhB,WAAY6Q,QACZP,OAAQ,gCAIlB,kCAAkC1J,QAAQ,gCAG9CzG,UAAU2Q,IAAI,0CAA2C1Q,GAAG,0CAA2C,SAASC,GAC9GA,EAAE2M,2BACiB,SAAfzJ,kCACawN,WACTpO,EAAEC,KAAKC,WAAW,gBAAiB,uBACnCF,EAAEC,KAAKC,WAAW,uBAAwB,uBAC1CF,EAAEC,KAAKC,WAAW,OAAQ,wBAC1B,+BAEM,0BAA0B+D,QAAQ,+DACAA,QAAQ,YAEhD,eAEQoK,SAAWnD,SAAS,GACxB9K,MAAQiO,SAASjO,MACjBmF,YAAYnF,MAAOiO,SAASpI,SAAS,GACrCrF,YAAc,KACdsK,SAAW,uBACT,kDAAkD7M,KAAK,WAAY,kEACjC4F,QAAQ,qDAI9BnE,6BACpB,kDAAkDwO,2BAClD,uCAAuClQ,IAAI,aAAc,+BACzD,mBAAmB4G,YAAY,yCAC/B,wBAAwBuJ,2BACxB,cAAcpK,SAAS,4BACvB,0CAA0CA,SAAS,cAAca,YAAY,cAIvFrE,eAAewN,IAAI,oCAAqC1Q,GAAG,oCAAqCmB,eAAelB,GAC3GA,EAAEoP,iBACFpP,EAAE2M,+BACEmE,OAAS9N,cAAcxC,KAAK,MAC5BZ,MAAO,mBAAEJ,MAAMmB,KAAK,kBACpBL,YAAcyC,KAAKrB,OAAO8D,iBAC1B/E,IAAMH,MAAQ,EAClBA,MAAQyQ,WAAWzQ,OAAO0Q,QAAQ,GAClCvQ,IAAMsQ,WAAWtQ,KAAKuQ,QAAQ,OAC1BC,OAAS,IAAIC,mBAAU,CACvBC,UAAW,gCAAiC,mBAAE3R,MAAMmB,KAAK,aACzDyQ,KAAM,CACFhG,UAAW9I,EAAE6I,IAAIC,UACjBxK,GAAI,EACJhB,KAAMA,KACNyR,aAAcP,OACdxQ,MAAOA,MACPG,IAAKA,KAET6Q,YAAa,CACTnE,MAAO7K,EAAEC,KAAKC,WAAW,sBAAuB,sBAC5CF,EAAEC,KAAKC,WAAW5C,KAAM,2BAIpCqR,OAAOL,OAEPK,OAAOM,iBAAiBN,OAAOO,OAAOC,QAAQ,KAC1CR,OAAO7D,MAAMA,MAAM9G,UAAU,CACzBsF,OAAQ,kBAEA,cAARhM,MAAgC,SAARA,MAA2B,SAARA,0BACzCE,UAAUC,GAAG,SAAU,6BAA6B,SAASC,GAC3DA,EAAEoP,qBACExG,OAAQ,mBAAEpJ,MAAMkS,MAAM7I,MAAM,KAC5BjC,UAA+B,KAAnBrG,OAAOqI,MAAM,IAAgC,GAAnBrI,OAAOqI,MAAM,IAAWrI,OAAOqI,MAAM,QAC1E7F,KAAK8J,qBAAqBjG,WAAY,KACnCpC,QAAUlC,EAAEC,KAAKC,WAAW,mCAAoC,sBAAuB,OAC9EO,KAAK4O,oBAAoB5O,KAAKzC,WAChCyC,KAAK4O,oBAAoB5O,KAAKtC,cAEzCsC,KAAK6O,gBAAgBpN,iCACnBhF,MAAMkS,KAAI,mBAAElS,MAAMmB,KAAK,0BAKzBoC,KAAK8O,gBAAgBjL,kBACrB7D,KAAK6O,gBAAgBtP,EAAEC,KAAKC,WAAW,qCACnC,gDACFhD,MAAMkS,KAAI,mBAAElS,MAAMmB,KAAK,6BAOzCsQ,OAAOM,iBAAiBN,OAAOO,OAAOM,gBAAiB9R,IACnDA,EAAE2M,2BACFd,UAAS,SACHkG,aAAetD,YAAY/L,WAC7ByB,KAAuB,IAAhB/E,KAAK4S,SACZ/N,IAAsB,IAAhB7E,KAAK4S,SACX9C,QAAU,KACJ,IAAIjB,MAAOC,eACTtO,cACI,OACC,WACDuE,KAAO,SACRF,IAAM,eACF8N,aAAe,cAEhB/R,EAAEG,QAEpB8O,eAAeC,QAAStP,MAAM,SAItCqD,eAAewN,IAAI,kCAAmC1Q,GAAG,kCAAmC,SAASC,GACjGA,EAAEoP,iBACFpP,EAAE2M,+BACEsF,QAAUjP,cAAcxC,KAAK,MAC7BiI,QAAS,mBAAE,cAAc9H,KAAK,eAClCkL,UAAS,OACLtM,KAAOmD,MAAMhD,MAAKgI,GAAKA,EAAE9G,IAAM6H,SAC/B7I,KAAOL,KAAKK,KACZsS,SAAWxE,KAAKC,MAAMD,KAAKG,UAAUtO,KAAK6G,aAC9C8L,SAAS9G,UAAY9I,EAAE6I,IAAIC,UAC3B8G,SAAStR,GAAKrB,KAAKqB,GACnBsR,SAASb,aAAeY,QACxBC,SAAStS,KAAOA,SACZuS,SAAW,IAAIjB,mBAAU,CACzBC,UAAW,gCACE,SAARvR,MAA2B,QAARA,KAAiB,QAAUA,MACnDwR,KAAMc,SACNZ,YAAa,CACTnE,MAAO7K,EAAEC,KAAKC,WAAW,uBAAwB,sBAC7CF,EAAEC,KAAKC,WAAW5C,KAAM,2BAIpCuS,SAASvB,OAETuB,SAASZ,iBAAiBY,SAASX,OAAOC,QAAQ,KAC9CU,SAAS/E,MAAMA,MAAM9G,UAAU,CAC3BsF,OAAQ,kBAEA,cAARhM,MAAgC,SAARA,MAA2B,SAARA,0BACzCE,UAAUC,GAAG,SAAU,6BAA6B,SAASC,GAC3DA,EAAEoP,qBACExG,OAAQ,mBAAEpJ,MAAMkS,MAAM7I,MAAM,KAC5BjC,UAA+B,KAAnBrG,OAAOqI,MAAM,IAAgC,GAAnBrI,OAAOqI,MAAM,IAAWrI,OAAOqI,MAAM,QAC1E7F,KAAK8J,qBAAqBjG,WAAY,KACnCpC,QAAUlC,EAAEC,KAAKC,WAAW,mCAAoC,uBAAwB,OAC/EO,KAAK4O,oBAAoB5O,KAAKzC,WAChCyC,KAAK4O,oBAAoB5O,KAAKtC,cAEzCsC,KAAK6O,gBAAgBpN,iCACnBhF,MAAMkS,KAAI,mBAAElS,MAAMmB,KAAK,0BAKzBoC,KAAK8O,gBAAgBjL,kBACrB7D,KAAK6O,gBAAgBtP,EAAEC,KAAKC,WAAW,qCAAsC,iDAC3EhD,MAAMkS,KAAI,mBAAElS,MAAMmB,KAAK,6BAOzCwR,SAASZ,iBAAiBY,SAASX,OAAOM,gBAAiB9R,IACvDA,EAAE2M,2BACFd,UAAS,GACTtM,KAAOmD,MAAMhD,MAAKgI,GAAKA,EAAE9G,IAAM6H,SAC/BlJ,KAAK6G,WAAapG,EAAEG,OAEpB6C,cAActD,8CAAuC+I,cAAYrG,SACjEM,MAAQA,MAAMgG,QAAOhB,GAAKA,EAAE9G,IAAM6H,SAClCwG,eAAe1P,KAAMK,MAAM,SAInCoD,cAAcyN,IAAI,+BAAgC1Q,GAAG,+BAAgC,SAASC,MAC1FA,EAAEoP,iBACFpP,EAAE2M,2BACF5J,KAAKrB,OAAOsL,QACPhN,EAAE0M,SAAY1M,EAAEqP,SAMb,mBAAE7P,MAAM8B,SAAS,8BACf9B,MAAM8H,YAAY,+BAElB9H,MAAMiH,SAAS,eACZgJ,UATTzM,cAActD,KAAK,uBAAuB4H,YAAY,8BACpD9H,MAAMiH,SAAS,eACZgJ,QACLlL,mBAAkB,mBAAE/E,SAUnB4S,OAAM,mBAAE5S,MAAMgB,KAAK,UAAW,KAC3BmE,OAAQ,mBAAEnF,MAAMgB,KAAK,SACzBwC,cAActD,+CAAwCiF,aAAW8B,SAAS,UAG9ElC,mBAAkB,mBAAE/E,uFAE0C8H,YAAY,cACtEkI,cAAgBxM,cAActD,KAAK,iCACX,GAAxB8P,cAActK,2BACZ,kCAAkCuB,SAAS,UAAU/F,IAAI,UAAW,uBACpE,cAAcC,KAAK,cAAe,IAAI8F,SAAS,UAAUa,YAAY,8BACrE,0BAA0B3G,KAAK,WAAY,gCAC3C,0BAA0BwN,WAAW,gBACpC,KACCoB,WAAaC,cAAc/J,KAAI,kBACxB,mBAAEjG,MAAMgB,KAAK,WACrBmH,MAEH4H,WAAWtJ,SAASrF,uGACyDA,UAAQ6F,SAAS,iCAG5F,cAAc9F,KAAK,cAAe4O,YAAY9I,SAAS,UAAUa,YAAY,UAC3EkI,cAActK,OAAS,uBACrB,0BAA0BvE,KAAK,WAAY,gCAC3C,wBAAwB8F,SAAS,gCAEjC,0BAA0B0H,WAAW,gCACrC,wBAAwB7G,YAAY,+BAExC,kCAAkCA,YAAY,UAAU5G,IAAI,UAAW,OAIzE2R,SAAW7C,cAAc/J,KAAI,kBACtB,mBAAEjG,MAAMgB,KAAK,YACrBmH,MAEH0K,SAAW,IAAI,IAAIC,IAAID,WAEnB7C,cAActK,OAAS,sBACrB,sDAAsDvE,KAAK,WAAY,YAAY8F,SAAS,UAEvE,GAAnB4L,SAASnN,OACU,aAAfmN,SAAS,wBACP,6BAA6B1R,KAAK,WAAY,YAAY8F,SAAS,8BACnE,2BAA2B0H,WAAW,YAAY7G,YAAY,gCAE9D,6BAA6B6G,WAAW,YAAY7G,YAAY,8BAChE,2BAA2B3G,KAAK,WAAY,YAAY8F,SAAS,WAEhE4L,SAASnN,OAAS,uBACvB,sDAAsDiJ,WAAW,YAAY7G,YAAY,aAMvGtE,cAAcjD,GAAG,WAAY,uBAAuB,SAASC,GACzDA,EAAEoP,iBACFpP,EAAE2M,+CACAnN,MAAM+G,QAAQ,6BACd,0BAA0BA,QAAQ,gCAGtCzG,UAAU2Q,IAAI,QAAS,kCAAkC1Q,GAAG,QAAS,kCAAkC,SAASC,GAC9GA,EAAEoP,iBACFpP,EAAE2M,+CACA,0CAA0CrF,YAAY,8BACtD,cAAc3G,KAAK,cAAe,IAAI8F,SAAS,UAAUa,YAAY,0FACTA,YAAY,8BACxE,kCAAkCb,SAAS,UAAU/F,IAAI,UAAW,0BAGxEZ,UAAU2Q,IAAI,kCAAmC1Q,GAAG,kCAAmCmB,eAAelB,MACpGA,EAAEoP,iBACFpP,EAAE2M,2BACmB,GAAjBc,qBAGJA,sBACMkD,SAAWnD,SAASC,eAC1B/K,MAAQgL,KAAKC,MAAMgD,SAASjO,OAC5BmF,YAAYnF,MAAOiO,SAASpI,SAAS,GACrCxF,KAAKrB,OAAOoL,KAAK6D,SAAS/J,WACL,GAAjB6G,mCACE,0BAA0B9M,KAAK,WAAY,gCAC3C,0BAA0BwN,WAAW,kCAErC,0BAA0BA,WAAW,YACnCV,eAAiBD,SAAStI,OAAS,sBACjC,0BAA0BvE,KAAK,WAAY,gCAE3C,0BAA0BwN,WAAW,oCAKjDrO,UAAU2Q,IAAI,kCAAmC1Q,GAAG,kCAAmCmB,eAAelB,MACpGA,EAAEoP,iBACFpP,EAAE2M,2BACEc,eAAiBD,SAAStI,OAAS,SAGvCuI,sBACMkD,SAAWnD,SAASC,eAC1B/K,MAAQgL,KAAKC,MAAMgD,SAASjO,OAC5BmF,YAAYnF,MAAOiO,SAASpI,SAAS,GACrCxF,KAAKrB,OAAOoL,KAAK6D,SAAS/J,WACtB6G,eAAiBD,SAAStI,OAAS,uBACjC,0BAA0BvE,KAAK,WAAY,gCAC3C,0BAA0BwN,WAAW,kCAErC,0BAA0BA,WAAW,YAClB,GAAjBV,kCACE,0BAA0B9M,KAAK,WAAY,gCAE3C,0BAA0BwN,WAAW,sBAK7CoE,YAAc,CAAC9J,OAAQ+J,aAEzB3G,UAAS,GACTnJ,MAAMmD,MAAK,CAACC,EAAGC,IAAMA,EAAE/B,SAAS,WAAa8B,EAAE9B,SAAS,iBACpDyO,YAAc/P,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAM6H,SAC3CiK,WAAahQ,MAAM+P,aACnBE,cAAgBD,WAAW1O,SAAS,WACpC4O,aAAe,KACfC,kBAAoB,QACP,MAAbL,UAAmB,IACA,GAAfC,mBAGJI,kBAAoBJ,YAAc,EAClCG,aAAelQ,MAAMmQ,mBACrBH,WAAW1O,SAAS,WAAa4O,aAAa5O,SAAS,WACvD4O,aAAa5O,SAAS,WAAa2O,kBAChC,IACCF,aAAe/P,MAAMwC,OAAS,SAGlC2N,kBAAoBJ,YAAc,EAClCG,aAAelQ,MAAMmQ,mBACrBH,WAAW1O,SAAS,WAAa4O,aAAa5O,SAAS,WACvD4O,aAAa5O,SAAS,WAAa2O,cAEvCjQ,MAAM+P,aAAeC,WACrBhQ,MAAMmQ,mBAAqBD,0EACSnK,cAAY/H,IAAIgS,WAAW1O,uEAC3B4O,aAAahS,UAAQF,IAAIkS,aAAa5O,UAC1E4D,aAAa,CAACa,8BAIhB3I,UAAU2Q,IAAI,mCAAoC1Q,GAAG,mCAAoC,SAASC,GAChGA,EAAEoP,iBACFpP,EAAE2M,+CACAnN,MAAMmB,KAAK,WAAY,YAAY8F,SAAS,8BAC5C,6BAA6B0H,WAAW,YAAY7G,YAAY,UAClEuE,UAAS,OACLpD,QAAS,mBAAE,8BAA8BhD,KAAI,kBACtC,mBAAEjG,MAAMgB,KAAK,WACrBmH,YACGhD,OAAQ,IAAIsJ,MAAOC,UACzBzF,OAAOxC,SAAS1G,WACRmT,YAAa,4DAAoCnT,YACjDuT,YAAcpQ,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAMrB,OAC3C4M,OAASuB,KAAKC,MAAMD,KAAKG,UAAUnL,MAAMoQ,eAC7C3G,OAAOnI,SAASW,MAAQA,MACxB+N,WAAW/R,KAAK,aAAcwL,OAAOnI,SAASW,OAC9CjC,MAAMoQ,aAAe3G,UAEzBtE,YAAYnF,MAAO+F,QAAQ,GAC3Bb,aAAaa,+BAGf3I,UAAU2Q,IAAI,qCAAsC1Q,GAAG,qCAAsC,SAASC,GACpGA,EAAEoP,iBACFpP,EAAE2M,+CACAnN,MAAMmB,KAAK,WAAY,YAAY8F,SAAS,yDACjB0H,WAAW,YAAY7G,YAAY,UAChEuE,UAAS,OACLpD,QAAS,mBAAE,8BAA8BhD,KAAI,kBACtC,mBAAEjG,MAAMgB,KAAK,WACrBmH,MACHc,OAAOxC,SAAS1G,WACRmT,YAAa,4DAAoCnT,YACjDuT,YAAcpQ,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAMrB,OAC3C4M,OAASuB,KAAKC,MAAMD,KAAKG,UAAUnL,MAAMoQ,sBACtC3G,OAAOnI,SAASW,MACvB+N,WAAW/R,KAAK,aAAcwL,OAAOnI,SAASW,OAC9CjC,MAAMoQ,aAAe3G,UAEzBtE,YAAYnF,MAAO+F,QAAQ,GAC3Bb,aAAaa,+BAIf3I,UAAU2Q,IAAI,gCAAiC1Q,GAAG,gCAAiC,SAASC,GAC1FA,EAAEoP,iBACFpP,EAAE2M,+BACElE,QAAS,mBAAE,cAAc9H,KAAK,eAClC8H,OAASA,OAAOI,MAAM,WAChBkK,SAAWtE,YAAY/L,UAEzB+F,OAAOvD,OAAS,EAAG,CACnBuD,OAAS2F,iBAAiB3F,OAAQ,YAC9BuK,QAAU,MACdtQ,MAAMmD,MAAK,CAACC,EAAGC,IAAMA,EAAE/B,SAAS,WAAa8B,EAAE9B,SAAS,aACxDyE,OAAOxC,SAAS1G,OACZyT,QAAQpF,KAAKlL,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAMrB,WAE9CyT,QAAQnN,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACvB3G,KAAK6T,IAAID,QAAQ,GAAKA,QAAQA,QAAQ9N,OAAS,KAAOuD,OAAOvD,OAAS,GAClE3E,OAAOmC,MAAMsQ,QAAQ,IAAIhP,SAAS,aAAe+O,gBAK7DtK,OAAOxC,SAAS1G,OACZgT,YAAYhT,KAAM,SAEtBsM,UAAS,GACTlI,oBAAmB,4DAAoC8E,OAAO,WAC9DrD,oBAAoB1C,MAAO+F,+BAI7B3I,UAAU2Q,IAAI,kCAAmC1Q,GAAG,kCAAmC,SAASC,GAC9FA,EAAEoP,iBACFpP,EAAE2M,+BACElE,QAAS,mBAAE,cAAc9H,KAAK,eAClC8H,OAASA,OAAOI,MAAM,WAChBqK,YAplBcxE,CAAAA,UACD,GAAfA,KAAKxJ,cACE,MAEPmJ,IAAMK,KAAKjJ,KAAIlG,MAAQA,KAAKqB,KAC5B+N,OAASP,iBAAiBC,IAAK,OAC/BO,OAASF,KAAKhP,MAAKH,MAAQA,KAAKqB,IAAM+N,OAAO,KAAI3K,SAAS,kBACvDzD,OAAOqO,SA6kBMuE,CAAezQ,UAE/B+F,OAAOvD,OAAS,EAAG,CACnBuD,OAAS2F,iBAAiB3F,OAAQ,WAC9BuK,QAAU,MACdtQ,MAAMmD,MAAK,CAACC,EAAGC,IAAMD,EAAE9B,SAAS,WAAa+B,EAAE/B,SAAS,aACxDyE,OAAOxC,SAAS1G,OACZyT,QAAQpF,KAAKlL,MAAM+E,WAAUC,GAAKA,EAAE9G,IAAMrB,WAE9CyT,QAAQnN,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACvB3G,KAAK6T,IAAID,QAAQ,GAAKA,QAAQA,QAAQ9N,OAAS,KAAOuD,OAAOvD,OAAS,GAClE3E,OAAOmC,MAAMsQ,QAAQ,IAAIhP,SAAS,aAAekP,mBAK7DzK,OAAOxC,SAAS1G,OACZgT,YAAYhT,KAAM,WAEtBsM,UAAS,GACTlI,oBAAmB,4DAAoC8E,OAAO,WAC9DrD,oBAAoB1C,MAAO+F,WAI/BxF,eAAelD,GAAG,oCAAqC,SAASC,GAC5DA,EAAEoP,iBACFpP,EAAE2M,+BACElE,QAAS,mBAAE,cAAc9H,KAAK,eAClC8H,OAASA,OAAOI,MAAM,KACtBJ,OAAOxC,SAAS1G,QACK,4DAAoCA,YAC1C6C,6BACT,cAAczB,KAAK,cAAe,IAAI8F,SAAS,UAAUa,YAAY,aAE3EuE,UAAS,GACTzG,oBAAoB1C,MAAO,MAC3BkF,aAAa,SAIjB3E,eAAelD,GAAG,kCAAmCmB,eAAelB,GAChEA,EAAEoP,iBACFpP,EAAE2M,2BACFd,UAAS,SAEHkG,aAAetD,YAAY/L,WAC7B+F,QAAS,mBAAE,cAAc9H,KAAK,eAClC8H,OAASA,OAAOI,MAAM,KACtBJ,OAAS2F,iBAAiB3F,OAAQ,aAC5BlD,kBAAoBxC,KAAKrB,OAAO8D,qBAClCsJ,SAAW,GACXsE,eAAiBhU,KAAKC,MAAsB,IAAhBD,KAAK4S,cAChC,IAAI9L,EAAI,EAAGA,EAAIuC,OAAOvD,OAAQgB,IAAK,KAChCJ,EAAI2C,OAAOvC,GACXwM,YAAa,4DAAoC5M,SACrD4M,WAAWpL,YAAY,gBACjB/H,KAAOmD,MAAMhD,MAAKgI,GAAKA,EAAE9G,IAAMkF,QACjCoJ,QAAUxB,KAAKC,MAAMD,KAAKG,UAAUtO,OACxC2P,QAAQ9I,WAAW3F,IAAM8E,aAAe2J,QAAQ9I,WAAW3F,IAAMyO,QAAQ9I,WAAW9F,OACpF4O,QAAQ9I,WAAW9F,MAAQiF,YAC3B2J,QAAQlL,SAAWO,kBAAkBmO,YACjCnT,KAAKyE,SAASW,MACduK,QAAQlL,SAASW,MAAQpE,OAAOhB,KAAKyE,SAASW,OAASyO,sBAEhDlE,QAAQlL,SAASW,MAE5BuK,QAAQtO,IAAK,IAAIqN,MAAOC,UACxBY,SAASlB,KAAKsB,QAAQtO,IACtBsO,QAAQlL,SAASqP,OAAS9S,OAAOwR,cAAgB7L,EAAI,EACrDxD,MAAMkL,KAAKsB,SACXrH,YAAYnF,MAAO,MAAM,GACrBwD,GAAKuC,OAAOvD,OAAS,wBACnB,cAAcvE,KAAK,cAAemO,SAASwE,KAAK,MAAM7M,SAAS,UAAUa,YAAY,UAEvFO,YAAY,GAAIiH,UAAU,GAC1BzH,YAAW,KACPwE,UAAS,GACT/L,SAASmC,cAAc,8BAA8BwN,QACrD9L,mBAAmBX,cAActD,8CAAuCwP,QAAQtO,WAChFgH,aAAakH,YACd,UAMf7L,eAAelD,GAAG,UAAW,uBAAuB,SAASC,OACrDyI,QAAS,mBAAE,cAAc9H,KAAK,eAClC8H,OAASA,OAAOI,MAAM,KACtBgD,UAAS,OACJ,IAAI3F,EAAI,EAAGA,EAAIuC,OAAOvD,OAAQgB,IAAK,KAChCJ,EAAI2C,OAAOvC,GACXwM,YAAa,4DAAoC5M,YACnCyD,MAAdmJ,WAAyB,KACrB1O,SAAW0O,WAAW1O,WACtBuP,KAAOvT,EAAE0M,SAAW1M,EAAEqP,QACtBmE,KAAO,SAEXxT,EAAEoP,iBACFpP,EAAE2M,2BACM3M,EAAEyT,SACD,UACGzP,SAASC,IAAM,IACfD,SAASC,IAAMD,SAASC,IAAMuP,KAC9B5L,aAAaa,mBAGhB,YACGzE,SAASC,IAAMyO,WAAW3O,cAAgBf,cAAclB,WACxDkC,SAASC,IAAMD,SAASC,IAAMuP,KAC9B5L,aAAaa,mBAGhB,YACGzE,SAASG,KAAO,IAChBH,SAASG,KAAOH,SAASG,KAAOqP,KAChC5L,aAAaa,mBAGhB,aACGzE,SAASG,KAAOuO,WAAW7O,aAAeb,cAAcnB,UACxDmC,SAASG,KAAOH,SAASG,KAAOqP,KAChC5L,aAAaa,mBAGhB,oEAC6BlC,QAAQ,aAErC,gBACGgN,oDAC4BhN,QAAQ,yBAMhDmM,WAAWhS,IAAIsD,UACfO,kBAAkBmO,qCAM5B5S,UAAUC,GAAG,qBAAqB,SAASC,OACrC0T,QAAU1T,EAAEE,cAAcC,OAAOR,WACxBqD,cAAcxC,KAAK,OAClBkT,QAAQ9S,KAClBoC,cAActD,KAAK,uBAAuB0C,iDACpBA,yFACwCA,aAKtEuR,OAAOpC,iBAAiB,gBAAiBvR,OACjB,OAAhBkD,YAAsB,OAChB0Q,oBAAsBtR,EAAEC,KAAKC,WAAW,iBAAkB,+BAChExC,EAAE6T,YAAcD,oBACTA,2BAEJ,0BAWMnU,YAAaqU,SAAUvU,kBACnCE,YAAcA,YACnBqU,SAAS3F,WAAW,MAAM7G,YAAY,UACtCwM,SAASnT,KAAK,YAAapB,KAAKK,MAChCkU,SAASrN,SAASlH,KAAKK,MACvBkU,SAASnT,KAAK,UAAWpB,KAAKqB,IAC9BkT,SAAS3F,WAAW,kBACpB2F,SAASpU,KAAK,cAAc0C,SAC5B0R,SAASpU,KAAK,UAAU4E,KAAK/E,KAAKsL,gBAAgBpE,SAAS,wBAC3DqN,SAASpU,KAAK,WAAW0C,SACzB0R,SAASpU,KAAK,gBAAgB+G,SAASjH,KAAK2G,KAAK4N,MACjDD,SAASpU,KAAK,cAAciB,KAAK,QAASnB,KAAK2G,KAAKgH,OACpD2G,SAASpU,KAAK,aAAa0C,SAC3B0R,SAASE,SAAS,oBACXF,8BASUrU,YAAamB,SACzBnB,YAAcA,gBACfF,KAAOC,KAAKC,YAAYC,MAAMC,YAAeA,WAAWiB,IAAMA,yBAChE,sBAAsBD,KAAK,UAAWpB,KAAKqB,wBAC3C,kDAAkDiQ,2BAClD,uCAAuCnQ,IAAI,aAAc,8BACzD,mBAAmB+F,SAAS,yCAC5B,wBAAwBmK,2BACxB,0CAA0CtJ,YAAY,kCACtD,cAAcA,YAAY,aACvB2M,wBAAwB1U,0BAUbE,YAAamH,UAAWsN,kBACpCnR,KAAOvD,QAEMC,YAAYC,MAAMC,YAAeA,WAAWC,MAAQmD,KAAKoD,KAAKgO,mBAE3EpR,KAAK6O,gBAAgB,4BAA6B,cAGlDpR,KAAO,CACP2M,MAAO,aACPvG,WAAY,EACZwE,UAAW9I,EAAE6I,IAAIC,UACjBxL,KAAMmD,KAAKoD,KAAKgO,KAChBC,SAAUrR,KAAKsR,OACfhE,KAAM6D,aACN7C,aAActO,KAAKuR,YACnBC,cAAe,EACfC,SAAU9G,KAAKG,UAAU,wBACK,0BACD,8BACG,4BACD,oBACT,OAGtBgC,WAAa4E,cAAKC,KAAK,CAAC,CACxBC,WAAY,0BACZvD,KAAM,CACFwD,eAAgBlH,KAAKG,UAAUrN,OAEnC4K,UAAW9I,EAAE6I,IAAIC,aACjB,GAEAyJ,cAAgBnH,KAAKC,MAAMkC,KAAKrP,0CACtB,oBAAqB,CAC/Bb,WAAYkV,cACZ5E,OAAQ,QAGZlN,KAAKtD,YAAcA,gCACjB,iBAAiB2N,MAAM,QACzByH,cAAchU,UAAW,QACnBC,cAAgBiC,KAAKhC,OAAO8T,cAAe,4BAC/C,sBAAsBlU,KAAK,UAAWkU,cAAcjU,IACtDmC,KAAK/B,kBAAkB6T,cAAe/T,SACtCiC,KAAK+R,eAAerV,YAAaoV,cAAcjU,IAQnDmU,eAAepV,mBACJA"}