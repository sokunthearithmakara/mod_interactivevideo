{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for the HTML Viewer plugin.\n *\n * @module     ivplugin_htmlviewer/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Base from 'mod_interactivevideo/type/base';\nimport $ from 'jquery';\n\nexport default class HtmlViewer extends Base {\n\n    /**\n     * Override the renderContainer method\n     * @param {Object} annotation The annotation object\n     * @return {void}\n     */\n    renderContainer(annotation) {\n        $(`#message[data-id='${annotation.id}']`).addClass('hasiframe');\n        super.renderContainer(annotation);\n    }\n\n    /**\n     * Override the postContentRender method\n     * @param {Object} annotation The annotation object\n     * @return {void}\n     */\n    postContentRender(annotation) {\n        var interval = setInterval(() => {\n            if ($(`#message[data-id='${annotation.id}'] iframe`).length > 0) {\n                clearInterval(interval);\n                // Remove the loading background because some iframe has transparent content\n                setTimeout(() => {\n                    $(`#message[data-id='${annotation.id}'] iframe`).css('background', 'none');\n                }, 1000);\n            }\n        }, 1000);\n    }\n\n    /**\n     * Override the displayReportView method\n     * @param {Object} annotation The annotation object\n     * @return {void}\n     */\n    async displayReportView(annotation) {\n        const data = await this.render(annotation, 'html');\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        $message.addClass('hasiframe');\n        $message.find(`.modal-body`).html(data);\n        $message.find(`.modal-body`).attr('id', 'content');\n        this.postContentRender(annotation);\n    }\n}"],"names":["HtmlViewer","Base","renderContainer","annotation","id","addClass","postContentRender","interval","setInterval","length","clearInterval","setTimeout","css","data","this","render","$message","find","html","attr"],"mappings":";;;;;;;uKAyBqBA,mBAAmBC,cAOpCC,gBAAgBC,4DACWA,WAAWC,UAAQC,SAAS,mBAC7CH,gBAAgBC,YAQ1BG,kBAAkBH,gBACVI,SAAWC,aAAY,MACnB,+CAAuBL,WAAWC,iBAAeK,OAAS,IAC1DC,cAAcH,UAEdI,YAAW,qDACgBR,WAAWC,iBAAeQ,IAAI,aAAc,UACpE,QAER,6BAQiBT,kBACdU,WAAaC,KAAKC,OAAOZ,WAAY,YACvCa,UAAW,+CAAuBb,WAAWC,UACjDY,SAASX,SAAS,aAClBW,SAASC,oBAAoBC,KAAKL,MAClCG,SAASC,oBAAoBE,KAAK,KAAM,gBACnCb,kBAAkBH"}