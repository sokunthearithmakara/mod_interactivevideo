{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for the H5P Upload plugin.\n *\n * @module     ivplugin_h5pupload/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nexport default class H5pUpload extends Base {\n    renderContainer(annotation) {\n        let $message = $(`#message[data-id='${annotation.id}']`);\n        if (annotation.completiontracking && annotation.completiontracking != 'manual') {\n            // Disable the mark-done and mark-undone buttons\n            let $completiontoggle = $message.find('#completiontoggle');\n            $completiontoggle.prop('disabled', true);\n            if (annotation.completed == true) {\n                $completiontoggle.find(`span`)\n                    .text(`${M.util.get_string('completioncompleted', 'ivplugin_contentbank')}`);\n            } else {\n                $completiontoggle.find(`span`)\n                    .text(`${M.util.get_string('completionincomplete', 'ivplugin_contentbank')}`);\n            }\n\n            switch (annotation.completiontracking) {\n                case 'complete':\n                    $completiontoggle.before(`<i class=\"bi bi-info-circle-fill mr-2\" data-toggle=\"tooltip\" data-container=\"#wrapper\"\n                        data-trigger=\"hover\"\n                         data-title=\"${M.util.get_string(\"completiononcomplete\", \"mod_interactivevideo\")}\"></i>`);\n                    break;\n                case 'completepass':\n                    $completiontoggle.before(`<i class=\"bi bi-info-circle-fill mr-2\" data-toggle=\"tooltip\" data-container=\"#wrapper\"\n        data-trigger=\"hover\"\n         data-title=\"${M.util.get_string(\"completiononcompletepass\", \"mod_interactivevideo\")}\"></i>`);\n                    break;\n                case 'completefull':\n                    $completiontoggle.before(`<i class=\"bi bi-info-circle-fill mr-2\" data-toggle=\"tooltip\" data-container=\"#wrapper\"\n                data-trigger=\"hover\" data-title=\"${M.util.get_string(\"completiononcompletefull\", \"mod_interactivevideo\")}\"></i>`);\n                    break;\n            }\n            $message.find('[data-toggle=\"tooltip\"]').tooltip();\n        }\n        return $message;\n    }\n    postContentRender(annotation, callback) {\n        $(`#message[data-id='${annotation.id}']`).addClass('hasiframe');\n        if (annotation.completiontracking\n            && (annotation.completiontracking != 'manual') && !annotation.completed) {\n            return callback;\n        }\n        return true;\n    }\n    runInteraction(annotation) {\n        var annoid = annotation.id;\n        var self = this;\n        const xAPICheck = (annotation) => {\n            var H5P;\n            var iframeinterval = setInterval(function() {\n                try { // Try to get the H5P object.\n                    H5P = document.querySelector(`#message[data-id='${annoid}'] iframe`).contentWindow.H5P;\n                } catch (e) {\n                    H5P = null;\n                }\n\n                if (typeof H5P !== 'undefined' && H5P !== null) {\n                    if (self.isEditMode()) {\n                        $(`#message[data-id='${annotation.id}'] #title .xapi`).remove();\n                        $(`#message[data-id='${annotation.id}'] #title .btns`)\n                            .prepend(`<div class=\"xapi alert-secondary d-inline px-2 rounded-pill\">\n                            ${M.util.get_string('xapicheck', 'ivplugin_h5pupload')}</div>`);\n                    }\n                    H5P.externalDispatcher.on('xAPI', function(event) {\n                        if ((event.data.statement.verb.id == 'http://adlnet.gov/expapi/verbs/completed'\n                            || event.data.statement.verb.id == 'http://adlnet.gov/expapi/verbs/answered')\n                            && event.data.statement.object.id.indexOf('subContentId') < 0) {\n                            if (self.isEditMode()) {\n                                $(`#message[data-id='${annotation.id}'] #title .btns .xapi`).remove();\n                                $(`#message[data-id='${annotation.id}'] #title .btns`)\n                                    .prepend(`<div class=\"xapi alert-success d-inline px-2 rounded-pill\">\n                                    <i class=\"fa fa-check mr-2\"></i>\n                                    ${M.util.get_string('xapieventdetected', 'ivplugin_h5pupload')}\n                                    </div>`);\n                                var audio = new Audio(M.cfg.wwwroot + '/mod/interactivevideo/sounds/pop.mp3');\n                                audio.play();\n                                return;\n                            }\n                            var complete = false;\n                            if (annotation.completiontracking == 'completepass'\n                                && event.data.statement.result && event.data.statement.result.score.scaled >= 0.5) {\n                                complete = true;\n                            } else if (annotation.completiontracking == 'completefull'\n                                && event.data.statement.result && event.data.statement.result.score.scaled == 1) {\n                                complete = true;\n                            } else if (annotation.completiontracking == 'complete') {\n                                complete = true;\n                            }\n                            if (complete && !annotation.completed) {\n                                self.toggleCompletion(annoid, 'mark-done', 'automatic');\n                            }\n                        }\n                    });\n\n                    clearInterval(iframeinterval);\n                }\n\n            }, 1000);\n        };\n\n        // Apply content\n        const applyContent = (annotation) => {\n            this.render(annotation, 'html').then((data) => {\n                $(`#message[data-id='${annotation.id}'] .modal-body`).attr('id', 'content').html(data).fadeIn(300);\n                if (annotation.completed) {\n                    this.postContentRender(annotation);\n                } else {\n                    this.postContentRender(annotation, xAPICheck(annotation));\n                }\n                return;\n            }).catch(() => {\n                // Do nothing.\n            });\n        };\n\n        this.renderViewer(annotation).then(() => {\n            this.renderContainer(annotation);\n            applyContent(annotation);\n            return;\n        }).catch(() => {\n            // Do nothing.\n        });\n\n        this.enableManualCompletion();\n\n        if (annotation.displayoptions == 'popup') {\n            $('#annotation-modal').on('shown.bs.modal', function() {\n                self.setModalDraggable('#annotation-modal .modal-dialog');\n            });\n        }\n    }\n}"],"names":["H5pUpload","Base","renderContainer","annotation","$message","id","completiontracking","$completiontoggle","find","prop","completed","text","M","util","get_string","before","tooltip","postContentRender","callback","addClass","runInteraction","annoid","self","this","applyContent","render","then","data","attr","html","fadeIn","H5P","iframeinterval","setInterval","document","querySelector","contentWindow","e","isEditMode","remove","prepend","externalDispatcher","on","event","statement","verb","object","indexOf","Audio","cfg","wwwroot","play","complete","result","score","scaled","toggleCompletion","clearInterval","xAPICheck","catch","renderViewer","enableManualCompletion","displayoptions","setModalDraggable"],"mappings":";;;;;;;uKAwBqBA,kBAAkBC,cACnCC,gBAAgBC,gBACRC,UAAW,mBAAG,qBAAoBD,WAAWE,WAC7CF,WAAWG,oBAAuD,UAAjCH,WAAWG,mBAAgC,KAExEC,kBAAoBH,SAASI,KAAK,4BACtCD,kBAAkBE,KAAK,YAAY,GACP,GAAxBN,WAAWO,UACXH,kBAAkBC,KAAM,QACnBG,KAAM,GAAEC,EAAEC,KAAKC,WAAW,sBAAuB,2BAEtDP,kBAAkBC,KAAM,QACnBG,KAAM,GAAEC,EAAEC,KAAKC,WAAW,uBAAwB,2BAGnDX,WAAWG,wBACV,WACDC,kBAAkBQ,OAAQ,8KAEPH,EAAEC,KAAKC,WAAW,uBAAwB,2CAE5D,eACDP,kBAAkBQ,OAAQ,8IAEvBH,EAAEC,KAAKC,WAAW,2BAA4B,2CAEhD,eACDP,kBAAkBQ,OAAQ,4IACKH,EAAEC,KAAKC,WAAW,2BAA4B,iCAGrFV,SAASI,KAAK,2BAA2BQ,iBAEtCZ,SAEXa,kBAAkBd,WAAYe,oCACvB,qBAAoBf,WAAWE,QAAQc,SAAS,eAC/ChB,WAAWG,oBAC0B,UAAjCH,WAAWG,qBAAoCH,WAAWO,YACvDQ,SAIfE,eAAejB,gBACPkB,OAASlB,WAAWE,GACpBiB,KAAOC,WAuDLC,aAAgBrB,kBACbsB,OAAOtB,WAAY,QAAQuB,MAAMC,2BAC/B,qBAAoBxB,WAAWE,oBAAoBuB,KAAK,KAAM,WAAWC,KAAKF,MAAMG,OAAO,KAC1F3B,WAAWO,eACNO,kBAAkBd,iBAElBc,kBAAkBd,WA5DhBA,CAAAA,iBACX4B,IACAC,eAAiBC,aAAY,eAEzBF,IAAMG,SAASC,cAAe,qBAAoBd,mBAAmBe,cAAcL,IACrF,MAAOM,GACLN,IAAM,KAGN,MAAOA,MACHT,KAAKgB,mCACF,qBAAoBnC,WAAWE,qBAAqBkC,6BACpD,qBAAoBpC,WAAWE,qBAC7BmC,QAAS,8FACR5B,EAAEC,KAAKC,WAAW,YAAa,gCAEzCiB,IAAIU,mBAAmBC,GAAG,QAAQ,SAASC,WACF,4CAAhCA,MAAMhB,KAAKiB,UAAUC,KAAKxC,IACQ,2CAAhCsC,MAAMhB,KAAKiB,UAAUC,KAAKxC,KAC1BsC,MAAMhB,KAAKiB,UAAUE,OAAOzC,GAAG0C,QAAQ,gBAAkB,EAAG,IAC3DzB,KAAKgB,uCACF,qBAAoBnC,WAAWE,2BAA2BkC,6BAC1D,qBAAoBpC,WAAWE,qBAC7BmC,QAAS,0KAER5B,EAAEC,KAAKC,WAAW,oBAAqB,0EAEjC,IAAIkC,MAAMpC,EAAEqC,IAAIC,QAAU,wCAChCC,WAGNC,UAAW,GACsB,gBAAjCjD,WAAWG,oBACRqC,MAAMhB,KAAKiB,UAAUS,QAAUV,MAAMhB,KAAKiB,UAAUS,OAAOC,MAAMC,QAAU,IAEtC,gBAAjCpD,WAAWG,oBACfqC,MAAMhB,KAAKiB,UAAUS,QAAsD,GAA5CV,MAAMhB,KAAKiB,UAAUS,OAAOC,MAAMC,QAE5B,YAAjCpD,WAAWG,sBAJlB8C,UAAW,GAOXA,WAAajD,WAAWO,WACxBY,KAAKkC,iBAAiBnC,OAAQ,YAAa,iBAKvDoC,cAAczB,mBAGnB,MAUwC0B,CAAUvD,gBAGlDwD,OAAM,eAKRC,aAAazD,YAAYuB,MAAK,UAC1BxB,gBAAgBC,YACrBqB,aAAarB,eAEdwD,OAAM,cAIJE,yBAE4B,SAA7B1D,WAAW2D,oCACT,qBAAqBpB,GAAG,kBAAkB,WACxCpB,KAAKyC,kBAAkB"}