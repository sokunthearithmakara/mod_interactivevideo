{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["/* eslint-disable complexity */\n\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main class for inlineannotation content type\n *\n * @module     ivplugin_inlineannotation/main\n * @copyright  2024 Sokunthearith Makara <sokunthearithmakara@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport $ from 'jquery';\nimport Base from 'mod_interactivevideo/type/base';\nimport {dispatchEvent} from 'core/event_dispatcher';\nimport ModalForm from 'core_form/modalform';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport {notifyFilterContentUpdated as notifyFilter} from 'core_filters/events';\nexport default class InlineAnnotation extends Base {\n    /**\n     * Callback function to be executed after an edit operation.\n     * Currently, this function does not perform any actions.\n     */\n    postEditCallback() {\n        // Do nothing\n    }\n\n    /**\n     * Round a number to two decimal places\n     * @param {Number} num Number\n     * @returns {Number} rounded number\n     */\n    roundToTwo(num) {\n        return +(Math.round(num + 'e+2') + 'e-2');\n    }\n\n    /**\n     * Render the container for the annotation.\n     * @param {Object} annotation The annotation object.\n     * @return {void}\n     */\n    renderContainer(annotation) {\n        const videoWrapper = $('#video-wrapper');\n        videoWrapper.find('#canvas').remove();\n        videoWrapper.append(`<div id=\"canvas\" data-id=\"${annotation.id}\"\n             class=\"message text-white bg-transparent inlineannotation position-absolute\"></div>`);\n\n        const updateAspectRatio = async (video, reset) => {\n            let elem = video ? $('#player') : $(`#canvas[data-id='${annotation.id}']`);\n            if ($(\"#wrapper\").hasClass('fullscreen')) {\n                let ratio = 16 / 9;\n                if (!this.displayoptions.usefixedratio || this.displayoptions.usefixedratio == 0) {\n                    ratio = this.player.aspectratio;\n                }\n                let videowrapperaspect = videoWrapper.width() / videoWrapper.height();\n                let gap = '- 55px';\n                if ($(\"#wrapper\").hasClass('no-videonav')) {\n                    gap = '';\n                }\n                if (videowrapperaspect > ratio) {\n                    elem.css('height', `calc(100dvh ${gap})`);\n                    elem.css('width', `calc((100dvh ${gap}) * ${ratio})`);\n                    elem.css('top', '0');\n                    elem.css('left', `calc((100dvw - (100dvh ${gap}) * ${ratio}) / 2)`);\n                } else if (videowrapperaspect < ratio) {\n                    elem.css('width', '100dvw');\n                    elem.css('height', `${100 / ratio}dvw`);\n                    elem.css('top', `calc((100dvh ${gap} - 100dvw / ${ratio}) / 2)`);\n                    elem.css('left', '0');\n                }\n            } else {\n                elem.css('width', '100%');\n                elem.css('height', '100%');\n                elem.css('top', '0');\n                elem.css('left', '0');\n            }\n            if (reset) {\n                elem.css('width', '100%');\n                elem.css('height', '100%');\n                elem.css('top', '0');\n                elem.css('left', '0');\n            }\n        };\n\n        updateAspectRatio();\n        updateAspectRatio(true);\n\n        let vwrapper = document.querySelector('#video-wrapper');\n        let resizeObserver = new ResizeObserver(() => {\n            updateAspectRatio();\n            updateAspectRatio(true);\n        });\n\n        resizeObserver.observe(vwrapper);\n\n        $(document).on('timeupdate', function() {\n            updateAspectRatio(true, true);\n        });\n    }\n\n    /**\n     * Post-processes the content after rendering an annotation.\n     * @param {Object} annotation The annotation object.\n     * @param {Object} data The data object.\n     * @return {void}\n     */\n    postContentRender(annotation, data) {\n        let self = this;\n        let $videoWrapper = $('#video-wrapper');\n        let $playerWrapper = $('#wrapper');\n        let draftStatus = null;\n\n        /**\n         * Format seconds to HH:MM:SS\n         * @param {Number} seconds seconds\n         * @returns formatted time\n         */\n        const convertSecondsToMMSS = (seconds) => {\n            let minutes = Math.floor(seconds / 60);\n            seconds = Math.round(seconds - minutes * 60);\n            return (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n        };\n\n        /**\n         * Update position information of the active element on the toolbar.\n         * @param {Object} elem jQuery element\n         */\n        const updatePositionInfo = (elem) => {\n            let w = elem.outerWidth();\n            let hw = elem.outerHeight();\n            let t = elem.position().top < 0 ? 0 : elem.position().top;\n            let l = elem.position().left < 0 ? 0 : elem.position().left;\n            let z = elem.css('z-index');\n            $(`#inlineannotation-btns #position`)\n                .text(`x: ${Math.round(l)}, y: ${Math.round(t)}, z: ${z - 5}, w: ${Math.round(w)}, h: ${Math.round(hw)}`);\n        };\n\n        /**\n         * Recalculate the size of the element.\n         * @param {Object} elem jQuery element\n         * @return {Object} position of the element\n         */\n        const recalculatingSize = (elem) => {\n            let message = $videoWrapper.find(`#canvas`);\n            $(`#inlineannotation-btns #down, #inlineannotation-btns #up`).removeAttr('disabled');\n            let w = self.roundToTwo(elem.outerWidth()) / message.width() * 100;\n            let h = self.roundToTwo(elem.outerHeight()) / message.height() * 100;\n            let t = self.roundToTwo(elem.position().top) / message.height() * 100;\n            t = t < 0 ? 0 : t;\n            let l = self.roundToTwo(elem.position().left) / message.width() * 100;\n            l = l < 0 ? 0 : l;\n            let z = elem.css('z-index');\n            let g = elem.data('group');\n            let position = {\n                'width': w + '%',\n                'height': h + '%',\n                'left': l + '%',\n                'top': t + '%',\n                'z-index': z,\n            };\n            position.group = g;\n            elem.css(position);\n            updatePositionInfo(elem);\n            return position;\n        };\n\n        /**\n         * Calculate the text size for text and file type.\n         * @param {Object} elem jQuery element\n         * @param {Boolean} button if it is a button\n         * @param {Boolean} multiline if it is a multiline text\n         */\n        const recalculatingTextSize = (elem, button, multiline = false) => {\n            let fontSize = elem.outerHeight();\n            let padding = 0;\n            let rowCount = 1;\n            if (multiline) {\n                let rows = elem.find('.text-row');\n                rowCount = rows.length;\n                if (rowCount > 1) {\n                    let rowHeight = elem.outerHeight() / rowCount;\n                    padding = rowHeight * 0.3;\n                    fontSize = (elem.outerHeight() - padding * 2) / rowCount;\n                }\n            }\n            let style = {\n                'font-size': (button ? fontSize * 0.7 : fontSize * 0.9) + 'px',\n                'line-height': fontSize + 'px',\n                'padding-left': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n                'padding-right': (button ? fontSize * 0.5 : fontSize * 0.3) + 'px',\n            };\n            if (multiline && rowCount > 1) {\n                style.padding = padding + 'px';\n            }\n            elem.find('.annotation-content').css(style);\n            elem.css('width', 'auto');\n        };\n\n        const renderImage = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><img src=\"${prop.url}\" id=\"${id}\"\n                             class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\"\n                             ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/></a>`);\n            } else {\n                wrapper.append(`<img src=\"${prop.url}\" id=\"${id}\"\n                                 ${timestamp > 0 ? ' data-timestamp=\"' + timestamp + '\"' : ''}\n                                  class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\n                                  ${timestamp > 0 ? 'cursor-pointer' : ''}\"\n                                   ${prop.rounded == 1 ? 'style=\"border-radius:1em;\"' : ''} alt=\"${prop.formattedalttext}\"/>`);\n            }\n            if (!self.isEditMode()) {\n                if (prop.gotourl == '' && timestamp == 0) {\n                    wrapper.removeClass('resizable');\n                    wrapper.addClass('no-pointer');\n                } else {\n                    wrapper.addClass('clickable');\n                }\n            }\n            wrapper.css(position);\n            wrapper.css('height', 'auto');\n            $videoWrapper.find(`#canvas`).append(wrapper);\n        };\n\n        const renderVideo = (wrapper, item, prop, id, position) => {\n            wrapper.append(`<video id=\"${id}\" class=\"annotation-content w-100 ${prop.shadow == '1' ? 'shadow' : ''}\"\n                 ${prop.showcontrol == 1 && !self.isEditMode() ? 'controls' : ''}\n                  ${$('body').hasClass('mobiletheme') ? 'preload=\"auto\"' : ''}\n                 src=\"${prop.url}\" style=\"border-radius: ${prop.rounded == 1 ? '1em' : '0'}\" disablePictureInPicture/></video>\n             <i class=\"playpause bi bi-play-fill position-absolute\" style=\"font-size: 2em; line-height:: 2em;\"></i>`);\n            let video = wrapper.find('video')[0];\n            video.autoplay = prop.autoplay == '1';\n            video.playsInline = true;\n            if (self.isEditMode()) {\n                video.autoplay = false;\n            }\n            video.onplay = function() {\n                wrapper.find('.playpause').removeClass('bi-play-fill').addClass('bi-pause-fill');\n            };\n            video.onpause = function() {\n                wrapper.find('.playpause').removeClass('bi-pause-fill').addClass('bi-play-fill');\n            };\n            video.onended = function() {\n                wrapper.find('.playpause').removeClass('bi-pause-fill').addClass('bi-play-fill');\n            };\n            wrapper.css(position);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n            recalculatingSize(wrapper);\n        };\n\n        const renderFile = (wrapper, item, prop, id, position) => {\n            const type = item.type;\n            let wrapperhtml = ``;\n            if (type == 'audio') {\n                wrapperhtml = `<span id=\"${id}\" tabindex=\"0\"\n                             class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'rounded-0'}\n                              annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''} rotatex-360\"\n                               data-src=\"${prop.url}\"><i class=\"bi bi-volume-up fs-unset\" style=\"margin-right:0.25em;\"></i>\n                               <span class=\"timeremaining\">00:00</span></span>`;\n            } else if (type == 'file') {\n                wrapperhtml = `<a id=\"${id}\"\n                             class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'rounded-0'}\n                             annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''} rotatey-180\" href=\"${prop.url}\"\n                              target=\"_blank\"><i class=\"bi bi-paperclip fs-unset\"></i>${prop.formattedlabel != \"\" ?\n                        `<span style=\"margin-left:0.25em;\">${prop.formattedlabel}` : ''}</a>`;\n            }\n            wrapper.append(`<div class=\"d-flex h-100\">${wrapperhtml}</div>`);\n\n            if (type == 'audio' && !self.isEditMode()) {\n                let playButton = wrapper.find('.annotation-content');\n                let audioSrc = prop.url;\n                let media = new Audio(audioSrc);\n                playButton.off('click').on('click', function(e) {\n                    e.stopImmediatePropagation();\n                    if (media.paused || media.ended || media.currentTime === 0) {\n                        media.play();\n                        $(this).find('i').removeClass('bi-volume-up').addClass('bi-pause-fill');\n                    } else {\n                        media.pause();\n                        $(this).find('i').removeClass('bi-pause-fill').addClass('bi-volume-up');\n                    }\n                });\n\n                let totaltime = 0;\n                media.onloadedmetadata = function() {\n                    totaltime = media.duration;\n                    playButton.find('span.timeremaining').text(convertSecondsToMMSS(totaltime));\n                };\n\n                media.onended = function() {\n                    playButton.find('i').removeClass('bi-pause-fill').addClass('bi-volume-up');\n                    playButton.find('span.timeremaining').text(convertSecondsToMMSS(totaltime));\n                };\n\n                media.ontimeupdate = function() {\n                    playButton.find('span.timeremaining')\n                        .text(convertSecondsToMMSS(media.duration - media.currentTime));\n                };\n\n                if (prop.autoplay == '1') {\n                    setTimeout(() => {\n                        playButton.trigger('click');\n                    }, 100);\n                }\n\n                $(document).one('iv:playerSeek iv:playerPlaying', function() {\n                    if (media) {\n                        media.pause();\n                    }\n                });\n            }\n\n            position.width = 0;\n\n            wrapper.css(position);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderNavigation = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n\n            wrapper.append(`<div class=\"d-flex h-100\"><span id=\"${id}\" tabindex=\"0\" class=\"btn ${prop.style} ${prop.rounded == '1' ?\n                'btn-rounded' : 'rounded-0'} annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''}\"\n                data-timestamp=\"${timestamp}\">${prop.formattedlabel}</span></div>`);\n\n            position.width = 0;\n\n            wrapper.css(position);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderStopwatch = (wrapper, item, prop, id, position) => {\n            const duration = Number(prop.duration) * 60;\n            wrapper.append(`<div class=\"d-flex h-100\"><span id=\"${id}\" tabindex=\"0\"\n                             class=\"btn ${prop.style} ${prop.rounded == '1' ? 'btn-rounded' : 'rounded-0'}\n                              annotation-content text-nowrap ${prop.shadow == '1' ? 'shadow' : ''} rotatey-180\"\n                               data-duration=\"${duration}\">\n                               <i class=\"bi bi bi-stopwatch fs-unset\" style=\"margin-right:0.25em;\"></i>\n                               <span>${convertSecondsToMMSS(duration)}</span></span></div>`);\n\n            let timer, alarm;\n            if (timer) {\n                clearInterval(timer);\n            }\n            const intervalfunction = function() {\n                timer = setInterval(() => {\n                    $(`.annotation-content#${id}`).addClass('running');\n                    let time = $(`.annotation-content#${id}`).data('duration');\n                    time--;\n                    $(`.annotation-content#${id} span`).text(convertSecondsToMMSS(time));\n                    $(`.annotation-content#${id}`).data('duration', time);\n                    if (prop.playalarmsound.playsoundatinterval == '1'\n                        && time % (prop.playalarmsound.intervaltime * 60) == 0) {\n                        if (prop.playalarmsound.playsoundatend == 1) {\n                            alarm = new Audio(M.cfg.wwwroot + '/mod/interactivevideo/sounds/short-alarm.mp3');\n                            alarm.play();\n                        }\n                    }\n                    if (time < 0) {\n                        clearInterval(timer);\n                        if (prop.playalarmsound.playsoundatend == 1) {\n                            alarm = new Audio(M.cfg.wwwroot + '/mod/interactivevideo/sounds/alarm.mp3');\n                            alarm.play();\n                            alarm.onplay = function() {\n                                $(`.annotation-content#${id}`).addClass('pulse');\n                            };\n                            alarm.onended = function() {\n                                $(`.annotation-content#${id}`).removeClass('pulse');\n                            };\n                        }\n                        $(`.annotation-content#${id}`).removeClass('running');\n                        $(`.annotation-content#${id} span`).text(convertSecondsToMMSS(duration));\n                        $(`.annotation-content#${id}`).data('duration', duration);\n                    }\n                }, 1000);\n            };\n\n            if (!self.isEditMode()) {\n                intervalfunction();\n                $videoWrapper.off('click', `.annotation-content#${id}`).on('click', `.annotation-content#${id}`, function(e) {\n                    e.stopImmediatePropagation();\n                    if (prop.allowpause == 1) {\n                        if ($(this).hasClass('running')) {\n                            clearInterval(timer);\n                            if (alarm) {\n                                alarm.pause();\n                            }\n                            $(this).removeClass('running');\n                        } else {\n                            intervalfunction();\n                        }\n                    } else if ($(this).data('duration') == duration) {\n                        intervalfunction();\n                    }\n                });\n            }\n\n            $(document).one('iv:playerSeek', function() {\n                clearInterval(timer);\n            });\n\n            position.width = 0;\n\n            wrapper.css(position);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n            recalculatingTextSize(wrapper, true);\n        };\n\n        const renderTextblock = (wrapper, item, prop, id, position) => {\n            const textparts = prop.formattedlabel.split('\\r\\n');\n            let textblock = '<div class=\"d-flex flex-column\">';\n            textparts.forEach((part) => {\n                if (part.trim() == '') {\n                    return;\n                }\n                textblock += `<span class=\"text-row text-nowrap text-${prop.alignment}\"\n                                 style=\"font-family: ${prop.textfont != '' ? prop.textfont : 'inherit'}\">${part}</span>`;\n            });\n            textblock += '</div>';\n            if (prop.url != undefined && prop.url != '') {\n                wrapper.append(`<a id=\"${id}\"\n                                     class=\"annotation-content d-block ${prop.shadow == '1' ? 'text-shadow' : ''}\"\n                                      href=\"${prop.url}\" target=\"_blank\">${textblock}</a>`);\n                wrapper.addClass('clickable');\n            } else {\n                wrapper.append(`<div id=\"${id}\"\n                                     class=\"annotation-content ${prop.shadow == '1' ? 'text-shadow' : ''}\n                                     \">${textblock}</div>`);\n            }\n            wrapper.position.width = 0;\n            wrapper.css(position);\n            const style = {\n                'font-size': item.position.fontSize,\n                'line-height': item.position.lineHeight,\n                'font-weight': prop.bold == '1' ? 'bold' : 'normal',\n                'font-style': prop.italic == '1' ? 'italic' : 'normal',\n                'text-decoration': prop.underline == '1' ? 'underline' : 'none',\n                'color': prop.textcolor,\n                'background': prop.bgcolor,\n                'border-radius': prop.rounded == '1' ? '0.3em' : '0',\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n            recalculatingTextSize(wrapper, false, true);\n        };\n\n        const renderShape = (wrapper, item, prop, id, position) => {\n            const parts = prop.timestamp.split(':');\n            const timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n            if (prop.gotourl != '') {\n                wrapper.append(`<a href=\"${prop.gotourl}\" target=\"_blank\"><div id=\"${id}\"\n                             class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\"\n                              style=\"width: 100%; height: 100%;\"></div></a>`);\n                wrapper.addClass('clickable');\n            } else {\n                if (!self.isEditMode()) {\n                    if (timestamp == 0) {\n                        wrapper.addClass('no-pointer');\n                    } else {\n                        wrapper.addClass('clickable');\n                    }\n                }\n                wrapper.append(`<div id=\"${id}\" class=\"annotation-content ${prop.shadow == '1' ? 'shadow' : ''}\n                                 ${timestamp > 0 ? 'cursor-pointer' : ''}\"\n                             ${timestamp > 0 ? 'data-timestamp=\"' + timestamp + '\"' : ''}\n                             style=\"width: 100%; height: 100%;\"></div>`);\n            }\n            wrapper.css(position);\n            const style = {\n                'background': prop.bgcolor,\n                'border-width': prop.borderwidth,\n                'border-color': prop.bordercolor,\n                'border-style': 'solid',\n                'opacity': prop.opacity / 100,\n            };\n            if (prop.shape == 'circle') {\n                style['border-radius'] = '50%';\n            } else if (prop.shape == 'rectangle') {\n                style['border-radius'] = prop.rounded == '1' ? '1em' : '0';\n            }\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n        };\n\n        const renderHotspot = (wrapper, item, prop, id, position) => {\n            wrapper.append(`<div id=\"${id}\" class=\"annotation-content shadow-sm pulse\" role=\"button\"></div>`);\n            position['aspect-ratio'] = '1';\n            wrapper.css(position);\n            const style = {\n                'background-color': prop.color,\n                'opacity': prop.opacity / 100,\n                'border-radius': '50%',\n                'aspect-ratio': '1',\n            };\n            wrapper.find('.annotation-content').css(style);\n            $videoWrapper.find(`#canvas`).append(wrapper);\n\n            if (!self.isEditMode()) {\n                if (prop.usemodal == '1') {\n                    wrapper.attr({\n                        'data-toggle': 'modal',\n                    });\n                } else {\n                    wrapper.attr({\n                        'tabindex': -1,\n                        'data-trigger': 'manual',\n                        'data-boundary': 'viewport',\n                        'data-placement': 'auto',\n                        'data-html': 'true',\n                        'data-content': '<div class=\"loader\"></div>',\n                        'data-title': prop.formattedtitle\n                            + `<i class=\"bi bi-x-circle-fill ml-auto popover-dismiss cursor-pointer\"\n                                         style=\"font-size:1.5em;\"></i>`,\n                    });\n\n                    wrapper.popover({\n                        container: '#wrapper',\n                        html: true,\n                        template: `<div class=\"popover inlineannotation-popover id-${id}\"\n                                     role=\"tooltip\"><div class=\"arrow\"></div>\n                                     <h3 class=\"popover-header d-flex justify-content-between\"></h3>\n                                     <div class=\"popover-body rounded\"></div>${prop.url != '' ?\n                                `<div class=\"popup-footer bg-light p-2 rounded-bottom\"><a href=\"${prop.url}\"\n                                          class=\"d-block w-100 text-right rotatex-360\" target=\"_blank\">\n                                          <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}</div>`,\n                    });\n\n                    wrapper.on('shown.bs.popover', async function() {\n                        let $body = $(`.popover.id-${id} .popover-body`);\n                        const html = await self.formatContent(prop.content.text, annotation.contextid);\n                        $body.html(html);\n                        notifyFilter($body);\n                        wrapper.popover('update');\n                    });\n                    if (prop.openbydefault == '1') {\n                        wrapper.popover('show');\n                    }\n                }\n            }\n        };\n\n        const renderItems = (elements, actives, update) => {\n            if (!update) { // Clear the canvas if it is a new start.\n                $videoWrapper.find(`#canvas`).empty();\n            }\n\n            if (elements.length == 0) {\n                if (actives) {\n                    actives.forEach((active) => {\n                        $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${active}\"]`).addClass('active');\n                    });\n                }\n            } else {\n                let count = 0;\n                elements.forEach((item) => {\n                    let prop = item.properties;\n                    let type = item.type;\n                    let id = item.id;\n                    let position = item.position;\n                    let wrapper = $(`<div class=\"annotation-wrapper\" data-group=\"${position.group}\" data-anno=\"${annotation.id}\"\n                     data-item=\"${id}\" data-type=\"${type}\" data-property='${JSON.stringify(prop)}'></div>`);\n                    if (prop.resizable == '1' || self.isEditMode()) {\n                        wrapper.addClass('resizable');\n                        wrapper.attr('tabindex', 0);\n                    }\n\n                    switch (type) {\n                        case 'image':\n                            renderImage(wrapper, item, prop, id, position);\n                            break;\n                        case 'video':\n                            renderVideo(wrapper, item, prop, id, position);\n                            break;\n                        case 'file':\n                        case 'audio':\n                            renderFile(wrapper, item, prop, id, position);\n                            break;\n                        case 'navigation':\n                            renderNavigation(wrapper, item, prop, id, position);\n                            break;\n                        case 'stopwatch':\n                            renderStopwatch(wrapper, item, prop, id, position);\n                            break;\n                        case 'textblock':\n                            renderTextblock(wrapper, item, prop, id, position);\n                            break;\n                        case 'shape':\n                            renderShape(wrapper, item, prop, id, position);\n                            break;\n                        case 'hotspot':\n                            renderHotspot(wrapper, item, prop, id, position);\n                            break;\n                    }\n\n                    count++;\n                    if (count == elements.length) {\n                        $videoWrapper.find(`#canvas .annotation-wrapper.resizable`).draggable({\n                            containment: \"#canvas\",\n                            cursor: \"move\",\n                            grid: [1, 1],\n                            handle: '.annotation-content',\n                            start: function() {\n                                // Get all the selected elements\n                                if (!$(this).hasClass('active')) {\n                                    $(this).trigger('click');\n                                }\n                                let $selected = $videoWrapper.find('#canvas .annotation-wrapper.active');\n                                $selected.each(function() {\n                                    $(this).data('startPosition', $(this).position());\n                                });\n                            },\n                            drag: function(event, ui) {\n                                let $selected = $videoWrapper.find('#canvas .annotation-wrapper.active');\n                                let left = ui.originalPosition.left - ui.position.left;\n                                let top = ui.originalPosition.top - ui.position.top;\n                                let positions = $selected.map(function() {\n                                    return {\n                                        id: $(this).data('item'),\n                                        left: $(this).position().left,\n                                        top: $(this).position().top,\n                                        bottom: $(this).position().top + $(this).height(),\n                                        right: $(this).position().left + $(this).width(),\n                                    };\n                                }).get();\n\n                                if (positions.find(x => x.left < 0)) {\n                                    // Sort the elements by left position to get the leftmost element\n                                    positions.sort((a, b) => a.left - b.left);\n                                    let onLeft = positions.find(x => x.left < 0);\n                                    let id = onLeft.id;\n                                    let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                    target.css('left', 0);\n                                    let distance = target.data('startPosition').left;\n                                    ui.position.left = ui.originalPosition.left - distance;\n                                    left = ui.originalPosition.left - ui.position.left;\n                                }\n\n                                if (positions.find(x => x.top < 0)) {\n                                    positions.sort((a, b) => a.top - b.top);\n                                    let onTop = positions.find(x => x.top < 0);\n                                    let id = onTop.id;\n                                    let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                    target.css('top', 0);\n                                    let distance = target.data('startPosition').top;\n                                    ui.position.top = ui.originalPosition.top - distance;\n                                    top = ui.originalPosition.top - ui.position.top;\n                                }\n\n                                if (positions.find(x => x.right > $('#canvas').width())) {\n                                    positions.sort((a, b) => a.right - b.right);\n                                    let onRight = positions.find(x => x.right > $('#canvas').width());\n                                    let id = onRight.id;\n                                    let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                    target.css('left', ($('#canvas').width() - target.width() - 1) + 'px');\n                                    let distance = target.data('startPosition').left - target.position().left;\n                                    ui.position.left = ui.originalPosition.left - distance;\n                                    left = ui.originalPosition.left - ui.position.left;\n                                }\n\n                                if (positions.find(x => x.bottom > $('#canvas').height())) {\n                                    positions.sort((a, b) => a.bottom - b.bottom);\n                                    let onBottom = positions.find(x => x.bottom > $('#canvas').height());\n                                    let id = onBottom.id;\n                                    let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                    target.css('top', ($('#canvas').height() - target.height() - 1) + 'px');\n                                    let distance = target.data('startPosition').top - target.position().top;\n                                    ui.position.top = ui.originalPosition.top - distance;\n                                    top = ui.originalPosition.top - ui.position.top;\n                                }\n\n                                $selected.not(this).each(function() {\n                                    let $this = $(this);\n                                    const position = $this.data('startPosition');\n                                    $this.css({\n                                        left: (position.left - left) + 'px',\n                                        top: (position.top - top) + 'px',\n                                    });\n                                });\n                                updatePositionInfo($(this));\n                            },\n                            stop: function() {\n                                if (self.isEditMode()) {\n                                    let $selected = $videoWrapper.find('#canvas .annotation-wrapper.active');\n                                    let positions = $selected.map(function() {\n                                        return {\n                                            id: $(this).data('item'),\n                                            left: $(this).position().left,\n                                            top: $(this).position().top,\n                                            bottom: $(this).position().top + $(this).height(),\n                                            right: $(this).position().left + $(this).width(),\n                                        };\n                                    }).get();\n\n                                    if (positions.find(x => x.left < 0)) {\n                                        positions.sort((a, b) => a.left - b.left);\n                                        let onLeft = positions.find(x => x.left < 0);\n                                        let id = onLeft.id;\n                                        let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', 0);\n                                        let distance = target.data('startPosition').left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.top < 0)) {\n                                        positions.sort((a, b) => a.top - b.top);\n                                        let onTop = positions.find(x => x.top < 0);\n                                        let id = onTop.id;\n                                        let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', 0);\n                                        let distance = target.data('startPosition').top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.right > $('#canvas').width())) {\n                                        positions.sort((a, b) => a.right - b.right);\n                                        let onRight = positions.find(x => x.right > $('#canvas').width());\n                                        let id = onRight.id;\n                                        let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('left', ($('#canvas').width() - target.width() - 1) + 'px');\n                                        let distance = target.data('startPosition').left - target.position().left;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newLeft = position.left - distance;\n                                            $this.css('left', newLeft + 'px');\n                                        });\n                                    }\n\n                                    if (positions.find(x => x.bottom > $('#canvas').height())) {\n                                        positions.sort((a, b) => a.bottom - b.bottom);\n                                        let onBottom = positions.find(x => x.bottom > $('#canvas').height());\n                                        let id = onBottom.id;\n                                        let target = $videoWrapper.find(`#canvas .annotation-wrapper[data-item=\"${id}\"]`);\n                                        target.css('top', ($('#canvas').height() - target.height() - 1) + 'px');\n                                        let distance = target.data('startPosition').top - target.position().top;\n                                        $selected.each(function() {\n                                            let $this = $(this);\n                                            let position = $this.data('startPosition');\n                                            let newTop = position.top - distance;\n                                            $this.css('top', newTop + 'px');\n                                        });\n                                    }\n\n                                    getItems(false);\n                                    updatePositionInfo($(this));\n                                    $selected = $selected.map(function() {\n                                        return $(this).data('item');\n                                    }).get();\n\n                                    saveTracking($selected);\n                                }\n                            }\n                        });\n\n                        $videoWrapper.find('#canvas .annotation-wrapper.resizable').resizable({\n                            containment: \"#canvas\",\n                            handles: \"all\",\n                            grid: [1, 1],\n                            minHeight: 1,\n                            minWidth: 1,\n                            resize: function(event) {\n                                if (self.isEditMode()) {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'audio' || type == 'stopwatch' || type == 'navigation'\n                                        || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape' && event.ctrlKey) {\n                                        $(this).resizable('option', 'aspectRatio', 1);\n                                    }\n                                    updatePositionInfo($(this));\n                                }\n                            },\n                            stop: function() {\n                                if (self.isEditMode()) {\n                                    let type = $(this).data('type');\n                                    if (type == 'file' || type == 'navigation' || type == 'textblock') {\n                                        recalculatingTextSize($(this), type != 'textblock', type == 'textblock');\n                                    } else if (type == 'shape') {\n                                        $(this).resizable('option', 'aspectRatio', false);\n                                    }\n                                    recalculatingSize($(this));\n                                    getItems(false);\n                                    saveTracking([$(this).data('item')]);\n                                    $(this).trigger('click');\n                                }\n                            }\n                        });\n                    }\n\n                    if (type != 'shape') {\n                        wrapper.on('mouseover', function() {\n                            if (!$(this).hasClass('resizable')) {\n                                return;\n                            }\n\n                            let aspectRatio =\n                                $(this).find('.annotation-content').width() / $(this).find('.annotation-content').height();\n                            if (wrapper.width() / wrapper.height() != aspectRatio && (type == 'image' || type == 'video')) {\n                                $(this).height((wrapper.width() / aspectRatio));\n                            }\n                            try {\n                                $(this).resizable('option', 'aspectRatio', $(this).find('.annotation-content').outerWidth() /\n                                    $(this).find('.annotation-content').outerHeight());\n                            } catch (e) {\n                                // Do nothing.\n                            }\n\n                        });\n                    }\n\n                    if (actives && actives.includes(id)) {\n                        wrapper.addClass('active');\n                        if (actives.length == 1) {\n                            setTimeout(function() {\n                                wrapper.trigger('mouseover');\n                                wrapper.trigger('click');\n                            }, 500);\n                        }\n                    }\n\n                });\n\n                // Handle behavior for each item\n                if (!self.isEditMode()) {\n                    $videoWrapper.off('click', `#canvas .annotation-wrapper`).on('click', `#canvas .annotation-wrapper`,\n                        function(e) {\n                            e.stopImmediatePropagation();\n                            let wrapper = $(this);\n                            let type = wrapper.data('type');\n                            switch (type) {\n                                case 'video':\n                                    var video = wrapper.find('video')[0];\n                                    if (video.paused || video.ended || video.currentTime === 0) {\n                                        video.play();\n                                    } else {\n                                        video.pause();\n                                    }\n                                    break;\n                                case 'navigation':\n                                case 'image':\n                                case 'shape':\n                                    var navigation = wrapper.find('.annotation-content');\n                                    if (self.isBetweenStartAndEnd(navigation.data('timestamp'))) {\n                                        self.player.seek(navigation.data('timestamp'));\n                                        self.player.play();\n                                    }\n                                    break;\n                                case 'hotspot':\n                                    var viewertype = wrapper.data('toggle');\n                                    var hotspotid = wrapper.data('item');\n                                    var hotspot = items.find(x => x.id == hotspotid);\n                                    if (viewertype == 'modal') {\n                                        let title = hotspot.properties.formattedtitle;\n                                        let content = hotspot.properties.content.text;\n                                        let url = hotspot.properties.url;\n                                        let modal = `<div class=\"modal fade\" id=\"annotation-modal\" role=\"dialog\"\n                                aria-labelledby=\"annotation-modal\"\n                             aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n                             <div class=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\" role=\"document\">\n                                <div class=\"modal-content rounded-lg\">\n                                    <div class=\"modal-header d-flex align-items-center shadow-sm pr-0\" id=\"title\">\n                                        <h5 class=\"modal-title text-truncate mb-0\">${title}</h5>\n                                        <button class=\"btn mx-2 p-0 close\" aria-label=\"Close\" data-dismiss=\"modal\">\n                                            <i class=\"bi bi-x-lg fa-fw\" style=\"font-size: x-large;\"></i>\n                                        </button>\n                                    </div>\n                                    <div class=\"modal-body\" id=\"content\">\n                                    <div class=\"loader\"></div>\n                                    </div>\n                                    ${url != '' ? `<div class=\"modal-footer bg-light p-2 rounded-bottom\">\n                                        <a href=\"${url}\" class=\"d-block w-100 text-right rotatex-360\" target=\"_blank\">\n                                        <i class=\"bi bi-arrow-right\"><i></i></i></a></div>` : ''}\n                                    </div>\n                                </div>\n                                </div>`;\n                                        $('#wrapper').append(modal);\n                                        $('#annotation-modal').modal('show');\n                                        $('#annotation-modal').on('hide.bs.modal', function() {\n                                            $('#annotation-modal').remove();\n                                        });\n                                        $('#annotation-modal').on('shown.bs.modal', async function() {\n                                            $('#annotation-modal .modal-body').fadeIn(300);\n                                            let $body = $('#annotation-modal .modal-body');\n                                            const html = await self.formatContent(content, annotation.contextid);\n                                            $body.html(html);\n                                            notifyFilter($body);\n                                        });\n                                    } else {\n                                        wrapper.popover('show');\n                                    }\n                                    break;\n                            }\n                        });\n\n                    $playerWrapper.off('click', `.popover-dismiss`).on('click', `.popover-dismiss`, function(e) {\n                        e.stopImmediatePropagation();\n                        $(this).closest('.popover').remove();\n                    });\n                }\n            }\n        };\n\n        // Check resize on video wrapper resize\n        let vwrapper = document.querySelector('#video-wrapper');\n\n        let resizeObserver = new ResizeObserver(() => {\n            let existingwrapper = $(`#video-wrapper`).find(`#canvas .annotation-wrapper`);\n            if (existingwrapper.length == 0) {\n                return;\n            }\n            existingwrapper.each(function() {\n                let wrapper = $(this);\n                let type = wrapper.data('type');\n                setTimeout(() => {\n                    if (type == 'textblock'\n                        || type == 'audio' || type == 'stopwatch' || type == 'file' || type == 'navigation') {\n                        recalculatingTextSize(wrapper, type != 'textblock', type == 'textblock');\n                    } else if (type == 'video') {\n                        recalculatingSize(wrapper);\n                        let aspectRatio =\n                            wrapper.find('.annotation-content').width() / wrapper.find('.annotation-content').height();\n                        if (wrapper.width() / wrapper.height() != aspectRatio) {\n                            $(this).height((wrapper.width() / aspectRatio));\n                        }\n                    }\n                }, 100);\n                $('#canvas').css('font-size', $('#canvas').width() / 75 + 'px');\n            });\n        });\n        resizeObserver.observe(vwrapper);\n\n        // Ready to render items.\n        let items = [];\n        let tracking = [];\n        let trackingIndex = 0;\n        if (data.items != '' && data.items !== null) {\n            items = JSON.parse(data.items);\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: null,\n                at: new Date().getTime(),\n            });\n        }\n        let draftitemid = data.draftitemid;\n\n        renderItems(items, null, false);\n\n        // Render the inline annotation toolbar\n        if (this.isEditMode()) {\n            $('#inlineannotation-btns').remove();\n            let inlineannotationitems = [\n                {\n                    'icon': 'bi bi-image',\n                    'type': 'media',\n                    'mediatype': 'image',\n                    'label': M.util.get_string('image', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-film',\n                    'type': 'media',\n                    'mediatype': 'video',\n                    'label': M.util.get_string('video', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-volume-up',\n                    'type': 'media',\n                    'mediatype': 'audio',\n                    'label': M.util.get_string('audio', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-alphabet-uppercase',\n                    'type': 'textblock',\n                    'mediatype': 'textblock',\n                    'label': M.util.get_string('text', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-circle-square',\n                    'type': 'shape',\n                    'mediatype': 'shape',\n                    'label': M.util.get_string('shape', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-stopwatch',\n                    'type': 'stopwatch',\n                    'mediatype': 'stopwatch',\n                    'label': M.util.get_string('stopwatch', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-file-earmark-arrow-down',\n                    'type': 'media',\n                    'mediatype': 'file',\n                    'label': M.util.get_string('inlinefile', 'ivplugin_inlineannotation'),\n                },\n                {\n                    'icon': 'bi bi-sign-turn-right',\n                    'type': 'navigation',\n                    'mediatype': 'navigation',\n                    'label': M.util.get_string('navigation', 'ivplugin_inlineannotation')\n                },\n                {\n                    'icon': 'bi bi-plus-circle',\n                    'type': 'hotspot',\n                    'mediatype': 'hotspot',\n                    'label': M.util.get_string('hotspot', 'ivplugin_inlineannotation'),\n                }\n            ];\n            const dataForTemplate = {\n                id: annotation.id,\n                items: inlineannotationitems,\n            };\n\n            Templates.render('ivplugin_inlineannotation/toolbar', dataForTemplate).then((html) => {\n                return $videoWrapper.before(html);\n            }).catch(() => {\n                // Do nothing.\n            });\n\n            self.enableColorPicker();\n        }\n\n        $(document).one('iv:playerSeek iv:playerPlaying', function(e) {\n            let newTime = e.detail.time;\n            if (Math.floor(newTime) != annotation.timestamp) {\n                $(`#inlineannotation-btns`).remove();\n                $('.inlineannotation-popover').remove();\n                $videoWrapper.find(`#canvas`).remove();\n            }\n        });\n\n        $playerWrapper.off('click', `#canvas`).on('click', `#canvas`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (!self.isEditMode()) {\n                self.player.play();\n            } else {\n                $videoWrapper.find('#canvas .annotation-wrapper').removeClass('active');\n                $('#inlineannotation-btns .btn').removeClass('active rotatey-360');\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            }\n        });\n\n        // End of view mode.\n        if (!self.isEditMode()) {\n            return;\n        }\n\n        /**\n         * Update tracking data for redo and undo\n         * @param {Array} actives array of active items\n         */\n        const saveTracking = (actives) => {\n            if (trackingIndex < tracking.length - 1) {\n                // Remove all the tracking data after the current index.\n                tracking = tracking.slice(0, trackingIndex + 1);\n            }\n            tracking.push({\n                items: JSON.stringify(items),\n                actives: actives,\n                at: new Date().getTime(),\n            });\n            tracking.sort((a, b) => a.at - b.at);\n            trackingIndex = tracking.length - 1;\n            $('#inlineannotation-btns #undo').removeAttr('disabled');\n            $('#inlineannotation-btns #redo').attr('disabled', 'disabled');\n            if (tracking.length == 1) {\n                $('#inlineannotation-btns #undo').attr('disabled', 'disabled');\n            }\n        };\n\n        /**\n         * Order items by layer.\n         * @param {Array} ids array of item ids\n         * @param {String} order asc or desc\n         * @returns {Array} sorted array of item ids\n         */\n        const sortItemsByLayer = (ids, order) => {\n            ids = ids.map(x => x.toString()); // Convert ids to string for consistency.\n            let targetItems = items.filter(item => {\n                const id = item.id.toString();\n                return ids.includes(id);\n            });\n            if (order == 'desc') {\n                targetItems.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            } else {\n                targetItems.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n            }\n\n            return targetItems.map(item => item.id);\n        };\n\n        /**\n         * Get highest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} top z-index\n         */\n        const getTopLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'desc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get lowest z-index.\n         * @param {Array} itms array of items\n         * @returns {Number} bottom z-index\n         */\n        const getBottomLayer = (itms) => {\n            if (itms.length == 0) {\n                return 5;\n            }\n            let ids = itms.map(item => item.id);\n            let sorted = sortItemsByLayer(ids, 'asc');\n            let zindex = itms.find(item => item.id == sorted[0]).position['z-index'];\n            return Number(zindex);\n        };\n\n        /**\n         * Get all items from the annotation-canvas.\n         * @param {Boolean} updateid whether or not to update the id of the item.\n         */\n        const getItems = (updateid) => {\n            let newItems = [];\n            $videoWrapper.find(`#canvas .annotation-wrapper`).each(function(index, element) {\n                const id = $(element).data('item');\n                let item = {\n                    \"type\": $(element).data('type'),\n                    \"position\": recalculatingSize($(element)),\n                };\n                item.id = id;\n                item.properties = items.find(x => x.id == id).properties;\n                if (updateid) {\n                    item.id = new Date().getTime() + index;\n                    $(element).attr('data-item', item.id);\n                }\n                newItems.push(item);\n            });\n            items = newItems;\n            draftStatus = 'draft';\n        };\n\n        $playerWrapper.off('click', `#inlineannotation-btns #save`).on('click', `#inlineannotation-btns #save`, function(e) {\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Encode html tags\n            let cleanItems = JSON.stringify(items).replace(/</g, '&lt;').replace(/>/g, '&gt;');\n            let updateId = $videoWrapper.find('#canvas').data('id');\n            $.ajax({\n                url: M.cfg.wwwroot + '/mod/interactivevideo/ajax.php',\n                method: \"POST\",\n                dataType: \"text\",\n                data: {\n                    action: 'quickeditfield',\n                    sesskey: M.cfg.sesskey,\n                    id: updateId,\n                    field: 'content',\n                    contextid: annotation.contextid,\n                    draftitemid: draftitemid,\n                    value: cleanItems,\n                    cmid: self.cmid,\n                    token: self.token,\n                },\n                success: function(data) {\n                    let updated = JSON.parse(data);\n                    draftStatus = null;\n                    tracking = [];\n                    $('#inlineannotation-btns #redo, #inlineannotation-btns #undo').attr('disabled', 'disabled');\n                    dispatchEvent('annotationupdated', {\n                        annotation: updated,\n                        action: 'edit',\n                    });\n                }\n            });\n        });\n\n        $(document).off('click', `#inlineannotation-btns #closetoolbar`)\n            .on('click', `#inlineannotation-btns #closetoolbar`, function(e) {\n                e.stopImmediatePropagation();\n                if (draftStatus == 'draft') {\n                    Notification.saveCancel(\n                        M.util.get_string('unsavedchange', 'ivplugin_inlineannotation'),\n                        M.util.get_string('unsavedchangeconfirm', 'ivplugin_inlineannotation'),\n                        M.util.get_string('save', 'ivplugin_inlineannotation'),\n                        function() {\n                            // If the user clicks save, save the changes.\n                            $('#inlineannotation-btns #save').trigger('click');\n                            draftStatus = null;\n                            tracking = [];\n                            $(`#inlineannotation-btns #closetoolbar`).trigger('click');\n                        },\n                        function() {\n                            $(`#inlineannotation-btns`).remove();\n                            $('#canvas[data-id=\"' + annotation.id + '\"]').remove();\n                        }\n                    );\n                } else {\n                    $(`#inlineannotation-btns`).remove();\n                    $('#canvas[data-id=\"' + annotation.id + '\"]').remove();\n                }\n            });\n\n        $(document).off('click', `#inlineannotation-btns #hideshow`).on('click', `#inlineannotation-btns #hideshow`, function(e) {\n            e.stopImmediatePropagation();\n            $('#canvas[data-id=\"' + annotation.id + '\"]').toggle();\n            $(this).find('i').toggleClass('bi-eye bi-eye-slash');\n        });\n        /**\n         * Handle form data when adding or editing an item.\n         * @param {Object} newItem data from form submission\n         * @param {String} type type of the item\n         * @param {Boolean} add adding or editing\n         */\n        const handleFormData = (newItem, type, add) => {\n            switch (type) {\n                case 'audio':\n                case 'file':\n                    if (add) {\n                        newItem.position.height = '40px';\n                        newItem.position.width = '130px';\n                    }\n                    break;\n                case 'textblock':\n                    if (add) {\n                        newItem.position.fontSize = '16px';\n                        newItem.position.lineHeight = '20px';\n                    }\n                    break;\n                case 'navigation':\n                case 'stopwatch':\n                    if (add) {\n                        newItem.position.height = '40px';\n                        newItem.position.width = '130px';\n                    }\n                    break;\n                case 'shape':\n                    if (add) {\n                        newItem.position.height = '100px';\n                        newItem.position.width = '100px';\n                    }\n                    break;\n                case 'video':\n                case 'image':\n                    newItem.position.height = 'auto';\n                    break;\n                case 'hotspot':\n                    if (add) {\n                        newItem.position.width = '5%';\n                    }\n                    break;\n            }\n\n            items.push(newItem);\n            saveTracking([newItem.id]);\n            renderItems([newItem], [newItem.id], true);\n        };\n\n        $playerWrapper.off('click', `#inlineannotation-btns .add-ia`).on('click', `#inlineannotation-btns .add-ia`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annoid = $videoWrapper.find(`#canvas`).data('id');\n            let type = $(this).attr('data-mediatype');\n            if (type == 'stopwatch' && items.find(x => x.type == 'stopwatch')) {\n                self.addNotification(M.util.get_string('onlyonestopwatch', 'ivplugin_inlineannotation'), 'danger');\n                return;\n            }\n            let iaform = new ModalForm({\n                formClass: \"ivplugin_inlineannotation\\\\items\\\\\" + $(this).attr('data-type'),\n                args: {\n                    contextid: annotation.contextid,\n                    id: 0,\n                    type: type,\n                    annotationid: annoid,\n                },\n                modalConfig: {\n                    title: M.util.get_string('addinlineannotation', 'ivplugin_inlineannotation',\n                        M.util.get_string(type, 'ivplugin_inlineannotation')),\n                }\n            });\n\n            iaform.show();\n\n            iaform.addEventListener(iaform.events.LOADED, () => {\n                iaform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n                if (type == 'navigation' || type == 'image' || type == 'shape') {\n                    $(document).on('change', '[name=\"timestamp\"]', function(e) {\n                        e.preventDefault();\n                        let parts = $(this).val().split(':');\n                        let timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!self.isBetweenStartAndEnd(timestamp)) {\n                            let message = M.util.get_string('timemustbebetweenstartandendtime', 'ivplugin_inlineannotation', {\n                                \"start\": self.convertSecondsToHMS(self.start),\n                                \"end\": self.convertSecondsToHMS(self.end),\n                            });\n                            self.addNotification(message);\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n\n                        // Make sure the timestamp is not in the skip segment.\n                        if (self.isInSkipSegment(timestamp)) {\n                            self.addNotification(M.util.get_string('interactionisbetweentheskipsegment',\n                                'ivplugin_inlineannotation'));\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n                    });\n                }\n            });\n\n            iaform.addEventListener(iaform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                const highestOrder = getTopLayer(items);\n                let left = Math.random() * 100;\n                let top = Math.random() * 100;\n                let newItem = {\n                    \"id\": new Date().getTime(),\n                    \"type\": type,\n                    \"position\": {\n                        \"width\": \"30%\",\n                        \"left\": left + \"px\",\n                        \"top\": top + \"px\",\n                        \"z-index\": highestOrder + 1,\n                    },\n                    'properties': e.detail,\n                };\n                handleFormData(newItem, type, true);\n            });\n        });\n\n        $playerWrapper.off('click', `#inlineannotation-btns #edit`).on('click', `#inlineannotation-btns #edit`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let annnoid = $videoWrapper.find(`#canvas`).data('id');\n            let active = $('#edit-btns').attr('data-active');\n            getItems(false);\n            let item = items.find(x => x.id == active);\n            let type = item.type;\n            let formdata = {...item.properties};\n            formdata.contextid = annotation.contextid;\n            formdata.id = item.id;\n            formdata.annotationid = annnoid;\n            formdata.type = type;\n            let editform = new ModalForm({\n                formClass: \"ivplugin_inlineannotation\\\\items\\\\\" +\n                    (type == 'image' || type == 'video' || type == 'audio' || type == 'file' ? 'media' : type),\n                args: formdata,\n                modalConfig: {\n                    title: M.util.get_string('editinlineannotation', 'ivplugin_inlineannotation',\n                        M.util.get_string(type, 'ivplugin_inlineannotation')),\n                }\n            });\n\n            editform.show();\n\n            editform.addEventListener(editform.events.LOADED, () => {\n                editform.modal.modal.draggable({\n                    handle: \".modal-header\",\n                });\n                if (type == 'navigation' || type == 'image' || type == 'shape') {\n                    $(document).on('change', '[name=\"timestamp\"]', function(e) {\n                        e.preventDefault();\n                        let parts = $(this).val().split(':');\n                        let timestamp = Number(parts[0]) * 3600 + Number(parts[1]) * 60 + Number(parts[2]);\n                        if (!self.isBetweenStartAndEnd(timestamp)) {\n                            let message = M.util.get_string('timemustbebetweenstartandendtime', 'mod_interactivevideo', {\n                                \"start\": self.convertSecondsToHMS(self.start),\n                                \"end\": self.convertSecondsToHMS(self.end),\n                            });\n                            self.addNotification(message);\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n\n                        // Make sure the timestamp is not in the skip segment.\n                        if (self.isInSkipSegment(timestamp)) {\n                            self.addNotification(M.util.get_string('interactionisbetweentheskipsegment', 'mod_interactivevideo'));\n                            $(this).val($(this).attr('data-initial-value'));\n                            return;\n                        }\n                    });\n                }\n            });\n\n            editform.addEventListener(editform.events.FORM_SUBMITTED, (e) => {\n                e.stopImmediatePropagation();\n                getItems(false);\n                item = items.find(x => x.id == active);\n                item.properties = e.detail;\n                // Remove the item from the annotation-canvas\n                $videoWrapper.find(`.annotation-wrapper[data-item=\"${active}\"]`).remove();\n                items = items.filter(x => x.id != active);\n                handleFormData(item, type, false);\n            });\n        });\n\n        $videoWrapper.off('click', `#canvas .annotation-wrapper`).on('click', `#canvas .annotation-wrapper`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (!e.ctrlKey && !e.metaKey) {\n                $videoWrapper.find('#canvas .annotation-wrapper').removeClass('active');\n                $(this).addClass('active');\n                this.focus();\n                recalculatingSize($(this));\n            } else {\n                if ($(this).hasClass('active')) {\n                    $(this).removeClass('active');\n                } else {\n                    $(this).addClass('active');\n                    this.focus();\n                }\n            }\n\n            if (!isNaN(Number($(this).data('group')))) {\n                let group = $(this).data('group');\n                $videoWrapper.find(`#canvas .annotation-wrapper[data-group=\"${group}\"]`).addClass('active');\n            }\n\n            recalculatingSize($(this));\n\n            let activewrapper = $videoWrapper.find('#canvas .annotation-wrapper.active');\n            if (activewrapper.length == 0) {\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n                $('#inlineannotation-btns #edit').attr('disabled', 'disabled');\n                $('#inlineannotation-btns #edit').removeAttr('disabled');\n            } else {\n                let dataActive = activewrapper.map(function() {\n                    return $(this).data('item');\n                }).get();\n                $('#edit-btns').attr('data-active', dataActive).addClass('d-flex').removeClass('d-none');\n                if (activewrapper.length > 1) {\n                    $('#inlineannotation-btns #edit').attr('disabled', 'disabled');\n                    $('#edit-btns #position').addClass('d-none');\n                } else {\n                    $('#inlineannotation-btns #edit').removeAttr('disabled');\n                    $('#edit-btns #position').removeClass('d-none');\n                }\n            }\n\n            // Enable ungroup button if the active items are grouped.\n            let grouping = activewrapper.map(function() {\n                if (isNaN($(this).data('group')) || $(this).data('group') == '') {\n                    return '';\n                }\n                return $(this).data('group');\n            }).get();\n\n            grouping = [...new Set(grouping)];\n\n            if (activewrapper.length < 2) {\n                $('#inlineannotation-btns #ungroup, #inlineannotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n            } else {\n                if (grouping.length == 1) {\n                    if (isNaN(grouping[0]) || grouping[0] == '') {\n                        $('#inlineannotation-btns #ungroup').attr('disabled', 'disabled').addClass('d-none');\n                        $('#inlineannotation-btns #group').removeAttr('disabled').removeClass('d-none');\n                    } else {\n                        $('#inlineannotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n                        $('#inlineannotation-btns #group').attr('disabled', 'disabled').addClass('d-none');\n                    }\n                } else if (grouping.length > 1) {\n                    $('#inlineannotation-btns #ungroup, #inlineannotation-btns #group').removeAttr('disabled')\n                        .removeClass('d-none');\n                }\n            }\n        });\n\n        $videoWrapper.off('dblclick', '#canvas .annotation-wrapper').on('dblclick', '#canvas .annotation-wrapper', function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).trigger('click');\n            $('#inlineannotation-btns #edit').trigger('click');\n        });\n\n        $(document).off('click', `#inlineannotation-btns #undo`).on('click', `#inlineannotation-btns #undo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == 0) {\n                return;\n            }\n            trackingIndex--;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            if (trackingIndex == 0) {\n                $('#inlineannotation-btns #undo').attr('disabled', 'disabled');\n                $('#inlineannotation-btns #redo').removeAttr('disabled');\n            } else {\n                $('#inlineannotation-btns #undo').removeAttr('disabled');\n                if (trackingIndex == tracking.length - 1) {\n                    $('#inlineannotation-btns #redo').attr('disabled', 'disabled');\n                } else {\n                    $('#inlineannotation-btns #redo').removeAttr('disabled');\n                }\n            }\n        });\n\n        $(document).off('click', `#inlineannotation-btns #redo`).on('click', `#inlineannotation-btns #redo`, async function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            if (trackingIndex == tracking.length - 1) {\n                return;\n            }\n            trackingIndex++;\n            const instance = tracking[trackingIndex];\n            items = JSON.parse(instance.items);\n            renderItems(items, instance.actives, false);\n            if (trackingIndex == tracking.length - 1) {\n                $('#inlineannotation-btns #redo').attr('disabled', 'disabled');\n                $('#inlineannotation-btns #undo').removeAttr('disabled');\n            } else {\n                $('#inlineannotation-btns #redo').removeAttr('disabled');\n                if (trackingIndex == 0) {\n                    $('#inlineannotation-btns #undo').attr('disabled', 'disabled');\n                } else {\n                    $('#inlineannotation-btns #undo').removeAttr('disabled');\n                }\n            }\n        });\n\n        const updateOrder = (active, direction) => {\n            // First sort items by z-index descending\n            getItems(false);\n            items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n            let activeIndex = items.findIndex(x => x.id == active);\n            let activeItem = items[activeIndex];\n            let currentzIndex = activeItem.position['z-index'];\n            let affectedItem = null;\n            let affectedItemIndex = null;\n            if (direction == 'up') {\n                if (activeIndex == 0) {\n                    return;\n                }\n                affectedItemIndex = activeIndex - 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            } else {\n                if (activeIndex == items.length - 1) {\n                    return;\n                }\n                affectedItemIndex = activeIndex + 1;\n                affectedItem = items[affectedItemIndex];\n                activeItem.position['z-index'] = affectedItem.position['z-index'];\n                affectedItem.position['z-index'] = currentzIndex;\n            }\n            items[activeIndex] = activeItem;\n            items[affectedItemIndex] = affectedItem;\n            $(`.annotation-wrapper[data-item=\"${active}\"]`).css(activeItem.position);\n            $(`.annotation-wrapper[data-item=\"${affectedItem.id}\"]`).css(affectedItem.position);\n            saveTracking([active]);\n        };\n\n        // Group the active items\n        $(document).off('click', `#inlineannotation-btns #group`).on('click', `#inlineannotation-btns #group`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $('#inlineannotation-btns #ungroup').removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('#canvas .annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            const group = new Date().getTime();\n            active.forEach((item, i) => {\n                let activeItem = $(`#canvas .annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                target.position.group = group;\n                items[targetIndex] = target;\n                activeItem.remove();\n                renderItems([target], null, true);\n                if (i == active.length - 1) {\n                    renderItems([], active, true);\n                }\n            });\n            saveTracking(active);\n        });\n\n        $(document).off('click', `#inlineannotation-btns #ungroup`).on('click', `#inlineannotation-btns #ungroup`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            $(this).attr('disabled', 'disabled').addClass('d-none');\n            $(`#inlineannotation-btns #group`).removeAttr('disabled').removeClass('d-none');\n            getItems(false);\n            let active = $('#canvas .annotation-wrapper.active').map(function() {\n                return $(this).data('item');\n            }).get();\n            active.forEach((item, i) => {\n                let activeItem = $(`#canvas .annotation-wrapper[data-item=\"${item}\"]`);\n                let targetIndex = items.findIndex(x => x.id == item);\n                let target = JSON.parse(JSON.stringify(items[targetIndex]));\n                delete target.position.group;\n                items[targetIndex] = target;\n                activeItem.remove();\n                renderItems([target], null, true);\n                if (i == active.length - 1) {\n                    renderItems([], active, true);\n                }\n            });\n            saveTracking(active);\n        });\n\n        $playerWrapper.off('click', `#inlineannotation-btns #up`).on('click', `#inlineannotation-btns #up`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const topLayer = getTopLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'desc');\n                let indexes = [];\n                items.sort((a, b) => b.position['z-index'] - a.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == topLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'up');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n        });\n\n        $playerWrapper.off('click', `#inlineannotation-btns #down`).on('click', `#inlineannotation-btns #down`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            const bottomLayer = getBottomLayer(items);\n            // Check if the active elements are already in the correct order based on their index positions in the items array\n            if (active.length > 1) {\n                active = sortItemsByLayer(active, 'asc');\n                let indexes = [];\n                items.sort((a, b) => a.position['z-index'] - b.position['z-index']);\n                active.forEach((item) => {\n                    indexes.push(items.findIndex(x => x.id == item));\n                });\n                indexes.sort((a, b) => a - b);\n                if (Math.abs(indexes[0] - indexes[indexes.length - 1]) == active.length - 1) {\n                    if (Number(items[indexes[0]].position['z-index']) == bottomLayer) {\n                        return;\n                    }\n                }\n            }\n            active.forEach((item) => {\n                updateOrder(item, 'down');\n            });\n            getItems(false);\n            updatePositionInfo($(`.annotation-wrapper[data-item=\"${active[0]}\"]`));\n        });\n\n        $playerWrapper.off('click', `#inlineannotation-btns #delete`).on('click', `#inlineannotation-btns #delete`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active.forEach((item) => {\n                let activeItem = $(`#canvas .annotation-wrapper[data-item=\"${item}\"]`);\n                activeItem.remove();\n                $('#edit-btns').attr('data-active', '').addClass('d-none').removeClass('d-flex');\n            });\n            getItems(false);\n            saveTracking(null);\n        });\n\n        $playerWrapper.off('click', `#inlineannotation-btns #copy`).on('click', `#inlineannotation-btns #copy`, function(e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            getItems(false);\n            // Copy the active item\n            const highestOrder = getTopLayer(items);\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            active = sortItemsByLayer(active, 'asc');\n            let newItems = [];\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`#canvas .annotation-wrapper[data-item=\"${a}\"]`);\n                activeItem.removeClass('active');\n                const item = items.find(x => x.id == a);\n                let newItem = JSON.parse(JSON.stringify(item));\n                newItem.position = recalculatingSize(activeItem);\n                if (item.position.group) {\n                    newItem.position.group = Number(item.position.group) + 1;\n                }\n                newItem.id = new Date().getTime() + i;\n                newItems.push(newItem);\n                newItem.position['z-index'] = Number(highestOrder) + i + 1;\n                items.push(newItem);\n                if (i == active.length - 1) {\n                    const newItemIds = newItems.map(x => x.id);\n                    $('#edit-btns').attr('data-active', newItemIds.join(',')).addClass('d-flex').removeClass('d-none');\n                    renderItems(newItems, newItemIds, true);\n                    // Put focus on the first element\n                    getItems(false);\n                    document.querySelector('.annotation-wrapper.active').focus();\n                    updatePositionInfo($(`.annotation-wrapper[data-item=\"${newItem.id}\"]`));\n                    saveTracking(newItemIds);\n                }\n            }\n        });\n\n        // Move items with keyboard arrow keys, ctrl + up to layer up, and ctrl + down to layer down.\n        $playerWrapper.on('keydown', '#canvas .annotation-wrapper', function(e) {\n            let active = $('#edit-btns').attr('data-active');\n            active = active.split(',');\n            for (let i = 0; i < active.length; i++) {\n                let a = active[i];\n                let activeItem = $(`#canvas .annotation-wrapper[data-item=\"${a}\"]`);\n                if (activeItem != undefined) {\n                    let position = activeItem.position();\n                    position['z-index'] = parseInt(activeItem.css('z-index'));\n                    let ctrl = e.ctrlKey || e.metaKey;\n                    let step = 1;\n                    // Prevent page scroll\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    switch (e.key) {\n                        case 'ArrowUp':\n                            if (position.top > 0) {\n                                position.top = position.top - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowDown':\n                            if (position.top + activeItem.outerHeight() < $videoWrapper.find(`#canvas`).height()) {\n                                position.top = position.top + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowLeft':\n                            if (position.left > 0) {\n                                position.left = position.left - step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'ArrowRight':\n                            if (position.left + activeItem.outerWidth() < $videoWrapper.find(`#canvas`).width()) {\n                                position.left = position.left + step;\n                                saveTracking(active);\n                            }\n                            break;\n                        case 'Delete':\n                            $(`#inlineannotation-btns #delete`).trigger('click');\n                            return;\n                        case 'd': // Ctrl + d to duplicate\n                            if (ctrl) {\n                                $(`#inlineannotation-btns #copy`).trigger('click');\n                            }\n                            return;\n                        default:\n                            return;\n                    }\n                    activeItem.css(position);\n                    recalculatingSize(activeItem);\n                }\n            }\n        });\n\n        $(document).on('annotationdeleted', function(e) {\n            let deleted = e.originalEvent.detail.annotation;\n            let annoid = $videoWrapper.find(`#canvas`).data('id');\n            if (annoid == deleted.id) {\n                $videoWrapper.find(`#canvas[data-id='${annoid}']`).remove();\n                $(`#inlineannotation-btns`).remove();\n            }\n        });\n\n        // Confirm draft saved.\n        window.addEventListener('beforeunload', (e) => {\n            if (draftStatus !== null) {\n                const confirmationMessage = M.util.get_string('unsavedchanges', 'mod_interactivevideo');\n                e.returnValue = confirmationMessage;\n                return confirmationMessage;\n            }\n            return true;\n        });\n    }\n    /**\n     * What happens when an item runs\n     * @param {Object} annotation The annotation object\n     * @returns {void}\n     */\n    async runInteraction(annotation) {\n        this.player.pause();\n        this.renderContainer(annotation);\n        if (this.isEditMode()) {\n            annotation.editmode = true; // Use editmode to render the draft content (i.e draft.php vs plugin.php).\n        }\n        const content = await this.render(annotation, 'json');\n        this.postContentRender(annotation, content);\n    }\n}"],"names":["InlineAnnotation","Base","postEditCallback","roundToTwo","num","Math","round","renderContainer","annotation","videoWrapper","find","remove","append","id","updateAspectRatio","async","video","reset","elem","hasClass","ratio","this","displayoptions","usefixedratio","player","aspectratio","videowrapperaspect","width","height","gap","css","vwrapper","document","querySelector","ResizeObserver","observe","on","postContentRender","data","self","$videoWrapper","$playerWrapper","draftStatus","convertSecondsToMMSS","seconds","minutes","floor","updatePositionInfo","w","outerWidth","hw","outerHeight","t","position","top","l","left","z","text","recalculatingSize","message","removeAttr","h","g","group","recalculatingTextSize","button","multiline","fontSize","padding","rowCount","length","style","renderFile","wrapper","item","prop","type","wrapperhtml","rounded","shadow","url","formattedlabel","isEditMode","playButton","audioSrc","media","Audio","off","e","stopImmediatePropagation","paused","ended","currentTime","play","removeClass","addClass","pause","totaltime","onloadedmetadata","duration","onended","ontimeupdate","autoplay","setTimeout","trigger","one","renderStopwatch","Number","timer","alarm","clearInterval","intervalfunction","setInterval","time","playalarmsound","playsoundatinterval","intervaltime","playsoundatend","M","cfg","wwwroot","onplay","allowpause","renderItems","elements","actives","update","empty","forEach","active","count","properties","JSON","stringify","resizable","attr","parts","timestamp","split","gotourl","formattedalttext","renderImage","showcontrol","playsInline","onpause","renderVideo","renderNavigation","textparts","textblock","part","trim","alignment","textfont","undefined","lineHeight","bold","italic","underline","textcolor","bgcolor","borderwidth","bordercolor","renderTextblock","opacity","shape","renderShape","color","usemodal","formattedtitle","popover","container","html","template","$body","formatContent","content","contextid","openbydefault","renderHotspot","draggable","containment","cursor","grid","handle","start","each","drag","event","ui","$selected","originalPosition","positions","map","bottom","right","get","x","sort","a","b","target","distance","not","$this","stop","newLeft","newTop","getItems","saveTracking","handles","minHeight","minWidth","resize","ctrlKey","aspectRatio","includes","navigation","isBetweenStartAndEnd","seek","viewertype","hotspotid","hotspot","items","title","modal","fadeIn","closest","existingwrapper","tracking","trackingIndex","parse","push","at","Date","getTime","draftitemid","inlineannotationitems","util","get_string","dataForTemplate","render","then","before","catch","enableColorPicker","newTime","detail","preventDefault","slice","sortItemsByLayer","ids","order","toString","targetItems","filter","getTopLayer","itms","sorted","zindex","updateid","newItems","index","element","cleanItems","replace","updateId","ajax","method","dataType","action","sesskey","field","value","cmid","token","success","updated","saveCancel","toggle","toggleClass","handleFormData","newItem","add","annoid","addNotification","iaform","ModalForm","formClass","args","annotationid","modalConfig","show","addEventListener","events","LOADED","val","convertSecondsToHMS","end","isInSkipSegment","FORM_SUBMITTED","highestOrder","random","annnoid","formdata","editform","metaKey","focus","isNaN","activewrapper","dataActive","grouping","Set","instance","updateOrder","direction","activeIndex","findIndex","activeItem","currentzIndex","affectedItem","affectedItemIndex","i","targetIndex","topLayer","indexes","abs","bottomLayer","getBottomLayer","newItemIds","join","parseInt","ctrl","step","key","deleted","originalEvent","window","confirmationMessage","returnValue","editmode"],"mappings":";;;;;;;uTA+BqBA,yBAAyBC,cAK1CC,oBASAC,WAAWC,aACEC,KAAKC,MAAMF,IAAM,OAAS,OAQvCG,gBAAgBC,kBACNC,cAAe,mBAAE,kBACvBA,aAAaC,KAAK,WAAWC,SAC7BF,aAAaG,2CAAoCJ,WAAWK,iHAGtDC,kBAAoBC,MAAOC,MAAOC,aAChCC,KAAOF,OAAQ,mBAAE,YAAa,8CAAsBR,WAAWK,cAC/D,mBAAE,YAAYM,SAAS,cAAe,KAClCC,MAAQ,GAAK,EACZC,KAAKC,eAAeC,eAAsD,GAArCF,KAAKC,eAAeC,gBAC1DH,MAAQC,KAAKG,OAAOC,iBAEpBC,mBAAqBjB,aAAakB,QAAUlB,aAAamB,SACzDC,IAAM,UACN,mBAAE,YAAYV,SAAS,iBACvBU,IAAM,IAENH,mBAAqBN,OACrBF,KAAKY,IAAI,+BAAyBD,UAClCX,KAAKY,IAAI,+BAAyBD,mBAAUT,YAC5CF,KAAKY,IAAI,MAAO,KAChBZ,KAAKY,IAAI,wCAAkCD,mBAAUT,kBAC9CM,mBAAqBN,QAC5BF,KAAKY,IAAI,QAAS,UAClBZ,KAAKY,IAAI,mBAAa,IAAMV,cAC5BF,KAAKY,IAAI,6BAAuBD,2BAAkBT,iBAClDF,KAAKY,IAAI,OAAQ,WAGrBZ,KAAKY,IAAI,QAAS,QAClBZ,KAAKY,IAAI,SAAU,QACnBZ,KAAKY,IAAI,MAAO,KAChBZ,KAAKY,IAAI,OAAQ,KAEjBb,QACAC,KAAKY,IAAI,QAAS,QAClBZ,KAAKY,IAAI,SAAU,QACnBZ,KAAKY,IAAI,MAAO,KAChBZ,KAAKY,IAAI,OAAQ,OAIzBhB,oBACAA,mBAAkB,OAEdiB,SAAWC,SAASC,cAAc,kBACjB,IAAIC,gBAAe,KACpCpB,oBACAA,mBAAkB,MAGPqB,QAAQJ,8BAErBC,UAAUI,GAAG,cAAc,WACzBtB,mBAAkB,GAAM,MAUhCuB,kBAAkB7B,WAAY8B,UACtBC,KAAOlB,KACPmB,eAAgB,mBAAE,kBAClBC,gBAAiB,mBAAE,YACnBC,YAAc,WAOZC,qBAAwBC,cACtBC,QAAUxC,KAAKyC,MAAMF,QAAU,WAE3BC,QAAU,GAAK,IAAMA,QAAUA,SAAW,MADlDD,QAAUvC,KAAKC,MAAMsC,QAAoB,GAAVC,UACoC,GAAK,IAAMD,QAAUA,UAOtFG,mBAAsB7B,WACpB8B,EAAI9B,KAAK+B,aACTC,GAAKhC,KAAKiC,cACVC,EAAIlC,KAAKmC,WAAWC,IAAM,EAAI,EAAIpC,KAAKmC,WAAWC,IAClDC,EAAIrC,KAAKmC,WAAWG,KAAO,EAAI,EAAItC,KAAKmC,WAAWG,KACnDC,EAAIvC,KAAKY,IAAI,mEAEZ4B,kBAAWrD,KAAKC,MAAMiD,mBAAUlD,KAAKC,MAAM8C,mBAAUK,EAAI,kBAASpD,KAAKC,MAAM0C,mBAAU3C,KAAKC,MAAM4C,OAQrGS,kBAAqBzC,WACnB0C,QAAUpB,cAAc9B,gGACkCmD,WAAW,gBACrEb,EAAIT,KAAKpC,WAAWe,KAAK+B,cAAgBW,QAAQjC,QAAU,IAC3DmC,EAAIvB,KAAKpC,WAAWe,KAAKiC,eAAiBS,QAAQhC,SAAW,IAC7DwB,EAAIb,KAAKpC,WAAWe,KAAKmC,WAAWC,KAAOM,QAAQhC,SAAW,IAClEwB,EAAIA,EAAI,EAAI,EAAIA,MACZG,EAAIhB,KAAKpC,WAAWe,KAAKmC,WAAWG,MAAQI,QAAQjC,QAAU,IAClE4B,EAAIA,EAAI,EAAI,EAAIA,MACZE,EAAIvC,KAAKY,IAAI,WACbiC,EAAI7C,KAAKoB,KAAK,SACde,SAAW,OACFL,EAAI,WACHc,EAAI,SACNP,EAAI,QACLH,EAAI,cACAK,UAEfJ,SAASW,MAAQD,EACjB7C,KAAKY,IAAIuB,UACTN,mBAAmB7B,MACZmC,UASLY,sBAAwB,SAAC/C,KAAMgD,YAAQC,kEACrCC,SAAWlD,KAAKiC,cAChBkB,QAAU,EACVC,SAAW,KACXH,UAAW,IAEXG,SADWpD,KAAKR,KAAK,aACL6D,OACZD,SAAW,EAAG,CAEdD,QAAsB,IADNnD,KAAKiC,cAAgBmB,UAErCF,UAAYlD,KAAKiC,cAA0B,EAAVkB,SAAeC,cAGpDE,MAAQ,cACMN,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,mBAC3CA,SAAW,qBACTF,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,sBAC3CF,OAAoB,GAAXE,SAA4B,GAAXA,UAAkB,MAE9DD,WAAaG,SAAW,IACxBE,MAAMH,QAAUA,QAAU,MAE9BnD,KAAKR,KAAK,uBAAuBoB,IAAI0C,OACrCtD,KAAKY,IAAI,QAAS,SAwDhB2C,WAAa,CAACC,QAASC,KAAMC,KAAM/D,GAAIwC,kBACnCwB,KAAOF,KAAKE,SACdC,kBACQ,SAARD,KACAC,gCAA2BjE,sEACD+D,KAAKJ,kBAAyB,KAAhBI,KAAKG,QAAiB,cAAgB,sFAChB,KAAfH,KAAKI,OAAgB,SAAW,sEACpDJ,KAAKK,+JAEjB,QAARJ,OACPC,6BAAwBjE,yDACE+D,KAAKJ,kBAAyB,KAAhBI,KAAKG,QAAiB,cAAgB,qFACjB,KAAfH,KAAKI,OAAgB,SAAW,kCAAyBJ,KAAKK,wGACb,IAAvBL,KAAKM,2DAChCN,KAAKM,gBAAmB,YAEzER,QAAQ9D,2CAAoCkE,uBAEhC,SAARD,OAAoBtC,KAAK4C,aAAc,KACnCC,WAAaV,QAAQhE,KAAK,uBAC1B2E,SAAWT,KAAKK,IAChBK,MAAQ,IAAIC,MAAMF,UACtBD,WAAWI,IAAI,SAASpD,GAAG,SAAS,SAASqD,GACzCA,EAAEC,2BACEJ,MAAMK,QAAUL,MAAMM,OAA+B,IAAtBN,MAAMO,aACrCP,MAAMQ,2BACJzE,MAAMX,KAAK,KAAKqF,YAAY,gBAAgBC,SAAS,mBAEvDV,MAAMW,4BACJ5E,MAAMX,KAAK,KAAKqF,YAAY,iBAAiBC,SAAS,wBAI5DE,UAAY,EAChBZ,MAAMa,iBAAmB,WACrBD,UAAYZ,MAAMc,SAClBhB,WAAW1E,KAAK,sBAAsBgD,KAAKf,qBAAqBuD,aAGpEZ,MAAMe,QAAU,WACZjB,WAAW1E,KAAK,KAAKqF,YAAY,iBAAiBC,SAAS,gBAC3DZ,WAAW1E,KAAK,sBAAsBgD,KAAKf,qBAAqBuD,aAGpEZ,MAAMgB,aAAe,WACjBlB,WAAW1E,KAAK,sBACXgD,KAAKf,qBAAqB2C,MAAMc,SAAWd,MAAMO,eAGrC,KAAjBjB,KAAK2B,UACLC,YAAW,KACPpB,WAAWqB,QAAQ,WACpB,yBAGLzE,UAAU0E,IAAI,kCAAkC,WAC1CpB,OACAA,MAAMW,WAKlB5C,SAAS1B,MAAQ,EAEjB+C,QAAQ5C,IAAIuB,UACZb,cAAc9B,gBAAgBE,OAAO8D,SACrCT,sBAAsBS,SAAS,IAkB7BiC,gBAAkB,CAACjC,QAASC,KAAMC,KAAM/D,GAAIwC,kBACxC+C,SAAmC,GAAxBQ,OAAOhC,KAAKwB,cAQzBS,MAAOC,MAPXpC,QAAQ9D,qDAA8CC,sEACxB+D,KAAKJ,kBAAyB,KAAhBI,KAAKG,QAAiB,cAAgB,sFAChB,KAAfH,KAAKI,OAAgB,SAAW,2EAC/CoB,sKAETzD,qBAAqByD,mCAG5CS,OACAE,cAAcF,aAEZG,iBAAmB,WACrBH,MAAQI,aAAY,uDACSpG,KAAMmF,SAAS,eACpCkB,MAAO,iDAAyBrG,KAAMyB,KAAK,YAC/C4E,yDACyBrG,aAAW6C,KAAKf,qBAAqBuE,yDACrCrG,KAAMyB,KAAK,WAAY4E,MACD,KAA3CtC,KAAKuC,eAAeC,qBACjBF,MAA2C,GAAnCtC,KAAKuC,eAAeE,eAAsB,GACX,GAAtCzC,KAAKuC,eAAeG,iBACpBR,MAAQ,IAAIvB,MAAMgC,EAAEC,IAAIC,QAAU,gDAClCX,MAAMhB,QAGVoB,KAAO,IACPH,cAAcF,OAC4B,GAAtCjC,KAAKuC,eAAeG,iBACpBR,MAAQ,IAAIvB,MAAMgC,EAAEC,IAAIC,QAAU,0CAClCX,MAAMhB,OACNgB,MAAMY,OAAS,6DACc7G,KAAMmF,SAAS,UAE5Cc,MAAMT,QAAU,6DACaxF,KAAMkF,YAAY,6DAG1BlF,KAAMkF,YAAY,6DAClBlF,aAAW6C,KAAKf,qBAAqByD,6DACrCvF,KAAMyB,KAAK,WAAY8D,aAErD,MAGF7D,KAAK4C,eACN6B,mBACAxE,cAAcgD,IAAI,sCAAgC3E,KAAMuB,GAAG,sCAAgCvB,KAAM,SAAS4E,GACtGA,EAAEC,2BACqB,GAAnBd,KAAK+C,YACD,mBAAEtG,MAAMF,SAAS,YACjB4F,cAAcF,OACVC,OACAA,MAAMb,4BAER5E,MAAM0E,YAAY,YAEpBiB,oBAEG,mBAAE3F,MAAMiB,KAAK,aAAe8D,UACnCY,2CAKVhF,UAAU0E,IAAI,iBAAiB,WAC7BK,cAAcF,UAGlBxD,SAAS1B,MAAQ,EAEjB+C,QAAQ5C,IAAIuB,UACZb,cAAc9B,gBAAgBE,OAAO8D,SACrCT,sBAAsBS,SAAS,IA2I7BkD,YAAc,CAACC,SAAUC,QAASC,aAC/BA,QACDvF,cAAc9B,gBAAgBsH,QAGX,GAAnBH,SAAStD,OACLuD,SACAA,QAAQG,SAASC,SACb1F,cAAc9B,sDAA+CwH,cAAYlC,SAAS,iBAGvF,KACCmC,MAAQ,EACZN,SAASI,SAAStD,WACVC,KAAOD,KAAKyD,WACZvD,KAAOF,KAAKE,KACZhE,GAAK8D,KAAK9D,GACVwC,SAAWsB,KAAKtB,SAChBqB,SAAU,yEAAiDrB,SAASW,8BAAqBxD,WAAWK,iDAC1FA,2BAAkBgE,kCAAwBwD,KAAKC,UAAU1D,2BACjD,KAAlBA,KAAK2D,WAAoBhG,KAAK4C,gBAC9BT,QAAQsB,SAAS,aACjBtB,QAAQ8D,KAAK,WAAY,IAGrB3D,UACC,QAxXD,EAACH,QAASC,KAAMC,KAAM/D,GAAIwC,kBACpCoF,MAAQ7D,KAAK8D,UAAUC,MAAM,KAC7BD,UAA+B,KAAnB9B,OAAO6B,MAAM,IAAgC,GAAnB7B,OAAO6B,MAAM,IAAW7B,OAAO6B,MAAM,IAC7D,IAAhB7D,KAAKgE,QACLlE,QAAQ9D,0BAAmBgE,KAAKgE,+CAAsChE,KAAKK,qBAAYpE,8EACzB,KAAf+D,KAAKI,OAAgB,SAAW,8CAChD,GAAhBJ,KAAKG,QAAe,6BAA+B,oBAAWH,KAAKiE,6BAElFnE,QAAQ9D,2BAAoBgE,KAAKK,qBAAYpE,kDAC1B6H,UAAY,EAAI,oBAAsBA,UAAY,IAAM,kFACR,KAAf9D,KAAKI,OAAgB,SAAW,kDAChE0D,UAAY,EAAI,iBAAmB,oDAClB,GAAhB9D,KAAKG,QAAe,6BAA+B,oBAAWH,KAAKiE,yBAEvFtG,KAAK4C,eACc,IAAhBP,KAAKgE,SAA8B,GAAbF,WACtBhE,QAAQqB,YAAY,aACpBrB,QAAQsB,SAAS,eAEjBtB,QAAQsB,SAAS,cAGzBtB,QAAQ5C,IAAIuB,UACZqB,QAAQ5C,IAAI,SAAU,QACtBU,cAAc9B,gBAAgBE,OAAO8D,UAiWrBoE,CAAYpE,QAASC,EAAMC,KAAM/D,GAAIwC,oBAEpC,QAhWD,EAACqB,QAASC,KAAMC,KAAM/D,GAAIwC,YAC1CqB,QAAQ9D,4BAAqBC,gDAAsD,KAAf+D,KAAKI,OAAgB,SAAW,kCACzE,GAApBJ,KAAKmE,aAAqBxG,KAAK4C,aAA4B,GAAb,2CAC7C,mBAAE,QAAQhE,SAAS,eAAiB,iBAAmB,sCACnDyD,KAAKK,uCAA8C,GAAhBL,KAAKG,QAAe,MAAQ,qKAEvE/D,MAAQ0D,QAAQhE,KAAK,SAAS,GAClCM,MAAMuF,SAA4B,KAAjB3B,KAAK2B,SACtBvF,MAAMgI,aAAc,EAChBzG,KAAK4C,eACLnE,MAAMuF,UAAW,GAErBvF,MAAM0G,OAAS,WACXhD,QAAQhE,KAAK,cAAcqF,YAAY,gBAAgBC,SAAS,kBAEpEhF,MAAMiI,QAAU,WACZvE,QAAQhE,KAAK,cAAcqF,YAAY,iBAAiBC,SAAS,iBAErEhF,MAAMqF,QAAU,WACZ3B,QAAQhE,KAAK,cAAcqF,YAAY,iBAAiBC,SAAS,iBAErEtB,QAAQ5C,IAAIuB,UACZb,cAAc9B,gBAAgBE,OAAO8D,SACrCf,kBAAkBe,UA0UFwE,CAAYxE,QAASC,EAAMC,KAAM/D,GAAIwC,oBAEpC,WACA,QACDoB,WAAWC,QAASC,KAAMC,KAAM/D,GAAIwC,oBAEnC,aAxQI,EAACqB,QAASC,KAAMC,KAAM/D,GAAIwC,kBACzCoF,MAAQ7D,KAAK8D,UAAUC,MAAM,KAC7BD,UAA+B,KAAnB9B,OAAO6B,MAAM,IAAgC,GAAnB7B,OAAO6B,MAAM,IAAW7B,OAAO6B,MAAM,IAEjF/D,QAAQ9D,qDAA8CC,wCAA+B+D,KAAKJ,kBAAyB,KAAhBI,KAAKG,QACpG,cAAgB,uDAA6D,KAAfH,KAAKI,OAAgB,SAAW,iDAC5E0D,uBAAc9D,KAAKM,iCAEzC7B,SAAS1B,MAAQ,EAEjB+C,QAAQ5C,IAAIuB,UACZb,cAAc9B,gBAAgBE,OAAO8D,SACrCT,sBAAsBS,SAAS,IA6PfyE,CAAiBzE,QAASC,EAAMC,KAAM/D,GAAIwC,oBAEzC,YACDsD,gBAAgBjC,QAASC,EAAMC,KAAM/D,GAAIwC,oBAExC,YAlLG,EAACqB,QAASC,KAAMC,KAAM/D,GAAIwC,kBACxC+F,UAAYxE,KAAKM,eAAeyD,MAAM,YACxCU,UAAY,mCAChBD,UAAUnB,SAASqB,OACI,IAAfA,KAAKC,SAGTF,4DAAuDzE,KAAK4E,6EACJ,IAAjB5E,KAAK6E,SAAiB7E,KAAK6E,SAAW,uBAAcH,oBAE/FD,WAAa,SACGK,MAAZ9E,KAAKK,KAAgC,IAAZL,KAAKK,KAC9BP,QAAQ9D,wBAAiBC,wFAC+C,KAAf+D,KAAKI,OAAgB,cAAgB,6DAChEJ,KAAKK,iCAAwBoE,mBAC3D3E,QAAQsB,SAAS,cAEjBtB,QAAQ9D,0BAAmBC,gFACqC,KAAf+D,KAAKI,OAAgB,cAAgB,uDAC7DqE,qBAE7B3E,QAAQrB,SAAS1B,MAAQ,EACzB+C,QAAQ5C,IAAIuB,gBACNmB,MAAQ,aACGG,KAAKtB,SAASe,uBACZO,KAAKtB,SAASsG,yBACD,KAAb/E,KAAKgF,KAAc,OAAS,sBACd,KAAfhF,KAAKiF,OAAgB,SAAW,2BACT,KAAlBjF,KAAKkF,UAAmB,YAAc,aAChDlF,KAAKmF,qBACAnF,KAAKoF,wBACc,KAAhBpF,KAAKG,QAAiB,QAAU,mBACjCH,KAAKqF,2BACLrF,KAAKsF,2BACL,SAEpBxF,QAAQhE,KAAK,uBAAuBoB,IAAI0C,OACxChC,cAAc9B,gBAAgBE,OAAO8D,SACrCT,sBAAsBS,SAAS,GAAO,IA6ItByF,CAAgBzF,QAASC,KAAMC,KAAM/D,GAAIwC,oBAExC,QA5ID,EAACqB,QAASC,KAAMC,KAAM/D,GAAIwC,kBACpCoF,MAAQ7D,KAAK8D,UAAUC,MAAM,KAC7BD,UAA+B,KAAnB9B,OAAO6B,MAAM,IAAgC,GAAnB7B,OAAO6B,MAAM,IAAW7B,OAAO6B,MAAM,IAC7D,IAAhB7D,KAAKgE,SACLlE,QAAQ9D,0BAAmBgE,KAAKgE,8CAAqC/H,wEACb,KAAf+D,KAAKI,OAAgB,SAAW,sFAEzEN,QAAQsB,SAAS,eAEZzD,KAAK4C,eACW,GAAbuD,UACAhE,QAAQsB,SAAS,cAEjBtB,QAAQsB,SAAS,cAGzBtB,QAAQ9D,0BAAmBC,0CAAgD,KAAf+D,KAAKI,OAAgB,SAAW,iDACzE0D,UAAY,EAAI,iBAAmB,8CACvCA,UAAY,EAAI,mBAAqBA,UAAY,IAAM,iFAG1EhE,QAAQ5C,IAAIuB,gBACNmB,MAAQ,YACII,KAAKoF,uBACHpF,KAAKqF,2BACLrF,KAAKsF,2BACL,gBACLtF,KAAKwF,QAAU,KAEZ,UAAdxF,KAAKyF,MACL7F,MAAM,iBAAmB,MACJ,aAAdI,KAAKyF,QACZ7F,MAAM,iBAAmC,KAAhBI,KAAKG,QAAiB,MAAQ,KAE3DL,QAAQhE,KAAK,uBAAuBoB,IAAI0C,OACxChC,cAAc9B,gBAAgBE,OAAO8D,UA0GrB4F,CAAY5F,QAASC,EAAMC,KAAM/D,GAAIwC,oBAEpC,UAzGC,EAACqB,QAASC,KAAMC,KAAM/D,GAAIwC,YAC5CqB,QAAQ9D,0BAAmBC,yEAC3BwC,SAAS,gBAAkB,IAC3BqB,QAAQ5C,IAAIuB,gBACNmB,MAAQ,oBACUI,KAAK2F,cACd3F,KAAKwF,QAAU,oBACT,qBACD,KAEpB1F,QAAQhE,KAAK,uBAAuBoB,IAAI0C,OACxChC,cAAc9B,gBAAgBE,OAAO8D,SAEhCnC,KAAK4C,eACe,KAAjBP,KAAK4F,SACL9F,QAAQ8D,KAAK,eACM,WAGnB9D,QAAQ8D,KAAK,WACI,iBACG,yBACC,4BACC,mBACL,sBACG,0CACF5D,KAAK6F,iKAKvB/F,QAAQgG,QAAQ,CACZC,UAAW,WACXC,MAAM,EACNC,mEAA6DhK,mRAGM,IAAZ+D,KAAKK,6EACcL,KAAKK,gNAEP,eAG5EP,QAAQtC,GAAG,oBAAoBrB,qBACvB+J,OAAQ,yCAAiBjK,4BACvB+J,WAAarI,KAAKwI,cAAcnG,KAAKoG,QAAQtH,KAAMlD,WAAWyK,WACpEH,MAAMF,KAAKA,6CACEE,OACbpG,QAAQgG,QAAQ,aAEM,KAAtB9F,KAAKsG,eACLxG,QAAQgG,QAAQ,WAuDZS,CAAczG,QAASC,EAAMC,KAAM/D,GAAIwC,UAI/C8E,QACIA,OAASN,SAAStD,SAClB/B,cAAc9B,8CAA8C0K,UAAU,CAClEC,YAAa,UACbC,OAAQ,OACRC,KAAM,CAAC,EAAG,GACVC,OAAQ,sBACRC,MAAO,YAEE,mBAAEpK,MAAMF,SAAS,+BAChBE,MAAMoF,QAAQ,SAEJjE,cAAc9B,KAAK,sCACzBgL,MAAK,+BACTrK,MAAMiB,KAAK,iBAAiB,mBAAEjB,MAAMgC,gBAG9CsI,KAAM,SAASC,MAAOC,QACdC,UAAYtJ,cAAc9B,KAAK,sCAC/B8C,KAAOqI,GAAGE,iBAAiBvI,KAAOqI,GAAGxI,SAASG,KAC9CF,IAAMuI,GAAGE,iBAAiBzI,IAAMuI,GAAGxI,SAASC,IAC5C0I,UAAYF,UAAUG,KAAI,iBACnB,CACHpL,IAAI,mBAAEQ,MAAMiB,KAAK,QACjBkB,MAAM,mBAAEnC,MAAMgC,WAAWG,KACzBF,KAAK,mBAAEjC,MAAMgC,WAAWC,IACxB4I,QAAQ,mBAAE7K,MAAMgC,WAAWC,KAAM,mBAAEjC,MAAMO,SACzCuK,OAAO,mBAAE9K,MAAMgC,WAAWG,MAAO,mBAAEnC,MAAMM,YAE9CyK,SAECJ,UAAUtL,MAAK2L,GAAKA,EAAE7I,KAAO,IAAI,CAEjCwI,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAE/I,KAAOgJ,EAAEhJ,WAEhC3C,GADSmL,UAAUtL,MAAK2L,GAAKA,EAAE7I,KAAO,IAC1B3C,GACZ4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,OAAQ,OACf4K,SAAWD,OAAOnK,KAAK,iBAAiBkB,KAC5CqI,GAAGxI,SAASG,KAAOqI,GAAGE,iBAAiBvI,KAAOkJ,SAC9ClJ,KAAOqI,GAAGE,iBAAiBvI,KAAOqI,GAAGxI,SAASG,QAG9CwI,UAAUtL,MAAK2L,GAAKA,EAAE/I,IAAM,IAAI,CAChC0I,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEjJ,IAAMkJ,EAAElJ,UAE/BzC,GADQmL,UAAUtL,MAAK2L,GAAKA,EAAE/I,IAAM,IACzBzC,GACX4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,MAAO,OACd4K,SAAWD,OAAOnK,KAAK,iBAAiBgB,IAC5CuI,GAAGxI,SAASC,IAAMuI,GAAGE,iBAAiBzI,IAAMoJ,SAC5CpJ,IAAMuI,GAAGE,iBAAiBzI,IAAMuI,GAAGxI,SAASC,OAG5C0I,UAAUtL,MAAK2L,GAAKA,EAAEF,OAAQ,mBAAE,WAAWxK,UAAU,CACrDqK,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEJ,MAAQK,EAAEL,YAEjCtL,GADUmL,UAAUtL,MAAK2L,GAAKA,EAAEF,OAAQ,mBAAE,WAAWxK,UACxCd,GACb4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,QAAS,mBAAE,WAAWH,QAAU8K,OAAO9K,QAAU,EAAK,UAC7D+K,SAAWD,OAAOnK,KAAK,iBAAiBkB,KAAOiJ,OAAOpJ,WAAWG,KACrEqI,GAAGxI,SAASG,KAAOqI,GAAGE,iBAAiBvI,KAAOkJ,SAC9ClJ,KAAOqI,GAAGE,iBAAiBvI,KAAOqI,GAAGxI,SAASG,QAG9CwI,UAAUtL,MAAK2L,GAAKA,EAAEH,QAAS,mBAAE,WAAWtK,WAAW,CACvDoK,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEL,OAASM,EAAEN,aAElCrL,GADWmL,UAAUtL,MAAK2L,GAAKA,EAAEH,QAAS,mBAAE,WAAWtK,WACzCf,GACd4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,OAAQ,mBAAE,WAAWF,SAAW6K,OAAO7K,SAAW,EAAK,UAC9D8K,SAAWD,OAAOnK,KAAK,iBAAiBgB,IAAMmJ,OAAOpJ,WAAWC,IACpEuI,GAAGxI,SAASC,IAAMuI,GAAGE,iBAAiBzI,IAAMoJ,SAC5CpJ,IAAMuI,GAAGE,iBAAiBzI,IAAMuI,GAAGxI,SAASC,IAGhDwI,UAAUa,IAAItL,MAAMqK,MAAK,eACjBkB,OAAQ,mBAAEvL,YACRgC,SAAWuJ,MAAMtK,KAAK,iBAC5BsK,MAAM9K,IAAI,CACN0B,KAAOH,SAASG,KAAOA,KAAQ,KAC/BF,IAAMD,SAASC,IAAMA,IAAO,UAGpCP,oBAAmB,mBAAE1B,QAEzBwL,KAAM,cACEtK,KAAK4C,aAAc,KACf2G,UAAYtJ,cAAc9B,KAAK,sCAC/BsL,UAAYF,UAAUG,KAAI,iBACnB,CACHpL,IAAI,mBAAEQ,MAAMiB,KAAK,QACjBkB,MAAM,mBAAEnC,MAAMgC,WAAWG,KACzBF,KAAK,mBAAEjC,MAAMgC,WAAWC,IACxB4I,QAAQ,mBAAE7K,MAAMgC,WAAWC,KAAM,mBAAEjC,MAAMO,SACzCuK,OAAO,mBAAE9K,MAAMgC,WAAWG,MAAO,mBAAEnC,MAAMM,YAE9CyK,SAECJ,UAAUtL,MAAK2L,GAAKA,EAAE7I,KAAO,IAAI,CACjCwI,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAE/I,KAAOgJ,EAAEhJ,WAEhC3C,GADSmL,UAAUtL,MAAK2L,GAAKA,EAAE7I,KAAO,IAC1B3C,GACZ4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,OAAQ,OACf4K,SAAWD,OAAOnK,KAAK,iBAAiBkB,KAC5CsI,UAAUJ,MAAK,eACPkB,OAAQ,mBAAEvL,MAEVyL,QADWF,MAAMtK,KAAK,iBACHkB,KAAOkJ,SAC9BE,MAAM9K,IAAI,OAAQgL,QAAU,YAIhCd,UAAUtL,MAAK2L,GAAKA,EAAE/I,IAAM,IAAI,CAChC0I,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEjJ,IAAMkJ,EAAElJ,UAE/BzC,GADQmL,UAAUtL,MAAK2L,GAAKA,EAAE/I,IAAM,IACzBzC,GACX4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,MAAO,OACd4K,SAAWD,OAAOnK,KAAK,iBAAiBgB,IAC5CwI,UAAUJ,MAAK,eACPkB,OAAQ,mBAAEvL,MAEV0L,OADWH,MAAMtK,KAAK,iBACJgB,IAAMoJ,SAC5BE,MAAM9K,IAAI,MAAOiL,OAAS,YAI9Bf,UAAUtL,MAAK2L,GAAKA,EAAEF,OAAQ,mBAAE,WAAWxK,UAAU,CACrDqK,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEJ,MAAQK,EAAEL,YAEjCtL,GADUmL,UAAUtL,MAAK2L,GAAKA,EAAEF,OAAQ,mBAAE,WAAWxK,UACxCd,GACb4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,QAAS,mBAAE,WAAWH,QAAU8K,OAAO9K,QAAU,EAAK,UAC7D+K,SAAWD,OAAOnK,KAAK,iBAAiBkB,KAAOiJ,OAAOpJ,WAAWG,KACrEsI,UAAUJ,MAAK,eACPkB,OAAQ,mBAAEvL,MAEVyL,QADWF,MAAMtK,KAAK,iBACHkB,KAAOkJ,SAC9BE,MAAM9K,IAAI,OAAQgL,QAAU,YAIhCd,UAAUtL,MAAK2L,GAAKA,EAAEH,QAAS,mBAAE,WAAWtK,WAAW,CACvDoK,UAAUM,MAAK,CAACC,EAAGC,IAAMD,EAAEL,OAASM,EAAEN,aAElCrL,GADWmL,UAAUtL,MAAK2L,GAAKA,EAAEH,QAAS,mBAAE,WAAWtK,WACzCf,GACd4L,OAASjK,cAAc9B,sDAA+CG,UAC1E4L,OAAO3K,IAAI,OAAQ,mBAAE,WAAWF,SAAW6K,OAAO7K,SAAW,EAAK,UAC9D8K,SAAWD,OAAOnK,KAAK,iBAAiBgB,IAAMmJ,OAAOpJ,WAAWC,IACpEwI,UAAUJ,MAAK,eACPkB,OAAQ,mBAAEvL,MAEV0L,OADWH,MAAMtK,KAAK,iBACJgB,IAAMoJ,SAC5BE,MAAM9K,IAAI,MAAOiL,OAAS,SAIlCC,UAAS,GACTjK,oBAAmB,mBAAE1B,OACrByK,UAAYA,UAAUG,KAAI,kBACf,mBAAE5K,MAAMiB,KAAK,WACrB8J,MAEHa,aAAanB,eAKzBtJ,cAAc9B,KAAK,yCAAyC6H,UAAU,CAClE8C,YAAa,UACb6B,QAAS,MACT3B,KAAM,CAAC,EAAG,GACV4B,UAAW,EACXC,SAAU,EACVC,OAAQ,SAASzB,UACTrJ,KAAK4C,aAAc,KACfN,MAAO,mBAAExD,MAAMiB,KAAK,QACZ,QAARuC,MAA0B,SAARA,MAA2B,aAARA,MAA+B,cAARA,MACjD,aAARA,KACHZ,uBAAsB,mBAAE5C,MAAe,aAARwD,KAA6B,aAARA,MACrC,SAARA,MAAmB+G,MAAM0B,6BAC9BjM,MAAMkH,UAAU,SAAU,cAAe,GAE/CxF,oBAAmB,mBAAE1B,SAG7BwL,KAAM,cACEtK,KAAK4C,aAAc,KACfN,MAAO,mBAAExD,MAAMiB,KAAK,QACZ,QAARuC,MAA0B,cAARA,MAAgC,aAARA,KAC1CZ,uBAAsB,mBAAE5C,MAAe,aAARwD,KAA6B,aAARA,MACrC,SAARA,0BACLxD,MAAMkH,UAAU,SAAU,eAAe,GAE/C5E,mBAAkB,mBAAEtC,OACpB2L,UAAS,GACTC,aAAa,EAAC,mBAAE5L,MAAMiB,KAAK,8BACzBjB,MAAMoF,QAAQ,cAMpB,SAAR5B,MACAH,QAAQtC,GAAG,aAAa,gBACf,mBAAEf,MAAMF,SAAS,wBAIlBoM,aACA,mBAAElM,MAAMX,KAAK,uBAAuBiB,SAAU,mBAAEN,MAAMX,KAAK,uBAAuBkB,SAClF8C,QAAQ/C,QAAU+C,QAAQ9C,UAAY2L,aAAwB,SAAR1I,MAA2B,SAARA,0BACvExD,MAAMO,OAAQ8C,QAAQ/C,QAAU4L,qCAGhClM,MAAMkH,UAAU,SAAU,eAAe,mBAAElH,MAAMX,KAAK,uBAAuBuC,cAC3E,mBAAE5B,MAAMX,KAAK,uBAAuByC,eAC1C,MAAOsC,QAObqC,SAAWA,QAAQ0F,SAAS3M,MAC5B6D,QAAQsB,SAAS,UACK,GAAlB8B,QAAQvD,QACRiC,YAAW,WACP9B,QAAQ+B,QAAQ,aAChB/B,QAAQ+B,QAAQ,WACjB,SAOVlE,KAAK4C,eACN3C,cAAcgD,IAAI,uCAAwCpD,GAAG,uCACzD,SAASqD,GACLA,EAAEC,+BACEhB,SAAU,mBAAErD,aACLqD,QAAQpC,KAAK,aAEf,YACGtB,MAAQ0D,QAAQhE,KAAK,SAAS,GAC9BM,MAAM2E,QAAU3E,MAAM4E,OAA+B,IAAtB5E,MAAM6E,YACrC7E,MAAM8E,OAEN9E,MAAMiF,kBAGT,iBACA,YACA,YACGwH,WAAa/I,QAAQhE,KAAK,uBAC1B6B,KAAKmL,qBAAqBD,WAAWnL,KAAK,gBAC1CC,KAAKf,OAAOmM,KAAKF,WAAWnL,KAAK,cACjCC,KAAKf,OAAOsE,kBAGf,cACG8H,WAAalJ,QAAQpC,KAAK,UAC1BuL,UAAYnJ,QAAQpC,KAAK,QACzBwL,QAAUC,MAAMrN,MAAK2L,GAAKA,EAAExL,IAAMgN,eACpB,SAAdD,WAAuB,KACnBI,MAAQF,QAAQ1F,WAAWqC,eAC3BO,QAAU8C,QAAQ1F,WAAW4C,QAAQtH,KACrCuB,IAAM6I,QAAQ1F,WAAWnD,IACzBgJ,+nBAMyCD,ijBAQxC,IAAP/I,uHACaA,mKAC2C,uJAIpD,YAAYrE,OAAOqN,2BACnB,qBAAqBA,MAAM,4BAC3B,qBAAqB7L,GAAG,iBAAiB,+BACrC,qBAAqBzB,gCAEzB,qBAAqByB,GAAG,kBAAkBrB,qCACtC,iCAAiCmN,OAAO,SACtCpD,OAAQ,mBAAE,uCACRF,WAAarI,KAAKwI,cAAcC,QAASxK,WAAWyK,WAC1DH,MAAMF,KAAKA,6CACEE,eAGjBpG,QAAQgG,QAAQ,YAMpCjI,eAAe+C,IAAI,4BAA6BpD,GAAG,4BAA6B,SAASqD,GACrFA,EAAEC,+CACArE,MAAM8M,QAAQ,YAAYxN,mBAOxCoB,SAAWC,SAASC,cAAc,kBAEjB,IAAIC,gBAAe,SAChCkM,iBAAkB,qCAAoB1N,oCACZ,GAA1B0N,gBAAgB7J,QAGpB6J,gBAAgB1C,MAAK,eACbhH,SAAU,mBAAErD,MACZwD,KAAOH,QAAQpC,KAAK,QACxBkE,YAAW,QACK,aAAR3B,MACW,SAARA,MAA2B,aAARA,MAA+B,QAARA,MAA0B,cAARA,KAC/DZ,sBAAsBS,QAAiB,aAARG,KAA6B,aAARA,WACjD,GAAY,SAARA,KAAiB,CACxBlB,kBAAkBe,aACd6I,YACA7I,QAAQhE,KAAK,uBAAuBiB,QAAU+C,QAAQhE,KAAK,uBAAuBkB,SAClF8C,QAAQ/C,QAAU+C,QAAQ9C,UAAY2L,iCACpClM,MAAMO,OAAQ8C,QAAQ/C,QAAU4L,gBAG3C,yBACD,WAAWzL,IAAI,aAAa,mBAAE,WAAWH,QAAU,GAAK,YAGnDQ,QAAQJ,cAGnBgM,MAAQ,GACRM,SAAW,GACXC,cAAgB,EACF,IAAdhM,KAAKyL,OAA8B,OAAfzL,KAAKyL,QACzBA,MAAQ1F,KAAKkG,MAAMjM,KAAKyL,OACxBM,SAASG,KAAK,CACVT,MAAO1F,KAAKC,UAAUyF,OACtBjG,QAAS,KACT2G,IAAI,IAAIC,MAAOC,iBAGnBC,YAActM,KAAKsM,eAEvBhH,YAAYmG,MAAO,MAAM,GAGrB1M,KAAK8D,aAAc,qBACjB,0BAA0BxE,aACxBkO,sBAAwB,CACxB,MACY,mBACA,kBACK,cACJtH,EAAEuH,KAAKC,WAAW,QAAS,8BAExC,MACY,kBACA,kBACK,cACJxH,EAAEuH,KAAKC,WAAW,QAAS,8BAExC,MACY,uBACA,kBACK,cACJxH,EAAEuH,KAAKC,WAAW,QAAS,8BAExC,MACY,gCACA,sBACK,kBACJxH,EAAEuH,KAAKC,WAAW,OAAQ,8BAEvC,MACY,2BACA,kBACK,cACJxH,EAAEuH,KAAKC,WAAW,QAAS,8BAExC,MACY,uBACA,sBACK,kBACJxH,EAAEuH,KAAKC,WAAW,YAAa,8BAE5C,MACY,qCACA,kBACK,aACJxH,EAAEuH,KAAKC,WAAW,aAAc,8BAE7C,MACY,6BACA,uBACK,mBACJxH,EAAEuH,KAAKC,WAAW,aAAc,8BAE7C,MACY,yBACA,oBACK,gBACJxH,EAAEuH,KAAKC,WAAW,UAAW,qCAGxCC,gBAAkB,CACpBnO,GAAIL,WAAWK,GACfkN,MAAOc,0CAGDI,OAAO,oCAAqCD,iBAAiBE,MAAMtE,MAClEpI,cAAc2M,OAAOvE,QAC7BwE,OAAM,SAIT7M,KAAK8M,2CAGPrN,UAAU0E,IAAI,kCAAkC,SAASjB,OACnD6J,QAAU7J,EAAE8J,OAAOrI,KACnB7G,KAAKyC,MAAMwM,UAAY9O,WAAWkI,0DACN/H,6BAC1B,6BAA6BA,SAC/B6B,cAAc9B,gBAAgBC,aAItC8B,eAAe+C,IAAI,mBAAoBpD,GAAG,mBAAoB,SAASqD,GACnEA,EAAE+J,iBACF/J,EAAEC,2BACGnD,KAAK4C,cAGN3C,cAAc9B,KAAK,+BAA+BqF,YAAY,8BAC5D,+BAA+BA,YAAY,0CAC3C,cAAcyC,KAAK,cAAe,IAAIxC,SAAS,UAAUD,YAAY,WAJvExD,KAAKf,OAAOsE,WASfvD,KAAK4C,0BAQJ8H,aAAgBnF,UACdwG,cAAgBD,SAAS9J,OAAS,IAElC8J,SAAWA,SAASoB,MAAM,EAAGnB,cAAgB,IAEjDD,SAASG,KAAK,CACVT,MAAO1F,KAAKC,UAAUyF,OACtBjG,QAASA,QACT2G,IAAI,IAAIC,MAAOC,YAEnBN,SAAS/B,MAAK,CAACC,EAAGC,IAAMD,EAAEkC,GAAKjC,EAAEiC,KACjCH,cAAgBD,SAAS9J,OAAS,sBAChC,gCAAgCV,WAAW,gCAC3C,gCAAgC2E,KAAK,WAAY,YAC5B,GAAnB6F,SAAS9J,4BACP,gCAAgCiE,KAAK,WAAY,aAUrDkH,iBAAmB,CAACC,IAAKC,SAC3BD,IAAMA,IAAI1D,KAAII,GAAKA,EAAEwD,iBACjBC,YAAc/B,MAAMgC,QAAOpL,aACrB9D,GAAK8D,KAAK9D,GAAGgP,kBACZF,IAAInC,SAAS3M,aAEX,QAAT+O,MACAE,YAAYxD,MAAK,CAACC,EAAGC,IAAMA,EAAEnJ,SAAS,WAAakJ,EAAElJ,SAAS,aAE9DyM,YAAYxD,MAAK,CAACC,EAAGC,IAAMD,EAAElJ,SAAS,WAAamJ,EAAEnJ,SAAS,aAG3DyM,YAAY7D,KAAItH,MAAQA,KAAK9D,MAQlCmP,YAAeC,UACE,GAAfA,KAAK1L,cACE,MAEPoL,IAAMM,KAAKhE,KAAItH,MAAQA,KAAK9D,KAC5BqP,OAASR,iBAAiBC,IAAK,QAC/BQ,OAASF,KAAKvP,MAAKiE,MAAQA,KAAK9D,IAAMqP,OAAO,KAAI7M,SAAS,kBACvDuD,OAAOuJ,SAsBZnD,SAAYoD,eACVC,SAAW,GACf7N,cAAc9B,oCAAoCgL,MAAK,SAAS4E,MAAOC,eAC7D1P,IAAK,mBAAE0P,SAASjO,KAAK,YACvBqC,KAAO,OACC,mBAAE4L,SAASjO,KAAK,iBACZqB,mBAAkB,mBAAE4M,WAEpC5L,KAAK9D,GAAKA,GACV8D,KAAKyD,WAAa2F,MAAMrN,MAAK2L,GAAKA,EAAExL,IAAMA,KAAIuH,WAC1CgI,WACAzL,KAAK9D,IAAK,IAAI6N,MAAOC,UAAY2B,0BAC/BC,SAAS/H,KAAK,YAAa7D,KAAK9D,KAEtCwP,SAAS7B,KAAK7J,SAElBoJ,MAAQsC,SACR3N,YAAc,SAGlBD,eAAe+C,IAAI,wCAAyCpD,GAAG,wCAAyC,SAASqD,GAC7GA,EAAEC,2BACFsH,UAAS,OAELwD,WAAanI,KAAKC,UAAUyF,OAAO0C,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QACvEC,SAAWlO,cAAc9B,KAAK,WAAW4B,KAAK,sBAChDqO,KAAK,CACH1L,IAAKsC,EAAEC,IAAIC,QAAU,iCACrBmJ,OAAQ,OACRC,SAAU,OACVvO,KAAM,CACFwO,OAAQ,iBACRC,QAASxJ,EAAEC,IAAIuJ,QACflQ,GAAI6P,SACJM,MAAO,UACP/F,UAAWzK,WAAWyK,UACtB2D,YAAaA,YACbqC,MAAOT,WACPU,KAAM3O,KAAK2O,KACXC,MAAO5O,KAAK4O,OAEhBC,QAAS,SAAS9O,UACV+O,QAAUhJ,KAAKkG,MAAMjM,MACzBI,YAAc,KACd2L,SAAW,uBACT,8DAA8D7F,KAAK,WAAY,gDACnE,oBAAqB,CAC/BhI,WAAY6Q,QACZP,OAAQ,mCAMtB9O,UAAUwD,IAAI,gDACXpD,GAAG,gDAAiD,SAASqD,GAC1DA,EAAEC,2BACiB,SAAfhD,kCACa4O,WACT/J,EAAEuH,KAAKC,WAAW,gBAAiB,6BACnCxH,EAAEuH,KAAKC,WAAW,uBAAwB,6BAC1CxH,EAAEuH,KAAKC,WAAW,OAAQ,8BAC1B,+BAEM,gCAAgCtI,QAAQ,SAC1C/D,YAAc,KACd2L,SAAW,+DAC+B5H,QAAQ,YAEtD,yDACgC9F,6BAC1B,oBAAsBH,WAAWK,GAAK,MAAMF,2DAI1BA,6BAC1B,oBAAsBH,WAAWK,GAAK,MAAMF,iCAIxDqB,UAAUwD,IAAI,4CAA6CpD,GAAG,4CAA6C,SAASqD,GAClHA,EAAEC,+CACA,oBAAsBlF,WAAWK,GAAK,MAAM0Q,6BAC5ClQ,MAAMX,KAAK,KAAK8Q,YAAY,gCAQ5BC,eAAiB,CAACC,QAAS7M,KAAM8M,cAC3B9M,UACC,YACA,WAYA,iBACA,YACG8M,MACAD,QAAQrO,SAASzB,OAAS,OAC1B8P,QAAQrO,SAAS1B,MAAQ,mBAV5B,YACGgQ,MACAD,QAAQrO,SAASe,SAAW,OAC5BsN,QAAQrO,SAASsG,WAAa,kBAUjC,QACGgI,MACAD,QAAQrO,SAASzB,OAAS,QAC1B8P,QAAQrO,SAAS1B,MAAQ,mBAG5B,YACA,QACD+P,QAAQrO,SAASzB,OAAS,iBAEzB,UACG+P,MACAD,QAAQrO,SAAS1B,MAAQ,MAKrCoM,MAAMS,KAAKkD,SACXzE,aAAa,CAACyE,QAAQ7Q,KACtB+G,YAAY,CAAC8J,SAAU,CAACA,QAAQ7Q,KAAK,IAGzC4B,eAAe+C,IAAI,0CAA2CpD,GAAG,0CAA2C,SAASqD,GACjHA,EAAE+J,iBACF/J,EAAEC,+BACEkM,OAASpP,cAAc9B,gBAAgB4B,KAAK,MAC5CuC,MAAO,mBAAExD,MAAMmH,KAAK,qBACZ,aAAR3D,MAAuBkJ,MAAMrN,MAAK2L,GAAe,aAAVA,EAAExH,mBACzCtC,KAAKsP,gBAAgBtK,EAAEuH,KAAKC,WAAW,mBAAoB,6BAA8B,cAGzF+C,OAAS,IAAIC,mBAAU,CACvBC,UAAW,sCAAuC,mBAAE3Q,MAAMmH,KAAK,aAC/DyJ,KAAM,CACFhH,UAAWzK,WAAWyK,UACtBpK,GAAI,EACJgE,KAAMA,KACNqN,aAAcN,QAElBO,YAAa,CACTnE,MAAOzG,EAAEuH,KAAKC,WAAW,sBAAuB,4BAC5CxH,EAAEuH,KAAKC,WAAWlK,KAAM,iCAIpCiN,OAAOM,OAEPN,OAAOO,iBAAiBP,OAAOQ,OAAOC,QAAQ,KAC1CT,OAAO7D,MAAMA,MAAM7C,UAAU,CACzBI,OAAQ,kBAEA,cAAR3G,MAAgC,SAARA,MAA2B,SAARA,0BACzC7C,UAAUI,GAAG,SAAU,sBAAsB,SAASqD,GACpDA,EAAE+J,qBACE/G,OAAQ,mBAAEpH,MAAMmR,MAAM7J,MAAM,KAC5BD,UAA+B,KAAnB9B,OAAO6B,MAAM,IAAgC,GAAnB7B,OAAO6B,MAAM,IAAW7B,OAAO6B,MAAM,QAC1ElG,KAAKmL,qBAAqBhF,WAAY,KACnC9E,QAAU2D,EAAEuH,KAAKC,WAAW,mCAAoC,4BAA6B,OACpFxM,KAAKkQ,oBAAoBlQ,KAAKkJ,WAChClJ,KAAKkQ,oBAAoBlQ,KAAKmQ,cAEzCnQ,KAAKsP,gBAAgBjO,iCACnBvC,MAAMmR,KAAI,mBAAEnR,MAAMmH,KAAK,0BAKzBjG,KAAKoQ,gBAAgBjK,kBACrBnG,KAAKsP,gBAAgBtK,EAAEuH,KAAKC,WAAW,qCACnC,sDACF1N,MAAMmR,KAAI,mBAAEnR,MAAMmH,KAAK,6BAOzCsJ,OAAOO,iBAAiBP,OAAOQ,OAAOM,gBAAiBnN,IACnDA,EAAEC,2BACFsH,UAAS,SACH6F,aAAe7C,YAAYjC,WAC7BvK,KAAuB,IAAhBnD,KAAKyS,SACZxP,IAAsB,IAAhBjD,KAAKyS,SACXpB,QAAU,KACJ,IAAIhD,MAAOC,eACT9J,cACI,OACC,WACDrB,KAAO,SACRF,IAAM,eACFuP,aAAe,cAEhBpN,EAAE8J,QAEpBkC,eAAeC,QAAS7M,MAAM,SAItCpC,eAAe+C,IAAI,wCAAyCpD,GAAG,wCAAyC,SAASqD,GAC7GA,EAAE+J,iBACF/J,EAAEC,+BACEqN,QAAUvQ,cAAc9B,gBAAgB4B,KAAK,MAC7C4F,QAAS,mBAAE,cAAcM,KAAK,eAClCwE,UAAS,OACLrI,KAAOoJ,MAAMrN,MAAK2L,GAAKA,EAAExL,IAAMqH,SAC/BrD,KAAOF,KAAKE,KACZmO,SAAW,IAAIrO,KAAKyD,YACxB4K,SAAS/H,UAAYzK,WAAWyK,UAChC+H,SAASnS,GAAK8D,KAAK9D,GACnBmS,SAASd,aAAea,QACxBC,SAASnO,KAAOA,SACZoO,SAAW,IAAIlB,mBAAU,CACzBC,UAAW,sCACE,SAARnN,MAA2B,SAARA,MAA2B,SAARA,MAA2B,QAARA,KAAiB,QAAUA,MACzFoN,KAAMe,SACNb,YAAa,CACTnE,MAAOzG,EAAEuH,KAAKC,WAAW,uBAAwB,4BAC7CxH,EAAEuH,KAAKC,WAAWlK,KAAM,iCAIpCoO,SAASb,OAETa,SAASZ,iBAAiBY,SAASX,OAAOC,QAAQ,KAC9CU,SAAShF,MAAMA,MAAM7C,UAAU,CAC3BI,OAAQ,kBAEA,cAAR3G,MAAgC,SAARA,MAA2B,SAARA,0BACzC7C,UAAUI,GAAG,SAAU,sBAAsB,SAASqD,GACpDA,EAAE+J,qBACE/G,OAAQ,mBAAEpH,MAAMmR,MAAM7J,MAAM,KAC5BD,UAA+B,KAAnB9B,OAAO6B,MAAM,IAAgC,GAAnB7B,OAAO6B,MAAM,IAAW7B,OAAO6B,MAAM,QAC1ElG,KAAKmL,qBAAqBhF,WAAY,KACnC9E,QAAU2D,EAAEuH,KAAKC,WAAW,mCAAoC,uBAAwB,OAC/ExM,KAAKkQ,oBAAoBlQ,KAAKkJ,WAChClJ,KAAKkQ,oBAAoBlQ,KAAKmQ,cAEzCnQ,KAAKsP,gBAAgBjO,iCACnBvC,MAAMmR,KAAI,mBAAEnR,MAAMmH,KAAK,0BAKzBjG,KAAKoQ,gBAAgBjK,kBACrBnG,KAAKsP,gBAAgBtK,EAAEuH,KAAKC,WAAW,qCAAsC,iDAC3E1N,MAAMmR,KAAI,mBAAEnR,MAAMmH,KAAK,6BAOzCyK,SAASZ,iBAAiBY,SAASX,OAAOM,gBAAiBnN,IACvDA,EAAEC,2BACFsH,UAAS,GACTrI,KAAOoJ,MAAMrN,MAAK2L,GAAKA,EAAExL,IAAMqH,SAC/BvD,KAAKyD,WAAa3C,EAAE8J,OAEpB/M,cAAc9B,8CAAuCwH,cAAYvH,SACjEoN,MAAQA,MAAMgC,QAAO1D,GAAKA,EAAExL,IAAMqH,SAClCuJ,eAAe9M,KAAME,MAAM,SAInCrC,cAAcgD,IAAI,uCAAwCpD,GAAG,uCAAwC,SAASqD,MAC1GA,EAAE+J,iBACF/J,EAAEC,2BACGD,EAAE6H,SAAY7H,EAAEyN,SAMb,mBAAE7R,MAAMF,SAAS,8BACfE,MAAM0E,YAAY,+BAElB1E,MAAM2E,SAAS,eACZmN,UATT3Q,cAAc9B,KAAK,+BAA+BqF,YAAY,8BAC5D1E,MAAM2E,SAAS,eACZmN,QACLxP,mBAAkB,mBAAEtC,SAUnB+R,MAAMxM,QAAO,mBAAEvF,MAAMiB,KAAK,WAAY,KACnC0B,OAAQ,mBAAE3C,MAAMiB,KAAK,SACzBE,cAAc9B,uDAAgDsD,aAAWgC,SAAS,UAGtFrC,mBAAkB,mBAAEtC,WAEhBgS,cAAgB7Q,cAAc9B,KAAK,yCACX,GAAxB2S,cAAc9O,2BACZ,cAAciE,KAAK,cAAe,IAAIxC,SAAS,UAAUD,YAAY,8BACrE,gCAAgCyC,KAAK,WAAY,gCACjD,gCAAgC3E,WAAW,gBAC1C,KACCyP,WAAaD,cAAcpH,KAAI,kBACxB,mBAAE5K,MAAMiB,KAAK,WACrB8J,0BACD,cAAc5D,KAAK,cAAe8K,YAAYtN,SAAS,UAAUD,YAAY,UAC3EsN,cAAc9O,OAAS,uBACrB,gCAAgCiE,KAAK,WAAY,gCACjD,wBAAwBxC,SAAS,gCAEjC,gCAAgCnC,WAAW,gCAC3C,wBAAwBkC,YAAY,eAK1CwN,SAAWF,cAAcpH,KAAI,kBACzBmH,OAAM,mBAAE/R,MAAMiB,KAAK,WAAsC,KAAzB,mBAAEjB,MAAMiB,KAAK,SACtC,IAEJ,mBAAEjB,MAAMiB,KAAK,YACrB8J,MAEHmH,SAAW,IAAI,IAAIC,IAAID,WAEnBF,cAAc9O,OAAS,sBACrB,kEAAkEiE,KAAK,WAAY,YAAYxC,SAAS,UAEnF,GAAnBuN,SAAShP,OACL6O,MAAMG,SAAS,KAAsB,IAAfA,SAAS,wBAC7B,mCAAmC/K,KAAK,WAAY,YAAYxC,SAAS,8BACzE,iCAAiCnC,WAAW,YAAYkC,YAAY,gCAEpE,mCAAmClC,WAAW,YAAYkC,YAAY,8BACtE,iCAAiCyC,KAAK,WAAY,YAAYxC,SAAS,WAEtEuN,SAAShP,OAAS,uBACvB,kEAAkEV,WAAW,YAC1EkC,YAAY,aAK7BvD,cAAcgD,IAAI,WAAY,+BAA+BpD,GAAG,WAAY,+BAA+B,SAASqD,GAChHA,EAAE+J,iBACF/J,EAAEC,+CACArE,MAAMoF,QAAQ,6BACd,gCAAgCA,QAAQ,gCAG5CzE,UAAUwD,IAAI,wCAAyCpD,GAAG,wCAAyCrB,eAAe0E,MAChHA,EAAE+J,iBACF/J,EAAEC,2BACmB,GAAjB4I,qBAGJA,sBACMmF,SAAWpF,SAASC,eAC1BP,MAAQ1F,KAAKkG,MAAMkF,SAAS1F,OAC5BnG,YAAYmG,MAAO0F,SAAS3L,SAAS,GAChB,GAAjBwG,mCACE,gCAAgC9F,KAAK,WAAY,gCACjD,gCAAgC3E,WAAW,kCAE3C,gCAAgCA,WAAW,YACzCyK,eAAiBD,SAAS9J,OAAS,sBACjC,gCAAgCiE,KAAK,WAAY,gCAEjD,gCAAgC3E,WAAW,oCAKvD7B,UAAUwD,IAAI,wCAAyCpD,GAAG,wCAAyCrB,eAAe0E,MAChHA,EAAE+J,iBACF/J,EAAEC,2BACE4I,eAAiBD,SAAS9J,OAAS,SAGvC+J,sBACMmF,SAAWpF,SAASC,eAC1BP,MAAQ1F,KAAKkG,MAAMkF,SAAS1F,OAC5BnG,YAAYmG,MAAO0F,SAAS3L,SAAS,GACjCwG,eAAiBD,SAAS9J,OAAS,uBACjC,gCAAgCiE,KAAK,WAAY,gCACjD,gCAAgC3E,WAAW,kCAE3C,gCAAgCA,WAAW,YACxB,GAAjByK,kCACE,gCAAgC9F,KAAK,WAAY,gCAEjD,gCAAgC3E,WAAW,sBAKnD6P,YAAc,CAACxL,OAAQyL,aAEzB3G,UAAS,GACTe,MAAMzB,MAAK,CAACC,EAAGC,IAAMA,EAAEnJ,SAAS,WAAakJ,EAAElJ,SAAS,iBACpDuQ,YAAc7F,MAAM8F,WAAUxH,GAAKA,EAAExL,IAAMqH,SAC3C4L,WAAa/F,MAAM6F,aACnBG,cAAgBD,WAAWzQ,SAAS,WACpC2Q,aAAe,KACfC,kBAAoB,QACP,MAAbN,UAAmB,IACA,GAAfC,mBAGJK,kBAAoBL,YAAc,EAClCI,aAAejG,MAAMkG,mBACrBH,WAAWzQ,SAAS,WAAa2Q,aAAa3Q,SAAS,WACvD2Q,aAAa3Q,SAAS,WAAa0Q,kBAChC,IACCH,aAAe7F,MAAMxJ,OAAS,SAGlC0P,kBAAoBL,YAAc,EAClCI,aAAejG,MAAMkG,mBACrBH,WAAWzQ,SAAS,WAAa2Q,aAAa3Q,SAAS,WACvD2Q,aAAa3Q,SAAS,WAAa0Q,cAEvChG,MAAM6F,aAAeE,WACrB/F,MAAMkG,mBAAqBD,0EACS9L,cAAYpG,IAAIgS,WAAWzQ,uEAC3B2Q,aAAanT,UAAQiB,IAAIkS,aAAa3Q,UAC1E4J,aAAa,CAAC/E,8BAIhBlG,UAAUwD,IAAI,yCAA0CpD,GAAG,yCAA0C,SAASqD,GAC5GA,EAAE+J,iBACF/J,EAAEC,+CACArE,MAAMmH,KAAK,WAAY,YAAYxC,SAAS,8BAC5C,mCAAmCnC,WAAW,YAAYkC,YAAY,UACxEiH,UAAS,OACL9E,QAAS,mBAAE,sCAAsC+D,KAAI,kBAC9C,mBAAE5K,MAAMiB,KAAK,WACrB8J,YACGpI,OAAQ,IAAI0K,MAAOC,UACzBzG,OAAOD,SAAQ,CAACtD,KAAMuP,SACdJ,YAAa,oEAA4CnP,YACzDwP,YAAcpG,MAAM8F,WAAUxH,GAAKA,EAAExL,IAAM8D,OAC3C8H,OAASpE,KAAKkG,MAAMlG,KAAKC,UAAUyF,MAAMoG,eAC7C1H,OAAOpJ,SAASW,MAAQA,MACxB+J,MAAMoG,aAAe1H,OACrBqH,WAAWnT,SACXiH,YAAY,CAAC6E,QAAS,MAAM,GACxByH,GAAKhM,OAAO3D,OAAS,GACrBqD,YAAY,GAAIM,QAAQ,MAGhC+E,aAAa/E,+BAGflG,UAAUwD,IAAI,2CAA4CpD,GAAG,2CAA4C,SAASqD,GAChHA,EAAE+J,iBACF/J,EAAEC,+CACArE,MAAMmH,KAAK,WAAY,YAAYxC,SAAS,+DACXnC,WAAW,YAAYkC,YAAY,UACtEiH,UAAS,OACL9E,QAAS,mBAAE,sCAAsC+D,KAAI,kBAC9C,mBAAE5K,MAAMiB,KAAK,WACrB8J,MACHlE,OAAOD,SAAQ,CAACtD,KAAMuP,SACdJ,YAAa,oEAA4CnP,YACzDwP,YAAcpG,MAAM8F,WAAUxH,GAAKA,EAAExL,IAAM8D,OAC3C8H,OAASpE,KAAKkG,MAAMlG,KAAKC,UAAUyF,MAAMoG,sBACtC1H,OAAOpJ,SAASW,MACvB+J,MAAMoG,aAAe1H,OACrBqH,WAAWnT,SACXiH,YAAY,CAAC6E,QAAS,MAAM,GACxByH,GAAKhM,OAAO3D,OAAS,GACrBqD,YAAY,GAAIM,QAAQ,MAGhC+E,aAAa/E,WAGjBzF,eAAe+C,IAAI,sCAAuCpD,GAAG,sCAAuC,SAASqD,GACzGA,EAAE+J,iBACF/J,EAAEC,+BACEwC,QAAS,mBAAE,cAAcM,KAAK,eAClCN,OAASA,OAAOS,MAAM,WAChByL,SAAWpE,YAAYjC,UAEzB7F,OAAO3D,OAAS,EAAG,CACnB2D,OAASwH,iBAAiBxH,OAAQ,YAC9BmM,QAAU,MACdtG,MAAMzB,MAAK,CAACC,EAAGC,IAAMA,EAAEnJ,SAAS,WAAakJ,EAAElJ,SAAS,aACxD6E,OAAOD,SAAStD,OACZ0P,QAAQ7F,KAAKT,MAAM8F,WAAUxH,GAAKA,EAAExL,IAAM8D,WAE9C0P,QAAQ/H,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACvBnM,KAAKiU,IAAID,QAAQ,GAAKA,QAAQA,QAAQ9P,OAAS,KAAO2D,OAAO3D,OAAS,GAClEqC,OAAOmH,MAAMsG,QAAQ,IAAIhR,SAAS,aAAe+Q,gBAK7DlM,OAAOD,SAAStD,OACZ+O,YAAY/O,KAAM,SAEtBqI,UAAS,GACTjK,oBAAmB,4DAAoCmF,OAAO,cAGlEzF,eAAe+C,IAAI,wCAAyCpD,GAAG,wCAAyC,SAASqD,GAC7GA,EAAE+J,iBACF/J,EAAEC,+BACEwC,QAAS,mBAAE,cAAcM,KAAK,eAClCN,OAASA,OAAOS,MAAM,WAChB4L,YAnhBctE,CAAAA,UACD,GAAfA,KAAK1L,cACE,MAEPoL,IAAMM,KAAKhE,KAAItH,MAAQA,KAAK9D,KAC5BqP,OAASR,iBAAiBC,IAAK,OAC/BQ,OAASF,KAAKvP,MAAKiE,MAAQA,KAAK9D,IAAMqP,OAAO,KAAI7M,SAAS,kBACvDuD,OAAOuJ,SA4gBMqE,CAAezG,UAE/B7F,OAAO3D,OAAS,EAAG,CACnB2D,OAASwH,iBAAiBxH,OAAQ,WAC9BmM,QAAU,MACdtG,MAAMzB,MAAK,CAACC,EAAGC,IAAMD,EAAElJ,SAAS,WAAamJ,EAAEnJ,SAAS,aACxD6E,OAAOD,SAAStD,OACZ0P,QAAQ7F,KAAKT,MAAM8F,WAAUxH,GAAKA,EAAExL,IAAM8D,WAE9C0P,QAAQ/H,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACvBnM,KAAKiU,IAAID,QAAQ,GAAKA,QAAQA,QAAQ9P,OAAS,KAAO2D,OAAO3D,OAAS,GAClEqC,OAAOmH,MAAMsG,QAAQ,IAAIhR,SAAS,aAAekR,mBAK7DrM,OAAOD,SAAStD,OACZ+O,YAAY/O,KAAM,WAEtBqI,UAAS,GACTjK,oBAAmB,4DAAoCmF,OAAO,cAGlEzF,eAAe+C,IAAI,0CAA2CpD,GAAG,0CAA2C,SAASqD,GACjHA,EAAE+J,iBACF/J,EAAEC,+BACEwC,QAAS,mBAAE,cAAcM,KAAK,eAClCN,OAASA,OAAOS,MAAM,KACtBT,OAAOD,SAAStD,QACK,oEAA4CA,YAClDhE,6BACT,cAAc6H,KAAK,cAAe,IAAIxC,SAAS,UAAUD,YAAY,aAE3EiH,UAAS,GACTC,aAAa,SAGjBxK,eAAe+C,IAAI,wCAAyCpD,GAAG,wCAAyC,SAASqD,GAC7GA,EAAE+J,iBACF/J,EAAEC,2BACFsH,UAAS,SAEH6F,aAAe7C,YAAYjC,WAC7B7F,QAAS,mBAAE,cAAcM,KAAK,eAClCN,OAASA,OAAOS,MAAM,KACtBT,OAASwH,iBAAiBxH,OAAQ,WAC9BmI,SAAW,OACV,IAAI6D,EAAI,EAAGA,EAAIhM,OAAO3D,OAAQ2P,IAAK,KAChC3H,EAAIrE,OAAOgM,GACXJ,YAAa,oEAA4CvH,SAC7DuH,WAAW/N,YAAY,gBACjBpB,KAAOoJ,MAAMrN,MAAK2L,GAAKA,EAAExL,IAAM0L,QACjCmF,QAAUrJ,KAAKkG,MAAMlG,KAAKC,UAAU3D,UACxC+M,QAAQrO,SAAWM,kBAAkBmQ,YACjCnP,KAAKtB,SAASW,QACd0N,QAAQrO,SAASW,MAAQ4C,OAAOjC,KAAKtB,SAASW,OAAS,GAE3D0N,QAAQ7Q,IAAK,IAAI6N,MAAOC,UAAYuF,EACpC7D,SAAS7B,KAAKkD,SACdA,QAAQrO,SAAS,WAAauD,OAAOiM,cAAgBqB,EAAI,EACzDnG,MAAMS,KAAKkD,SACPwC,GAAKhM,OAAO3D,OAAS,EAAG,OAClBkQ,WAAapE,SAASpE,KAAII,GAAKA,EAAExL,yBACrC,cAAc2H,KAAK,cAAeiM,WAAWC,KAAK,MAAM1O,SAAS,UAAUD,YAAY,UACzF6B,YAAYyI,SAAUoE,YAAY,GAElCzH,UAAS,GACThL,SAASC,cAAc,8BAA8BkR,QACrDpQ,oBAAmB,4DAAoC2O,QAAQ7Q,WAC/DoM,aAAawH,iBAMzBhS,eAAeL,GAAG,UAAW,+BAA+B,SAASqD,OAC7DyC,QAAS,mBAAE,cAAcM,KAAK,eAClCN,OAASA,OAAOS,MAAM,SACjB,IAAIuL,EAAI,EAAGA,EAAIhM,OAAO3D,OAAQ2P,IAAK,KAChC3H,EAAIrE,OAAOgM,GACXJ,YAAa,oEAA4CvH,YAC3C7C,MAAdoK,WAAyB,KACrBzQ,SAAWyQ,WAAWzQ,WAC1BA,SAAS,WAAasR,SAASb,WAAWhS,IAAI,gBAC1C8S,KAAOnP,EAAE6H,SAAW7H,EAAEyN,QACtB2B,KAAO,SAEXpP,EAAE+J,iBACF/J,EAAEC,2BACMD,EAAEqP,SACD,UACGzR,SAASC,IAAM,IACfD,SAASC,IAAMD,SAASC,IAAMuR,KAC9B5H,aAAa/E,mBAGhB,YACG7E,SAASC,IAAMwQ,WAAW3Q,cAAgBX,cAAc9B,gBAAgBkB,WACxEyB,SAASC,IAAMD,SAASC,IAAMuR,KAC9B5H,aAAa/E,mBAGhB,YACG7E,SAASG,KAAO,IAChBH,SAASG,KAAOH,SAASG,KAAOqR,KAChC5H,aAAa/E,mBAGhB,aACG7E,SAASG,KAAOsQ,WAAW7Q,aAAeT,cAAc9B,gBAAgBiB,UACxE0B,SAASG,KAAOH,SAASG,KAAOqR,KAChC5H,aAAa/E,mBAGhB,0EACmCzB,QAAQ,aAE3C,gBACGmO,0DACkCnO,QAAQ,yBAMtDqN,WAAWhS,IAAIuB,UACfM,kBAAkBmQ,qCAK5B9R,UAAUI,GAAG,qBAAqB,SAASqD,OACrCsP,QAAUtP,EAAEuP,cAAczF,OAAO/O,WACjCoR,OAASpP,cAAc9B,gBAAgB4B,KAAK,MAC5CsP,QAAUmD,QAAQlU,KAClB2B,cAAc9B,gCAAyBkR,cAAYjR,uDACvBA,aAKpCsU,OAAO5C,iBAAiB,gBAAiB5M,OACjB,OAAhB/C,YAAsB,OAChBwS,oBAAsB3N,EAAEuH,KAAKC,WAAW,iBAAkB,+BAChEtJ,EAAE0P,YAAcD,oBACTA,2BAEJ,0BAQM1U,iBACZgB,OAAOyE,aACP1F,gBAAgBC,YACjBa,KAAK8D,eACL3E,WAAW4U,UAAW,SAEpBpK,cAAgB3J,KAAK4N,OAAOzO,WAAY,aACzC6B,kBAAkB7B,WAAYwK"}